{"version":3,"file":"4a7e7233-0086057d591544b5972f.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/react-muuri/dist/index.es.js"],"sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\nvar namespace = 'Muuri';\nvar gridInstances = {};\nvar eventSynchronize = 'synchronize';\nvar eventLayoutStart = 'layoutStart';\nvar eventLayoutEnd = 'layoutEnd';\nvar eventAdd = 'add';\nvar eventRemove = 'remove';\nvar eventShowStart = 'showStart';\nvar eventShowEnd = 'showEnd';\nvar eventHideStart = 'hideStart';\nvar eventHideEnd = 'hideEnd';\nvar eventFilter = 'filter';\nvar eventSort = 'sort';\nvar eventMove = 'move';\nvar eventSend = 'send';\nvar eventBeforeSend = 'beforeSend';\nvar eventReceive = 'receive';\nvar eventBeforeReceive = 'beforeReceive';\nvar eventDragInit = 'dragInit';\nvar eventDragStart = 'dragStart';\nvar eventDragMove = 'dragMove';\nvar eventDragScroll = 'dragScroll';\nvar eventDragEnd = 'dragEnd';\nvar eventDragReleaseStart = 'dragReleaseStart';\nvar eventDragReleaseEnd = 'dragReleaseEnd';\nvar eventDestroy = 'destroy';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar toConsumableArray = function toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n/**\r\n * Muuri Emitter\r\n * Copyright (c) 2018-present, Niklas Rämö <inramo@gmail.com>\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/src/Emitter/LICENSE.md\r\n */\n\n/**\r\n * Event emitter constructor.\r\n *\r\n * @class\r\n */\n\n\nvar Emitter = function (_Component) {\n  inherits(Emitter, _Component);\n\n  function Emitter() {\n    classCallCheck(this, Emitter);\n\n    var _this = possibleConstructorReturn(this, (Emitter.__proto__ || Object.getPrototypeOf(Emitter)).call(this));\n\n    _this._events = {};\n    _this._queue = [];\n    _this._counter = 0;\n    _this._isDestroyed = false;\n    return _this;\n  }\n  /**\r\n   * Public prototype methods\r\n   * ************************\r\n   */\n\n  /**\r\n   * Bind an event listener.\r\n   *\r\n   * @public\r\n   * @memberof Emitter.prototype\r\n   * @param {String} event\r\n   * @param {Function} listener\r\n   * @returns {Emitter}\r\n   */\n\n\n  createClass(Emitter, [{\n    key: 'on',\n    value: function on(event, listener) {\n      if (this._isDestroyed) return this; // Get listeners queue and create it if it does not exist.\n\n      var listeners = this._events[event];\n      if (!listeners) listeners = this._events[event] = []; // Add the listener to the queue.\n\n      listeners.push(listener);\n      return this;\n    }\n    /**\r\n     * Bind an event listener that is triggered only once.\r\n     *\r\n     * @public\r\n     * @memberof Emitter.prototype\r\n     * @param {String} event\r\n     * @param {Function} listener\r\n     * @returns {Emitter}\r\n     */\n\n  }, {\n    key: 'once',\n    value: function once(event, listener) {\n      if (this._isDestroyed) return this;\n\n      var callback = function () {\n        this.off(event, callback);\n        listener.apply(undefined, arguments);\n      }.bind(this);\n\n      return this.on(event, callback);\n    }\n    /**\r\n     * Unbind all event listeners that match the provided listener function.\r\n     *\r\n     * @public\r\n     * @memberof Emitter.prototype\r\n     * @param {String} event\r\n     * @param {Function} [listener]\r\n     * @returns {Emitter}\r\n     */\n\n  }, {\n    key: 'off',\n    value: function off(event, listener) {\n      if (this._isDestroyed) return this; // Get listeners and return immediately if none is found.\n\n      var listeners = this._events[event];\n      if (!listeners || !listeners.length) return this; // If no specific listener is provided remove all listeners.\n\n      if (!listener) {\n        listeners.length = 0;\n        return this;\n      } // Remove all matching listeners.\n\n\n      var i = listeners.length;\n\n      while (i--) {\n        if (listener === listeners[i]) listeners.splice(i, 1);\n      }\n\n      return this;\n    }\n    /**\r\n     * Emit all listeners in a specified event with the provided arguments.\r\n     *\r\n     * @public\r\n     * @memberof Emitter.prototype\r\n     * @param {String} event\r\n     * @param {*} [arg1]\r\n     * @param {*} [arg2]\r\n     * @param {*} [arg3]\r\n     * @returns {Emitter}\r\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(event, arg1, arg2, arg3) {\n      if (this._isDestroyed) return this; // Get event listeners and quit early if there's no listeners.\n\n      var listeners = this._events[event];\n      if (!listeners || !listeners.length) return this;\n      var queue = this._queue;\n      var qLength = queue.length;\n      var aLength = arguments.length - 1;\n      var i = void 0; // Add the current listeners to the callback queue before we process them.\n      // This is necessary to guarantee that all of the listeners are called in\n      // correct order even if new event listeners are removed/added during\n      // processing and/or events are emitted during processing.\n\n      for (i = 0; i < listeners.length; i++) {\n        queue.push(listeners[i]);\n      } // Increment queue counter. This is needed for the scenarios where emit is\n      // triggered while the queue is already processing. We need to keep track of\n      // how many \"queue processors\" there are active so that we can safely reset\n      // the queue in the end when the last queue processor is finished.\n\n\n      ++this._counter; // Process the queue (the specific part of it for this emit).\n\n      for (i = qLength, qLength = queue.length; i < qLength; i++) {\n        // prettier-ignore\n        aLength === 0 ? queue[i]() : // eslint-disable-line\n        aLength === 1 ? queue[i](arg1) : // eslint-disable-line\n        aLength === 2 ? queue[i](arg1, arg2) : // eslint-disable-line\n        queue[i](arg1, arg2, arg3); // eslint-disable-line\n        // Stop processing if the emitter is destroyed.\n\n        if (this._isDestroyed) return this;\n      } // Decrement queue process counter.\n\n\n      --this._counter; // Reset the queue if there are no more queue processes running.\n\n      if (!this._counter) queue.length = 0;\n      return this;\n    }\n    /**\r\n     * Destroy emitter instance. Basically just removes all bound listeners.\r\n     *\r\n     * @public\r\n     * @memberof Emitter.prototype\r\n     * @returns {Emitter}\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this._isDestroyed) return this;\n      var events = this._events;\n      var event = void 0; // Flag as destroyed.\n\n      this._isDestroyed = true; // Reset queue (if queue is currently processing this will also stop that).\n\n      this._queue.length = this._counter = 0; // Remove all listeners.\n\n      for (event in events) {\n        if (events[event]) {\n          events[event].length = 0;\n          events[event] = undefined;\n        }\n      }\n\n      return this;\n    }\n  }]);\n  return Emitter;\n}(Component);\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n// Set up the default export values.\n\n\nvar isTransformSupported = false;\nvar transformStyle = 'transform';\nvar transformProp = 'transform'; // Find the supported transform prop and style names.\n\nvar style = 'transform';\nvar styleCap = 'Transform';\n['', 'Webkit', 'Moz', 'O', 'ms'].forEach(function (prefix) {\n  if (isTransformSupported) return;\n  var propName = prefix ? prefix + styleCap : style;\n\n  if (document.documentElement.style[propName] !== undefined) {\n    prefix = prefix.toLowerCase();\n    transformStyle = prefix ? '-' + prefix + '-' + style : style;\n    transformProp = propName;\n    isTransformSupported = true;\n  }\n});\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\nvar stylesCache = typeof WeakMap === 'function' ? new WeakMap() : null;\n/**\r\n * Returns the computed value of an element's style property as a string.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {String} style\r\n * @returns {String}\r\n */\n\nfunction getStyle(element, style) {\n  var styles = stylesCache && stylesCache.get(element);\n\n  if (!styles) {\n    styles = window.getComputedStyle(element, null);\n    stylesCache && stylesCache.set(element, styles);\n  }\n\n  return styles.getPropertyValue(style === 'transform' ? transformStyle : style);\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n\nvar styleNameRegEx = /([A-Z])/g;\n/**\r\n * Transforms a camel case style property to kebab case style property.\r\n *\r\n * @param {String} string\r\n * @returns {String}\r\n */\n\nfunction getStyleName(string) {\n  return string.replace(styleNameRegEx, '-$1').toLowerCase();\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n/**\r\n * Set inline styles to an element.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {Object} styles\r\n */\n\n\nfunction setStyles(element, styles) {\n  for (var prop in styles) {\n    element.style[prop === 'transform' ? transformProp : prop] = styles[prop];\n  }\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n/**\r\n * Item animation handler powered by Web Animations API.\r\n *\r\n * @class\r\n * @param {HTMLElement} element\r\n */\n\n\nvar ItemAnimate = function (_Component) {\n  inherits(ItemAnimate, _Component);\n\n  function ItemAnimate(element) {\n    classCallCheck(this, ItemAnimate);\n\n    var _this = possibleConstructorReturn(this, (ItemAnimate.__proto__ || Object.getPrototypeOf(ItemAnimate)).call(this, element));\n\n    _this._element = element;\n    _this._animation = null;\n    _this._callback = null;\n    _this._props = [];\n    _this._values = [];\n    _this._keyframes = [];\n    _this._options = {};\n    _this._isDestroyed = false;\n    _this._onFinish = _this._onFinish.bind(_this);\n    return _this;\n  }\n  /**\r\n   * Public prototype methods\r\n   * ************************\r\n   */\n\n  /**\r\n   * Start instance's animation. Automatically stops current animation if it is\r\n   * running.\r\n   *\r\n   * @public\r\n   * @memberof ItemAnimate.prototype\r\n   * @param {Object} propsFrom\r\n   * @param {Object} propsTo\r\n   * @param {Object} [options]\r\n   * @param {Number} [options.duration=300]\r\n   * @param {String} [options.easing='ease']\r\n   * @param {Function} [options.onFinish]\r\n   */\n\n\n  createClass(ItemAnimate, [{\n    key: 'start',\n    value: function start(propsFrom, propsTo, options) {\n      if (this._isDestroyed) return;\n      var animation = this._animation;\n      var currentProps = this._props;\n      var currentValues = this._values;\n      var opts = options || 0;\n      var cancelAnimation = false; // If we have an existing animation running, let's check if it needs to be\n      // cancelled or if it can continue running.\n\n      if (animation) {\n        var propCount = 0;\n        var propIndex = void 0; // Check if the requested animation target props and values match with the\n        // current props and values.\n\n        for (var propName in propsTo) {\n          ++propCount;\n          propIndex = currentProps.indexOf(propName);\n\n          if (propIndex === -1 || propsTo[propName] !== currentValues[propIndex]) {\n            cancelAnimation = true;\n            break;\n          }\n        } // Check if the target props count matches current props count. This is\n        // needed for the edge case scenario where target props contain the same\n        // styles as current props, but the current props have some additional\n        // props.\n\n\n        if (!cancelAnimation && propCount !== currentProps.length) {\n          cancelAnimation = true;\n        }\n      } // Cancel animation (if required).\n\n\n      if (cancelAnimation) animation.cancel(); // Store animation callback.\n\n      this._callback = typeof opts.onFinish === 'function' ? opts.onFinish : null; // If we have a running animation that does not need to be cancelled, let's\n      // call it a day here and let it run.\n\n      if (animation && !cancelAnimation) return; // Store target props and values to instance.\n\n      currentProps.length = currentValues.length = 0;\n\n      for (var _propName in propsTo) {\n        currentProps.push(_propName);\n        currentValues.push(propsTo[_propName]);\n      } // Set up keyframes.\n\n\n      var animKeyframes = this._keyframes;\n      animKeyframes[0] = propsFrom;\n      animKeyframes[1] = propsTo; // Set up options.\n\n      var animOptions = this._options;\n      animOptions.duration = opts.duration || 300;\n      animOptions.easing = opts.easing || 'ease'; // Start the animation\n\n      var element = this._element;\n      animation = element.animate(animKeyframes, animOptions);\n      animation.onfinish = this._onFinish;\n      this._animation = animation; // Set the end styles. This makes sure that the element stays at the end\n      // values after animation is finished.\n\n      setStyles(element, propsTo);\n    }\n    /**\r\n     * Stop instance's current animation if running.\r\n     *\r\n     * @public\r\n     * @memberof ItemAnimate.prototype\r\n     * @param {Object} [styles]\r\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop(styles) {\n      if (this._isDestroyed || !this._animation) return;\n      var element = this._element;\n      var currentProps = this._props;\n      var currentValues = this._values;\n      var propName = void 0;\n      var propValue = void 0;\n      var i = void 0; // Calculate (if not provided) and set styles.\n\n      if (!styles) {\n        for (i = 0; i < currentProps.length; i++) {\n          propName = currentProps[i];\n          propValue = getStyle(element, getStyleName(propName));\n          element.style[propName === 'transform' ? transformProp : propName] = propValue;\n        }\n      } else {\n        setStyles(element, styles);\n      } //  Cancel animation.\n\n\n      this._animation.cancel();\n\n      this._animation = this._callback = null; // Reset current props and values.\n\n      currentProps.length = currentValues.length = 0;\n    }\n    /**\r\n     * Check if the item is being animated currently.\r\n     *\r\n     * @public\r\n     * @memberof ItemAnimate.prototype\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'isAnimating',\n    value: function isAnimating() {\n      return !!this._animation;\n    }\n    /**\r\n     * Destroy the instance and stop current animation if it is running.\r\n     *\r\n     * @public\r\n     * @memberof ItemAnimate.prototype\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this._isDestroyed) return;\n      this.stop();\n      this._element = this._options = this._keyframes = null;\n      this._isDestroyed = true;\n    }\n    /**\r\n     * Private prototype methods\r\n     * *************************\r\n     */\n\n    /**\r\n     * Animation end handler.\r\n     *\r\n     * @private\r\n     * @memberof ItemAnimate.prototype\r\n     */\n\n  }, {\n    key: '_onFinish',\n    value: function _onFinish() {\n      var callback = this._callback;\n      this._animation = this._callback = null;\n      this._props.length = this._values.length = 0;\n      callback && callback();\n    }\n  }]);\n  return ItemAnimate;\n}(Component);\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar hammer = createCommonjsModule(function (module) {\n  /*! Hammer.JS - v2.0.7 - 2016-04-22\n   * http://hammerjs.github.io/\n   *\n   * Copyright (c) 2016 Jorik Tangelder;\n   * Licensed under the MIT license */\n  (function (window, document, exportName, undefined) {\n    var VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n    var TEST_ELEMENT = document.createElement('div');\n    var TYPE_FUNCTION = 'function';\n    var round = Math.round;\n    var abs = Math.abs;\n    var now = Date.now;\n    /**\n     * set a timeout with a given scope\n     * @param {Function} fn\n     * @param {Number} timeout\n     * @param {Object} context\n     * @returns {number}\n     */\n\n    function setTimeoutContext(fn, timeout, context) {\n      return setTimeout(bindFn(fn, context), timeout);\n    }\n    /**\n     * if the argument is an array, we want to execute the fn on each entry\n     * if it aint an array we don't want to do a thing.\n     * this is used by all the methods that accept a single and array argument.\n     * @param {*|Array} arg\n     * @param {String} fn\n     * @param {Object} [context]\n     * @returns {Boolean}\n     */\n\n\n    function invokeArrayArg(arg, fn, context) {\n      if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * walk objects and arrays\n     * @param {Object} obj\n     * @param {Function} iterator\n     * @param {Object} context\n     */\n\n\n    function each(obj, iterator, context) {\n      var i;\n\n      if (!obj) {\n        return;\n      }\n\n      if (obj.forEach) {\n        obj.forEach(iterator, context);\n      } else if (obj.length !== undefined) {\n        i = 0;\n\n        while (i < obj.length) {\n          iterator.call(context, obj[i], i, obj);\n          i++;\n        }\n      } else {\n        for (i in obj) {\n          obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n      }\n    }\n    /**\n     * wrap a method with a deprecation warning and stack trace\n     * @param {Function} method\n     * @param {String} name\n     * @param {String} message\n     * @returns {Function} A new function wrapping the supplied method.\n     */\n\n\n    function deprecate(method, name, message) {\n      var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n      return function () {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '').replace(/^\\s+at\\s+/gm, '').replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n        var log = window.console && (window.console.warn || window.console.log);\n\n        if (log) {\n          log.call(window.console, deprecationMessage, stack);\n        }\n\n        return method.apply(this, arguments);\n      };\n    }\n    /**\n     * extend object.\n     * means that properties in dest will be overwritten by the ones in src.\n     * @param {Object} target\n     * @param {...Object} objects_to_assign\n     * @returns {Object} target\n     */\n\n\n    var assign;\n\n    if (typeof Object.assign !== 'function') {\n      assign = function assign(target) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n\n        for (var index = 1; index < arguments.length; index++) {\n          var source = arguments[index];\n\n          if (source !== undefined && source !== null) {\n            for (var nextKey in source) {\n              if (source.hasOwnProperty(nextKey)) {\n                output[nextKey] = source[nextKey];\n              }\n            }\n          }\n        }\n\n        return output;\n      };\n    } else {\n      assign = Object.assign;\n    }\n    /**\n     * extend object.\n     * means that properties in dest will be overwritten by the ones in src.\n     * @param {Object} dest\n     * @param {Object} src\n     * @param {Boolean} [merge=false]\n     * @returns {Object} dest\n     */\n\n\n    var extend = deprecate(function extend(dest, src, merge) {\n      var keys = Object.keys(src);\n      var i = 0;\n\n      while (i < keys.length) {\n        if (!merge || merge && dest[keys[i]] === undefined) {\n          dest[keys[i]] = src[keys[i]];\n        }\n\n        i++;\n      }\n\n      return dest;\n    }, 'extend', 'Use `assign`.');\n    /**\n     * merge the values from src in the dest.\n     * means that properties that exist in dest will not be overwritten by src\n     * @param {Object} dest\n     * @param {Object} src\n     * @returns {Object} dest\n     */\n\n    var merge = deprecate(function merge(dest, src) {\n      return extend(dest, src, true);\n    }, 'merge', 'Use `assign`.');\n    /**\n     * simple class inheritance\n     * @param {Function} child\n     * @param {Function} base\n     * @param {Object} [properties]\n     */\n\n    function inherit(child, base, properties) {\n      var baseP = base.prototype,\n          childP;\n      childP = child.prototype = Object.create(baseP);\n      childP.constructor = child;\n      childP._super = baseP;\n\n      if (properties) {\n        assign(childP, properties);\n      }\n    }\n    /**\n     * simple function bind\n     * @param {Function} fn\n     * @param {Object} context\n     * @returns {Function}\n     */\n\n\n    function bindFn(fn, context) {\n      return function boundFn() {\n        return fn.apply(context, arguments);\n      };\n    }\n    /**\n     * let a boolean value also be a function that must return a boolean\n     * this first item in args will be used as the context\n     * @param {Boolean|Function} val\n     * @param {Array} [args]\n     * @returns {Boolean}\n     */\n\n\n    function boolOrFn(val, args) {\n      if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n      }\n\n      return val;\n    }\n    /**\n     * use the val2 when val1 is undefined\n     * @param {*} val1\n     * @param {*} val2\n     * @returns {*}\n     */\n\n\n    function ifUndefined(val1, val2) {\n      return val1 === undefined ? val2 : val1;\n    }\n    /**\n     * addEventListener with multiple events at once\n     * @param {EventTarget} target\n     * @param {String} types\n     * @param {Function} handler\n     */\n\n\n    function addEventListeners(target, types, handler) {\n      each(splitStr(types), function (type) {\n        target.addEventListener(type, handler, false);\n      });\n    }\n    /**\n     * removeEventListener with multiple events at once\n     * @param {EventTarget} target\n     * @param {String} types\n     * @param {Function} handler\n     */\n\n\n    function removeEventListeners(target, types, handler) {\n      each(splitStr(types), function (type) {\n        target.removeEventListener(type, handler, false);\n      });\n    }\n    /**\n     * find if a node is in the given parent\n     * @method hasParent\n     * @param {HTMLElement} node\n     * @param {HTMLElement} parent\n     * @return {Boolean} found\n     */\n\n\n    function hasParent(node, parent) {\n      while (node) {\n        if (node == parent) {\n          return true;\n        }\n\n        node = node.parentNode;\n      }\n\n      return false;\n    }\n    /**\n     * small indexOf wrapper\n     * @param {String} str\n     * @param {String} find\n     * @returns {Boolean} found\n     */\n\n\n    function inStr(str, find) {\n      return str.indexOf(find) > -1;\n    }\n    /**\n     * split string on whitespace\n     * @param {String} str\n     * @returns {Array} words\n     */\n\n\n    function splitStr(str) {\n      return str.trim().split(/\\s+/g);\n    }\n    /**\n     * find if a array contains the object using indexOf or a simple polyFill\n     * @param {Array} src\n     * @param {String} find\n     * @param {String} [findByKey]\n     * @return {Boolean|Number} false when not found, or the index\n     */\n\n\n    function inArray(src, find, findByKey) {\n      if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n      } else {\n        var i = 0;\n\n        while (i < src.length) {\n          if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {\n            return i;\n          }\n\n          i++;\n        }\n\n        return -1;\n      }\n    }\n    /**\n     * convert array-like objects to real arrays\n     * @param {Object} obj\n     * @returns {Array}\n     */\n\n\n    function toArray(obj) {\n      return Array.prototype.slice.call(obj, 0);\n    }\n    /**\n     * unique array with objects based on a key (like 'id') or just by the array's value\n     * @param {Array} src [{id:1},{id:2},{id:1}]\n     * @param {String} [key]\n     * @param {Boolean} [sort=False]\n     * @returns {Array} [{id:1},{id:2}]\n     */\n\n\n    function uniqueArray(src, key, sort) {\n      var results = [];\n      var values = [];\n      var i = 0;\n\n      while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n\n        if (inArray(values, val) < 0) {\n          results.push(src[i]);\n        }\n\n        values[i] = val;\n        i++;\n      }\n\n      if (sort) {\n        if (!key) {\n          results = results.sort();\n        } else {\n          results = results.sort(function sortUniqueArray(a, b) {\n            return a[key] > b[key];\n          });\n        }\n      }\n\n      return results;\n    }\n    /**\n     * get the prefixed property\n     * @param {Object} obj\n     * @param {String} property\n     * @returns {String|Undefined} prefixed\n     */\n\n\n    function prefixed(obj, property) {\n      var prefix, prop;\n      var camelProp = property[0].toUpperCase() + property.slice(1);\n      var i = 0;\n\n      while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = prefix ? prefix + camelProp : property;\n\n        if (prop in obj) {\n          return prop;\n        }\n\n        i++;\n      }\n\n      return undefined;\n    }\n    /**\n     * get a unique id\n     * @returns {number} uniqueId\n     */\n\n\n    var _uniqueId = 1;\n\n    function uniqueId() {\n      return _uniqueId++;\n    }\n    /**\n     * get the window object of an element\n     * @param {HTMLElement} element\n     * @returns {DocumentView|Window}\n     */\n\n\n    function getWindowForElement(element) {\n      var doc = element.ownerDocument || element;\n      return doc.defaultView || doc.parentWindow || window;\n    }\n\n    var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n    var SUPPORT_TOUCH = ('ontouchstart' in window);\n    var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\n    var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n    var INPUT_TYPE_TOUCH = 'touch';\n    var INPUT_TYPE_PEN = 'pen';\n    var INPUT_TYPE_MOUSE = 'mouse';\n    var INPUT_TYPE_KINECT = 'kinect';\n    var COMPUTE_INTERVAL = 25;\n    var INPUT_START = 1;\n    var INPUT_MOVE = 2;\n    var INPUT_END = 4;\n    var INPUT_CANCEL = 8;\n    var DIRECTION_NONE = 1;\n    var DIRECTION_LEFT = 2;\n    var DIRECTION_RIGHT = 4;\n    var DIRECTION_UP = 8;\n    var DIRECTION_DOWN = 16;\n    var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\n    var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\n    var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n    var PROPS_XY = ['x', 'y'];\n    var PROPS_CLIENT_XY = ['clientX', 'clientY'];\n    /**\n     * create new input type manager\n     * @param {Manager} manager\n     * @param {Function} callback\n     * @returns {Input}\n     * @constructor\n     */\n\n    function Input(manager, callback) {\n      var self = this;\n      this.manager = manager;\n      this.callback = callback;\n      this.element = manager.element;\n      this.target = manager.options.inputTarget; // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n      // so when disabled the input events are completely bypassed.\n\n      this.domHandler = function (ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n          self.handler(ev);\n        }\n      };\n\n      this.init();\n    }\n\n    Input.prototype = {\n      /**\n       * should handle the inputEvent data and trigger the callback\n       * @virtual\n       */\n      handler: function handler() {},\n\n      /**\n       * bind the events\n       */\n      init: function init() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n      },\n\n      /**\n       * unbind the events\n       */\n      destroy: function destroy() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n      }\n    };\n    /**\n     * create new input type manager\n     * called by the Manager constructor\n     * @param {Hammer} manager\n     * @returns {Input}\n     */\n\n    function createInputInstance(manager) {\n      var Type;\n      var inputClass = manager.options.inputClass;\n\n      if (inputClass) {\n        Type = inputClass;\n      } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n      } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n      } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n      } else {\n        Type = TouchMouseInput;\n      }\n\n      return new Type(manager, inputHandler);\n    }\n    /**\n     * handle input events\n     * @param {Manager} manager\n     * @param {String} eventType\n     * @param {Object} input\n     */\n\n\n    function inputHandler(manager, eventType, input) {\n      var pointersLen = input.pointers.length;\n      var changedPointersLen = input.changedPointers.length;\n      var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n      var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;\n      input.isFirst = !!isFirst;\n      input.isFinal = !!isFinal;\n\n      if (isFirst) {\n        manager.session = {};\n      } // source event is the normalized value of the domEvents\n      // like 'touchstart, mouseup, pointerdown'\n\n\n      input.eventType = eventType; // compute scale, rotation etc\n\n      computeInputData(manager, input); // emit secret event\n\n      manager.emit('hammer.input', input);\n      manager.recognize(input);\n      manager.session.prevInput = input;\n    }\n    /**\n     * extend the data with some usable properties like scale, rotate, velocity etc\n     * @param {Object} manager\n     * @param {Object} input\n     */\n\n\n    function computeInputData(manager, input) {\n      var session = manager.session;\n      var pointers = input.pointers;\n      var pointersLength = pointers.length; // store the first input to calculate the distance and direction\n\n      if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n      } // to compute scale and rotation we need to store the multiple touches\n\n\n      if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n      } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n      }\n\n      var firstInput = session.firstInput;\n      var firstMultiple = session.firstMultiple;\n      var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n      var center = input.center = getCenter(pointers);\n      input.timeStamp = now();\n      input.deltaTime = input.timeStamp - firstInput.timeStamp;\n      input.angle = getAngle(offsetCenter, center);\n      input.distance = getDistance(offsetCenter, center);\n      computeDeltaXY(session, input);\n      input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n      var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n      input.overallVelocityX = overallVelocity.x;\n      input.overallVelocityY = overallVelocity.y;\n      input.overallVelocity = abs(overallVelocity.x) > abs(overallVelocity.y) ? overallVelocity.x : overallVelocity.y;\n      input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n      input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n      input.maxPointers = !session.prevInput ? input.pointers.length : input.pointers.length > session.prevInput.maxPointers ? input.pointers.length : session.prevInput.maxPointers;\n      computeIntervalInputData(session, input); // find the correct target\n\n      var target = manager.element;\n\n      if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n      }\n\n      input.target = target;\n    }\n\n    function computeDeltaXY(session, input) {\n      var center = input.center;\n      var offset = session.offsetDelta || {};\n      var prevDelta = session.prevDelta || {};\n      var prevInput = session.prevInput || {};\n\n      if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n          x: prevInput.deltaX || 0,\n          y: prevInput.deltaY || 0\n        };\n        offset = session.offsetDelta = {\n          x: center.x,\n          y: center.y\n        };\n      }\n\n      input.deltaX = prevDelta.x + (center.x - offset.x);\n      input.deltaY = prevDelta.y + (center.y - offset.y);\n    }\n    /**\n     * velocity is calculated every x ms\n     * @param {Object} session\n     * @param {Object} input\n     */\n\n\n    function computeIntervalInputData(session, input) {\n      var last = session.lastInterval || input,\n          deltaTime = input.timeStamp - last.timeStamp,\n          velocity,\n          velocityX,\n          velocityY,\n          direction;\n\n      if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = abs(v.x) > abs(v.y) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n        session.lastInterval = input;\n      } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n      }\n\n      input.velocity = velocity;\n      input.velocityX = velocityX;\n      input.velocityY = velocityY;\n      input.direction = direction;\n    }\n    /**\n     * create a simple clone from the input used for storage of firstInput and firstMultiple\n     * @param {Object} input\n     * @returns {Object} clonedInputData\n     */\n\n\n    function simpleCloneInputData(input) {\n      // make a simple copy of the pointers because we will get a reference if we don't\n      // we only need clientXY for the calculations\n      var pointers = [];\n      var i = 0;\n\n      while (i < input.pointers.length) {\n        pointers[i] = {\n          clientX: round(input.pointers[i].clientX),\n          clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n      }\n\n      return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n      };\n    }\n    /**\n     * get the center of all the pointers\n     * @param {Array} pointers\n     * @return {Object} center contains `x` and `y` properties\n     */\n\n\n    function getCenter(pointers) {\n      var pointersLength = pointers.length; // no need to loop when only one touch\n\n      if (pointersLength === 1) {\n        return {\n          x: round(pointers[0].clientX),\n          y: round(pointers[0].clientY)\n        };\n      }\n\n      var x = 0,\n          y = 0,\n          i = 0;\n\n      while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n      }\n\n      return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n      };\n    }\n    /**\n     * calculate the velocity between two points. unit is in px per ms.\n     * @param {Number} deltaTime\n     * @param {Number} x\n     * @param {Number} y\n     * @return {Object} velocity `x` and `y`\n     */\n\n\n    function getVelocity(deltaTime, x, y) {\n      return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n      };\n    }\n    /**\n     * get the direction between two points\n     * @param {Number} x\n     * @param {Number} y\n     * @return {Number} direction\n     */\n\n\n    function getDirection(x, y) {\n      if (x === y) {\n        return DIRECTION_NONE;\n      }\n\n      if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n      }\n\n      return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n    }\n    /**\n     * calculate the absolute distance between two points\n     * @param {Object} p1 {x, y}\n     * @param {Object} p2 {x, y}\n     * @param {Array} [props] containing x and y keys\n     * @return {Number} distance\n     */\n\n\n    function getDistance(p1, p2, props) {\n      if (!props) {\n        props = PROPS_XY;\n      }\n\n      var x = p2[props[0]] - p1[props[0]],\n          y = p2[props[1]] - p1[props[1]];\n      return Math.sqrt(x * x + y * y);\n    }\n    /**\n     * calculate the angle between two coordinates\n     * @param {Object} p1\n     * @param {Object} p2\n     * @param {Array} [props] containing x and y keys\n     * @return {Number} angle\n     */\n\n\n    function getAngle(p1, p2, props) {\n      if (!props) {\n        props = PROPS_XY;\n      }\n\n      var x = p2[props[0]] - p1[props[0]],\n          y = p2[props[1]] - p1[props[1]];\n      return Math.atan2(y, x) * 180 / Math.PI;\n    }\n    /**\n     * calculate the rotation degrees between two pointersets\n     * @param {Array} start array of pointers\n     * @param {Array} end array of pointers\n     * @return {Number} rotation\n     */\n\n\n    function getRotation(start, end) {\n      return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n    }\n    /**\n     * calculate the scale factor between two pointersets\n     * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n     * @param {Array} start array of pointers\n     * @param {Array} end array of pointers\n     * @return {Number} scale\n     */\n\n\n    function getScale(start, end) {\n      return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n    }\n\n    var MOUSE_INPUT_MAP = {\n      mousedown: INPUT_START,\n      mousemove: INPUT_MOVE,\n      mouseup: INPUT_END\n    };\n    var MOUSE_ELEMENT_EVENTS = 'mousedown';\n    var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n    /**\n     * Mouse events input\n     * @constructor\n     * @extends Input\n     */\n\n    function MouseInput() {\n      this.evEl = MOUSE_ELEMENT_EVENTS;\n      this.evWin = MOUSE_WINDOW_EVENTS;\n      this.pressed = false; // mousedown state\n\n      Input.apply(this, arguments);\n    }\n\n    inherit(MouseInput, Input, {\n      /**\n       * handle mouse events\n       * @param {Object} ev\n       */\n      handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type]; // on start we want to have the left mouse button down\n\n        if (eventType & INPUT_START && ev.button === 0) {\n          this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n          eventType = INPUT_END;\n        } // mouse must be down\n\n\n        if (!this.pressed) {\n          return;\n        }\n\n        if (eventType & INPUT_END) {\n          this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n          pointers: [ev],\n          changedPointers: [ev],\n          pointerType: INPUT_TYPE_MOUSE,\n          srcEvent: ev\n        });\n      }\n    });\n    var POINTER_INPUT_MAP = {\n      pointerdown: INPUT_START,\n      pointermove: INPUT_MOVE,\n      pointerup: INPUT_END,\n      pointercancel: INPUT_CANCEL,\n      pointerout: INPUT_CANCEL\n    }; // in IE10 the pointer types is defined as an enum\n\n    var IE10_POINTER_TYPE_ENUM = {\n      2: INPUT_TYPE_TOUCH,\n      3: INPUT_TYPE_PEN,\n      4: INPUT_TYPE_MOUSE,\n      5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n\n    };\n    var POINTER_ELEMENT_EVENTS = 'pointerdown';\n    var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel'; // IE10 has prefixed support, and case-sensitive\n\n    if (window.MSPointerEvent && !window.PointerEvent) {\n      POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n      POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n    }\n    /**\n     * Pointer events input\n     * @constructor\n     * @extends Input\n     */\n\n\n    function PointerEventInput() {\n      this.evEl = POINTER_ELEMENT_EVENTS;\n      this.evWin = POINTER_WINDOW_EVENTS;\n      Input.apply(this, arguments);\n      this.store = this.manager.session.pointerEvents = [];\n    }\n\n    inherit(PointerEventInput, Input, {\n      /**\n       * handle mouse events\n       * @param {Object} ev\n       */\n      handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n        var isTouch = pointerType == INPUT_TYPE_TOUCH; // get index of the event in the store\n\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId'); // start and mouse must be down\n\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n          if (storeIndex < 0) {\n            store.push(ev);\n            storeIndex = store.length - 1;\n          }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n          removePointer = true;\n        } // it not found, so the pointer hasn't been down (so it's probably a hover)\n\n\n        if (storeIndex < 0) {\n          return;\n        } // update the event in the store\n\n\n        store[storeIndex] = ev;\n        this.callback(this.manager, eventType, {\n          pointers: store,\n          changedPointers: [ev],\n          pointerType: pointerType,\n          srcEvent: ev\n        });\n\n        if (removePointer) {\n          // remove from the store\n          store.splice(storeIndex, 1);\n        }\n      }\n    });\n    var SINGLE_TOUCH_INPUT_MAP = {\n      touchstart: INPUT_START,\n      touchmove: INPUT_MOVE,\n      touchend: INPUT_END,\n      touchcancel: INPUT_CANCEL\n    };\n    var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\n    var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n    /**\n     * Touch events input\n     * @constructor\n     * @extends Input\n     */\n\n    function SingleTouchInput() {\n      this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n      this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n      this.started = false;\n      Input.apply(this, arguments);\n    }\n\n    inherit(SingleTouchInput, Input, {\n      handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type]; // should we handle the touch events?\n\n        if (type === INPUT_START) {\n          this.started = true;\n        }\n\n        if (!this.started) {\n          return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type); // when done, reset the started state\n\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n          this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n          pointers: touches[0],\n          changedPointers: touches[1],\n          pointerType: INPUT_TYPE_TOUCH,\n          srcEvent: ev\n        });\n      }\n    });\n    /**\n     * @this {TouchInput}\n     * @param {Object} ev\n     * @param {Number} type flag\n     * @returns {undefined|Array} [all, changed]\n     */\n\n    function normalizeSingleTouches(ev, type) {\n      var all = toArray(ev.touches);\n      var changed = toArray(ev.changedTouches);\n\n      if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n      }\n\n      return [all, changed];\n    }\n\n    var TOUCH_INPUT_MAP = {\n      touchstart: INPUT_START,\n      touchmove: INPUT_MOVE,\n      touchend: INPUT_END,\n      touchcancel: INPUT_CANCEL\n    };\n    var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n    /**\n     * Multi-user touch events input\n     * @constructor\n     * @extends Input\n     */\n\n    function TouchInput() {\n      this.evTarget = TOUCH_TARGET_EVENTS;\n      this.targetIds = {};\n      Input.apply(this, arguments);\n    }\n\n    inherit(TouchInput, Input, {\n      handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n\n        if (!touches) {\n          return;\n        }\n\n        this.callback(this.manager, type, {\n          pointers: touches[0],\n          changedPointers: touches[1],\n          pointerType: INPUT_TYPE_TOUCH,\n          srcEvent: ev\n        });\n      }\n    });\n    /**\n     * @this {TouchInput}\n     * @param {Object} ev\n     * @param {Number} type flag\n     * @returns {undefined|Array} [all, changed]\n     */\n\n    function getTouches(ev, type) {\n      var allTouches = toArray(ev.touches);\n      var targetIds = this.targetIds; // when there is only one touch, the process can be simplified\n\n      if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n      }\n\n      var i,\n          targetTouches,\n          changedTouches = toArray(ev.changedTouches),\n          changedTargetTouches = [],\n          target = this.target; // get target touches from touches\n\n      targetTouches = allTouches.filter(function (touch) {\n        return hasParent(touch.target, target);\n      }); // collect touches\n\n      if (type === INPUT_START) {\n        i = 0;\n\n        while (i < targetTouches.length) {\n          targetIds[targetTouches[i].identifier] = true;\n          i++;\n        }\n      } // filter changed touches to only contain touches that exist in the collected target ids\n\n\n      i = 0;\n\n      while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n          changedTargetTouches.push(changedTouches[i]);\n        } // cleanup removed touches\n\n\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n          delete targetIds[changedTouches[i].identifier];\n        }\n\n        i++;\n      }\n\n      if (!changedTargetTouches.length) {\n        return;\n      }\n\n      return [// merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n      uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true), changedTargetTouches];\n    }\n    /**\n     * Combined touch and mouse input\n     *\n     * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n     * This because touch devices also emit mouse events while doing a touch.\n     *\n     * @constructor\n     * @extends Input\n     */\n\n\n    var DEDUP_TIMEOUT = 2500;\n    var DEDUP_DISTANCE = 25;\n\n    function TouchMouseInput() {\n      Input.apply(this, arguments);\n      var handler = bindFn(this.handler, this);\n      this.touch = new TouchInput(this.manager, handler);\n      this.mouse = new MouseInput(this.manager, handler);\n      this.primaryTouch = null;\n      this.lastTouches = [];\n    }\n\n    inherit(TouchMouseInput, Input, {\n      /**\n       * handle mouse and touch events\n       * @param {Hammer} manager\n       * @param {String} inputEvent\n       * @param {Object} inputData\n       */\n      handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = inputData.pointerType == INPUT_TYPE_TOUCH,\n            isMouse = inputData.pointerType == INPUT_TYPE_MOUSE;\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n          return;\n        } // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n\n\n        if (isTouch) {\n          recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n          return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n      },\n\n      /**\n       * remove the event listeners\n       */\n      destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n      }\n    });\n\n    function recordTouches(eventType, eventData) {\n      if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n      } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n      }\n    }\n\n    function setLastTouch(eventData) {\n      var touch = eventData.changedPointers[0];\n\n      if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n\n        var removeLastTouch = function removeLastTouch() {\n          var i = lts.indexOf(lastTouch);\n\n          if (i > -1) {\n            lts.splice(i, 1);\n          }\n        };\n\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n      }\n    }\n\n    function isSyntheticEvent(eventData) {\n      var x = eventData.srcEvent.clientX,\n          y = eventData.srcEvent.clientY;\n\n      for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x),\n            dy = Math.abs(y - t.y);\n\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\n    var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined; // magical touchAction value\n\n    var TOUCH_ACTION_COMPUTE = 'compute';\n    var TOUCH_ACTION_AUTO = 'auto';\n    var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n\n    var TOUCH_ACTION_NONE = 'none';\n    var TOUCH_ACTION_PAN_X = 'pan-x';\n    var TOUCH_ACTION_PAN_Y = 'pan-y';\n    var TOUCH_ACTION_MAP = getTouchActionProps();\n    /**\n     * Touch Action\n     * sets the touchAction property or uses the js alternative\n     * @param {Manager} manager\n     * @param {String} value\n     * @constructor\n     */\n\n    function TouchAction(manager, value) {\n      this.manager = manager;\n      this.set(value);\n    }\n\n    TouchAction.prototype = {\n      /**\n       * set the touchAction value on the element or enable the polyfill\n       * @param {String} value\n       */\n      set: function set(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n          value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n          this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n\n        this.actions = value.toLowerCase().trim();\n      },\n\n      /**\n       * just re-set the touchAction value\n       */\n      update: function update() {\n        this.set(this.manager.options.touchAction);\n      },\n\n      /**\n       * compute the value for the touchAction property based on the recognizer's settings\n       * @returns {String} value\n       */\n      compute: function compute() {\n        var actions = [];\n        each(this.manager.recognizers, function (recognizer) {\n          if (boolOrFn(recognizer.options.enable, [recognizer])) {\n            actions = actions.concat(recognizer.getTouchAction());\n          }\n        });\n        return cleanTouchActions(actions.join(' '));\n      },\n\n      /**\n       * this method is called on each input cycle and provides the preventing of the browser behavior\n       * @param {Object} input\n       */\n      preventDefaults: function preventDefaults(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection; // if the touch action did prevented once this session\n\n        if (this.manager.session.prevented) {\n          srcEvent.preventDefault();\n          return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n          //do not prevent defaults if this is a tap gesture\n          var isTapPointer = input.pointers.length === 1;\n          var isTapMovement = input.distance < 2;\n          var isTapTouchTime = input.deltaTime < 250;\n\n          if (isTapPointer && isTapMovement && isTapTouchTime) {\n            return;\n          }\n        }\n\n        if (hasPanX && hasPanY) {\n          // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n          return;\n        }\n\n        if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {\n          return this.preventSrc(srcEvent);\n        }\n      },\n\n      /**\n       * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n       * @param {Object} srcEvent\n       */\n      preventSrc: function preventSrc(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n      }\n    };\n    /**\n     * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n     * @param {String} actions\n     * @returns {*}\n     */\n\n    function cleanTouchActions(actions) {\n      // none\n      if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n      }\n\n      var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n      var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y); // if both pan-x and pan-y are set (different recognizers\n      // for different directions, e.g. horizontal pan but vertical swipe?)\n      // we need none (as otherwise with pan-x pan-y combined none of these\n      // recognizers will work, since the browser would handle all panning\n\n      if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n      } // pan-x OR pan-y\n\n\n      if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n      } // manipulation\n\n\n      if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n      }\n\n      return TOUCH_ACTION_AUTO;\n    }\n\n    function getTouchActionProps() {\n      if (!NATIVE_TOUCH_ACTION) {\n        return false;\n      }\n\n      var touchMap = {};\n      var cssSupports = window.CSS && window.CSS.supports;\n      ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function (val) {\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n      });\n      return touchMap;\n    }\n    /**\n     * Recognizer flow explained; *\n     * All recognizers have the initial state of POSSIBLE when a input session starts.\n     * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n     * Example session for mouse-input: mousedown -> mousemove -> mouseup\n     *\n     * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n     * which determines with state it should be.\n     *\n     * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n     * POSSIBLE to give it another change on the next cycle.\n     *\n     *               Possible\n     *                  |\n     *            +-----+---------------+\n     *            |                     |\n     *      +-----+-----+               |\n     *      |           |               |\n     *   Failed      Cancelled          |\n     *                          +-------+------+\n     *                          |              |\n     *                      Recognized       Began\n     *                                         |\n     *                                      Changed\n     *                                         |\n     *                                  Ended/Recognized\n     */\n\n\n    var STATE_POSSIBLE = 1;\n    var STATE_BEGAN = 2;\n    var STATE_CHANGED = 4;\n    var STATE_ENDED = 8;\n    var STATE_RECOGNIZED = STATE_ENDED;\n    var STATE_CANCELLED = 16;\n    var STATE_FAILED = 32;\n    /**\n     * Recognizer\n     * Every recognizer needs to extend from this class.\n     * @constructor\n     * @param {Object} options\n     */\n\n    function Recognizer(options) {\n      this.options = assign({}, this.defaults, options || {});\n      this.id = uniqueId();\n      this.manager = null; // default is enable true\n\n      this.options.enable = ifUndefined(this.options.enable, true);\n      this.state = STATE_POSSIBLE;\n      this.simultaneous = {};\n      this.requireFail = [];\n    }\n\n    Recognizer.prototype = {\n      /**\n       * @virtual\n       * @type {Object}\n       */\n      defaults: {},\n\n      /**\n       * set options\n       * @param {Object} options\n       * @return {Recognizer}\n       */\n      set: function set(options) {\n        assign(this.options, options); // also update the touchAction, in case something changed about the directions/enabled state\n\n        this.manager && this.manager.touchAction.update();\n        return this;\n      },\n\n      /**\n       * recognize simultaneous with an other recognizer.\n       * @param {Recognizer} otherRecognizer\n       * @returns {Recognizer} this\n       */\n      recognizeWith: function recognizeWith(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n          return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\n        if (!simultaneous[otherRecognizer.id]) {\n          simultaneous[otherRecognizer.id] = otherRecognizer;\n          otherRecognizer.recognizeWith(this);\n        }\n\n        return this;\n      },\n\n      /**\n       * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n       * @param {Recognizer} otherRecognizer\n       * @returns {Recognizer} this\n       */\n      dropRecognizeWith: function dropRecognizeWith(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n          return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n      },\n\n      /**\n       * recognizer can only run when an other is failing\n       * @param {Recognizer} otherRecognizer\n       * @returns {Recognizer} this\n       */\n      requireFailure: function requireFailure(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n          return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\n        if (inArray(requireFail, otherRecognizer) === -1) {\n          requireFail.push(otherRecognizer);\n          otherRecognizer.requireFailure(this);\n        }\n\n        return this;\n      },\n\n      /**\n       * drop the requireFailure link. it does not remove the link on the other recognizer.\n       * @param {Recognizer} otherRecognizer\n       * @returns {Recognizer} this\n       */\n      dropRequireFailure: function dropRequireFailure(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n          return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n\n        if (index > -1) {\n          this.requireFail.splice(index, 1);\n        }\n\n        return this;\n      },\n\n      /**\n       * has require failures boolean\n       * @returns {boolean}\n       */\n      hasRequireFailures: function hasRequireFailures() {\n        return this.requireFail.length > 0;\n      },\n\n      /**\n       * if the recognizer can recognize simultaneous with an other recognizer\n       * @param {Recognizer} otherRecognizer\n       * @returns {Boolean}\n       */\n      canRecognizeWith: function canRecognizeWith(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n      },\n\n      /**\n       * You should use `tryEmit` instead of `emit` directly to check\n       * that all the needed recognizers has failed before emitting.\n       * @param {Object} input\n       */\n      emit: function emit(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n          self.manager.emit(event, input);\n        } // 'panstart' and 'panmove'\n\n\n        if (state < STATE_ENDED) {\n          emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) {\n          // additional event(panleft, panright, pinchin, pinchout...)\n          emit(input.additionalEvent);\n        } // panend and pancancel\n\n\n        if (state >= STATE_ENDED) {\n          emit(self.options.event + stateStr(state));\n        }\n      },\n\n      /**\n       * Check that all the require failure recognizers has failed,\n       * if true, it emits a gesture event,\n       * otherwise, setup the state to FAILED.\n       * @param {Object} input\n       */\n      tryEmit: function tryEmit(input) {\n        if (this.canEmit()) {\n          return this.emit(input);\n        } // it's failing anyway\n\n\n        this.state = STATE_FAILED;\n      },\n\n      /**\n       * can we emit?\n       * @returns {boolean}\n       */\n      canEmit: function canEmit() {\n        var i = 0;\n\n        while (i < this.requireFail.length) {\n          if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n            return false;\n          }\n\n          i++;\n        }\n\n        return true;\n      },\n\n      /**\n       * update the recognizer\n       * @param {Object} inputData\n       */\n      recognize: function recognize(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData); // is is enabled and allow recognizing?\n\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n          this.reset();\n          this.state = STATE_FAILED;\n          return;\n        } // reset when we've reached the end\n\n\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n          this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone); // the recognizer has recognized a gesture\n        // so trigger an event\n\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n          this.tryEmit(inputDataClone);\n        }\n      },\n\n      /**\n       * return the state of the recognizer\n       * the actual recognizing happens in this method\n       * @virtual\n       * @param {Object} inputData\n       * @returns {Const} STATE\n       */\n      process: function process(inputData) {},\n      // jshint ignore:line\n\n      /**\n       * return the preferred touch-action\n       * @virtual\n       * @returns {Array}\n       */\n      getTouchAction: function getTouchAction() {},\n\n      /**\n       * called when the gesture isn't allowed to recognize\n       * like when another is being recognized or it is disabled\n       * @virtual\n       */\n      reset: function reset() {}\n    };\n    /**\n     * get a usable string, used as event postfix\n     * @param {Const} state\n     * @returns {String} state\n     */\n\n    function stateStr(state) {\n      if (state & STATE_CANCELLED) {\n        return 'cancel';\n      } else if (state & STATE_ENDED) {\n        return 'end';\n      } else if (state & STATE_CHANGED) {\n        return 'move';\n      } else if (state & STATE_BEGAN) {\n        return 'start';\n      }\n\n      return '';\n    }\n    /**\n     * direction cons to string\n     * @param {Const} direction\n     * @returns {String}\n     */\n\n\n    function directionStr(direction) {\n      if (direction == DIRECTION_DOWN) {\n        return 'down';\n      } else if (direction == DIRECTION_UP) {\n        return 'up';\n      } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n      } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n      }\n\n      return '';\n    }\n    /**\n     * get a recognizer by name if it is bound to a manager\n     * @param {Recognizer|String} otherRecognizer\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer}\n     */\n\n\n    function getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n      var manager = recognizer.manager;\n\n      if (manager) {\n        return manager.get(otherRecognizer);\n      }\n\n      return otherRecognizer;\n    }\n    /**\n     * This recognizer is just used as a base for the simple attribute recognizers.\n     * @constructor\n     * @extends Recognizer\n     */\n\n\n    function AttrRecognizer() {\n      Recognizer.apply(this, arguments);\n    }\n\n    inherit(AttrRecognizer, Recognizer, {\n      /**\n       * @namespace\n       * @memberof AttrRecognizer\n       */\n      defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n      },\n\n      /**\n       * Used to check if it the recognizer receives valid input, like input.distance > 10.\n       * @memberof AttrRecognizer\n       * @param {Object} input\n       * @returns {Boolean} recognized\n       */\n      attrTest: function attrTest(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n      },\n\n      /**\n       * Process the input and return the state for the recognizer\n       * @memberof AttrRecognizer\n       * @param {Object} input\n       * @returns {*} State\n       */\n      process: function process(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input); // on cancel input and we've recognized before, return STATE_CANCELLED\n\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n          return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n          if (eventType & INPUT_END) {\n            return state | STATE_ENDED;\n          } else if (!(state & STATE_BEGAN)) {\n            return STATE_BEGAN;\n          }\n\n          return state | STATE_CHANGED;\n        }\n\n        return STATE_FAILED;\n      }\n    });\n    /**\n     * Pan\n     * Recognized when the pointer is down and moved in the allowed direction.\n     * @constructor\n     * @extends AttrRecognizer\n     */\n\n    function PanRecognizer() {\n      AttrRecognizer.apply(this, arguments);\n      this.pX = null;\n      this.pY = null;\n    }\n\n    inherit(PanRecognizer, AttrRecognizer, {\n      /**\n       * @namespace\n       * @memberof PanRecognizer\n       */\n      defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n      },\n      getTouchAction: function getTouchAction() {\n        var direction = this.options.direction;\n        var actions = [];\n\n        if (direction & DIRECTION_HORIZONTAL) {\n          actions.push(TOUCH_ACTION_PAN_Y);\n        }\n\n        if (direction & DIRECTION_VERTICAL) {\n          actions.push(TOUCH_ACTION_PAN_X);\n        }\n\n        return actions;\n      },\n      directionTest: function directionTest(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY; // lock to axis?\n\n        if (!(direction & options.direction)) {\n          if (options.direction & DIRECTION_HORIZONTAL) {\n            direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n            hasMoved = x != this.pX;\n            distance = Math.abs(input.deltaX);\n          } else {\n            direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n            hasMoved = y != this.pY;\n            distance = Math.abs(input.deltaY);\n          }\n        }\n\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n      },\n      attrTest: function attrTest(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) && (this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));\n      },\n      emit: function emit(input) {\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n          input.additionalEvent = this.options.event + direction;\n        }\n\n        this._super.emit.call(this, input);\n      }\n    });\n    /**\n     * Pinch\n     * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n     * @constructor\n     * @extends AttrRecognizer\n     */\n\n    function PinchRecognizer() {\n      AttrRecognizer.apply(this, arguments);\n    }\n\n    inherit(PinchRecognizer, AttrRecognizer, {\n      /**\n       * @namespace\n       * @memberof PinchRecognizer\n       */\n      defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n      },\n      getTouchAction: function getTouchAction() {\n        return [TOUCH_ACTION_NONE];\n      },\n      attrTest: function attrTest(input) {\n        return this._super.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n      },\n      emit: function emit(input) {\n        if (input.scale !== 1) {\n          var inOut = input.scale < 1 ? 'in' : 'out';\n          input.additionalEvent = this.options.event + inOut;\n        }\n\n        this._super.emit.call(this, input);\n      }\n    });\n    /**\n     * Press\n     * Recognized when the pointer is down for x ms without any movement.\n     * @constructor\n     * @extends Recognizer\n     */\n\n    function PressRecognizer() {\n      Recognizer.apply(this, arguments);\n      this._timer = null;\n      this._input = null;\n    }\n\n    inherit(PressRecognizer, Recognizer, {\n      /**\n       * @namespace\n       * @memberof PressRecognizer\n       */\n      defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251,\n        // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n\n      },\n      getTouchAction: function getTouchAction() {\n        return [TOUCH_ACTION_AUTO];\n      },\n      process: function process(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n        this._input = input; // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n\n        if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {\n          this.reset();\n        } else if (input.eventType & INPUT_START) {\n          this.reset();\n          this._timer = setTimeoutContext(function () {\n            this.state = STATE_RECOGNIZED;\n            this.tryEmit();\n          }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n          return STATE_RECOGNIZED;\n        }\n\n        return STATE_FAILED;\n      },\n      reset: function reset() {\n        clearTimeout(this._timer);\n      },\n      emit: function emit(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n          return;\n        }\n\n        if (input && input.eventType & INPUT_END) {\n          this.manager.emit(this.options.event + 'up', input);\n        } else {\n          this._input.timeStamp = now();\n          this.manager.emit(this.options.event, this._input);\n        }\n      }\n    });\n    /**\n     * Rotate\n     * Recognized when two or more pointer are moving in a circular motion.\n     * @constructor\n     * @extends AttrRecognizer\n     */\n\n    function RotateRecognizer() {\n      AttrRecognizer.apply(this, arguments);\n    }\n\n    inherit(RotateRecognizer, AttrRecognizer, {\n      /**\n       * @namespace\n       * @memberof RotateRecognizer\n       */\n      defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n      },\n      getTouchAction: function getTouchAction() {\n        return [TOUCH_ACTION_NONE];\n      },\n      attrTest: function attrTest(input) {\n        return this._super.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n      }\n    });\n    /**\n     * Swipe\n     * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n     * @constructor\n     * @extends AttrRecognizer\n     */\n\n    function SwipeRecognizer() {\n      AttrRecognizer.apply(this, arguments);\n    }\n\n    inherit(SwipeRecognizer, AttrRecognizer, {\n      /**\n       * @namespace\n       * @memberof SwipeRecognizer\n       */\n      defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n      },\n      getTouchAction: function getTouchAction() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n      },\n      attrTest: function attrTest(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n          velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n          velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n          velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) && direction & input.offsetDirection && input.distance > this.options.threshold && input.maxPointers == this.options.pointers && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n      },\n      emit: function emit(input) {\n        var direction = directionStr(input.offsetDirection);\n\n        if (direction) {\n          this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n      }\n    });\n    /**\n     * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n     * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n     * a single tap.\n     *\n     * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n     * multi-taps being recognized.\n     * @constructor\n     * @extends Recognizer\n     */\n\n    function TapRecognizer() {\n      Recognizer.apply(this, arguments); // previous time and center,\n      // used for tap counting\n\n      this.pTime = false;\n      this.pCenter = false;\n      this._timer = null;\n      this._input = null;\n      this.count = 0;\n    }\n\n    inherit(TapRecognizer, Recognizer, {\n      /**\n       * @namespace\n       * @memberof PinchRecognizer\n       */\n      defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300,\n        // max time between the multi-tap taps\n        time: 250,\n        // max time of the pointer to be down (like finger on the screen)\n        threshold: 9,\n        // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n\n      },\n      getTouchAction: function getTouchAction() {\n        return [TOUCH_ACTION_MANIPULATION];\n      },\n      process: function process(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n        this.reset();\n\n        if (input.eventType & INPUT_START && this.count === 0) {\n          return this.failTimeout();\n        } // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n\n\n        if (validMovement && validTouchTime && validPointers) {\n          if (input.eventType != INPUT_END) {\n            return this.failTimeout();\n          }\n\n          var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;\n          var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n          this.pTime = input.timeStamp;\n          this.pCenter = input.center;\n\n          if (!validMultiTap || !validInterval) {\n            this.count = 1;\n          } else {\n            this.count += 1;\n          }\n\n          this._input = input; // if tap count matches we have recognized it,\n          // else it has began recognizing...\n\n          var tapCount = this.count % options.taps;\n\n          if (tapCount === 0) {\n            // no failing requirements, immediately trigger the tap event\n            // or wait as long as the multitap interval to trigger\n            if (!this.hasRequireFailures()) {\n              return STATE_RECOGNIZED;\n            } else {\n              this._timer = setTimeoutContext(function () {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n              }, options.interval, this);\n              return STATE_BEGAN;\n            }\n          }\n        }\n\n        return STATE_FAILED;\n      },\n      failTimeout: function failTimeout() {\n        this._timer = setTimeoutContext(function () {\n          this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n      },\n      reset: function reset() {\n        clearTimeout(this._timer);\n      },\n      emit: function emit() {\n        if (this.state == STATE_RECOGNIZED) {\n          this._input.tapCount = this.count;\n          this.manager.emit(this.options.event, this._input);\n        }\n      }\n    });\n    /**\n     * Simple way to create a manager with a default set of recognizers.\n     * @param {HTMLElement} element\n     * @param {Object} [options]\n     * @constructor\n     */\n\n    function Hammer(element, options) {\n      options = options || {};\n      options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n      return new Manager(element, options);\n    }\n    /**\n     * @const {string}\n     */\n\n\n    Hammer.VERSION = '2.0.7';\n    /**\n     * default settings\n     * @namespace\n     */\n\n    Hammer.defaults = {\n      /**\n       * set if DOM events are being triggered.\n       * But this is slower and unused by simple implementations, so disabled by default.\n       * @type {Boolean}\n       * @default false\n       */\n      domEvents: false,\n\n      /**\n       * The value for the touchAction property/fallback.\n       * When set to `compute` it will magically set the correct value based on the added recognizers.\n       * @type {String}\n       * @default compute\n       */\n      touchAction: TOUCH_ACTION_COMPUTE,\n\n      /**\n       * @type {Boolean}\n       * @default true\n       */\n      enable: true,\n\n      /**\n       * EXPERIMENTAL FEATURE -- can be removed/changed\n       * Change the parent input target element.\n       * If Null, then it is being set the to main element.\n       * @type {Null|EventTarget}\n       * @default null\n       */\n      inputTarget: null,\n\n      /**\n       * force an input class\n       * @type {Null|Function}\n       * @default null\n       */\n      inputClass: null,\n\n      /**\n       * Default recognizer setup when calling `Hammer()`\n       * When creating a new Manager these will be skipped.\n       * @type {Array}\n       */\n      preset: [// RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n      [RotateRecognizer, {\n        enable: false\n      }], [PinchRecognizer, {\n        enable: false\n      }, ['rotate']], [SwipeRecognizer, {\n        direction: DIRECTION_HORIZONTAL\n      }], [PanRecognizer, {\n        direction: DIRECTION_HORIZONTAL\n      }, ['swipe']], [TapRecognizer], [TapRecognizer, {\n        event: 'doubletap',\n        taps: 2\n      }, ['tap']], [PressRecognizer]],\n\n      /**\n       * Some CSS properties can be used to improve the working of Hammer.\n       * Add them to this method and they will be set when creating a new Manager.\n       * @namespace\n       */\n      cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n      }\n    };\n    var STOP = 1;\n    var FORCED_STOP = 2;\n    /**\n     * Manager\n     * @param {HTMLElement} element\n     * @param {Object} [options]\n     * @constructor\n     */\n\n    function Manager(element, options) {\n      this.options = assign({}, Hammer.defaults, options || {});\n      this.options.inputTarget = this.options.inputTarget || element;\n      this.handlers = {};\n      this.session = {};\n      this.recognizers = [];\n      this.oldCssProps = {};\n      this.element = element;\n      this.input = createInputInstance(this);\n      this.touchAction = new TouchAction(this, this.options.touchAction);\n      toggleCssProps(this, true);\n      each(this.options.recognizers, function (item) {\n        var recognizer = this.add(new item[0](item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n      }, this);\n    }\n\n    Manager.prototype = {\n      /**\n       * set options\n       * @param {Object} options\n       * @returns {Manager}\n       */\n      set: function set(options) {\n        assign(this.options, options); // Options that need a little more setup\n\n        if (options.touchAction) {\n          this.touchAction.update();\n        }\n\n        if (options.inputTarget) {\n          // Clean up existing event listeners and reinitialize\n          this.input.destroy();\n          this.input.target = options.inputTarget;\n          this.input.init();\n        }\n\n        return this;\n      },\n\n      /**\n       * stop recognizing for this session.\n       * This session will be discarded, when a new [input]start event is fired.\n       * When forced, the recognizer cycle is stopped immediately.\n       * @param {Boolean} [force]\n       */\n      stop: function stop(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n      },\n\n      /**\n       * run the recognizers!\n       * called by the inputHandler function on every movement of the pointers (touches)\n       * it walks through all the recognizers and tries to detect the gesture that is being made\n       * @param {Object} inputData\n       */\n      recognize: function recognize(inputData) {\n        var session = this.session;\n\n        if (session.stopped) {\n          return;\n        } // run the touch-action polyfill\n\n\n        this.touchAction.preventDefaults(inputData);\n        var recognizer;\n        var recognizers = this.recognizers; // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n\n        var curRecognizer = session.curRecognizer; // reset when the last recognizer is recognized\n        // or when we're in a new session\n\n        if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {\n          curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n\n        while (i < recognizers.length) {\n          recognizer = recognizers[i]; // find out if we are allowed try to recognize the input for this one.\n          // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n          // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n          //      that is being recognized.\n          // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n          //      this can be setup with the `recognizeWith()` method on the recognizer.\n\n          if (session.stopped !== FORCED_STOP && ( // 1\n          !curRecognizer || recognizer == curRecognizer || // 2\n          recognizer.canRecognizeWith(curRecognizer))) {\n            // 3\n            recognizer.recognize(inputData);\n          } else {\n            recognizer.reset();\n          } // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n          // current active recognizer. but only if we don't already have an active recognizer\n\n\n          if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n            curRecognizer = session.curRecognizer = recognizer;\n          }\n\n          i++;\n        }\n      },\n\n      /**\n       * get a recognizer by its event name.\n       * @param {Recognizer|String} recognizer\n       * @returns {Recognizer|Null}\n       */\n      get: function get(recognizer) {\n        if (recognizer instanceof Recognizer) {\n          return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n\n        for (var i = 0; i < recognizers.length; i++) {\n          if (recognizers[i].options.event == recognizer) {\n            return recognizers[i];\n          }\n        }\n\n        return null;\n      },\n\n      /**\n       * add a recognizer to the manager\n       * existing recognizers with the same event name will be removed\n       * @param {Recognizer} recognizer\n       * @returns {Recognizer|Manager}\n       */\n      add: function add(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n          return this;\n        } // remove existing\n\n\n        var existing = this.get(recognizer.options.event);\n\n        if (existing) {\n          this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n        this.touchAction.update();\n        return recognizer;\n      },\n\n      /**\n       * remove a recognizer by name or instance\n       * @param {Recognizer|String} recognizer\n       * @returns {Manager}\n       */\n      remove: function remove(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n          return this;\n        }\n\n        recognizer = this.get(recognizer); // let's make sure this recognizer exists\n\n        if (recognizer) {\n          var recognizers = this.recognizers;\n          var index = inArray(recognizers, recognizer);\n\n          if (index !== -1) {\n            recognizers.splice(index, 1);\n            this.touchAction.update();\n          }\n        }\n\n        return this;\n      },\n\n      /**\n       * bind event\n       * @param {String} events\n       * @param {Function} handler\n       * @returns {EventEmitter} this\n       */\n      on: function on(events, handler) {\n        if (events === undefined) {\n          return;\n        }\n\n        if (handler === undefined) {\n          return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function (event) {\n          handlers[event] = handlers[event] || [];\n          handlers[event].push(handler);\n        });\n        return this;\n      },\n\n      /**\n       * unbind event, leave emit blank to remove all handlers\n       * @param {String} events\n       * @param {Function} [handler]\n       * @returns {EventEmitter} this\n       */\n      off: function off(events, handler) {\n        if (events === undefined) {\n          return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function (event) {\n          if (!handler) {\n            delete handlers[event];\n          } else {\n            handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n          }\n        });\n        return this;\n      },\n\n      /**\n       * emit event to the listeners\n       * @param {String} event\n       * @param {Object} data\n       */\n      emit: function emit(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n          triggerDomEvent(event, data);\n        } // no handlers, so skip it all\n\n\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n\n        if (!handlers || !handlers.length) {\n          return;\n        }\n\n        data.type = event;\n\n        data.preventDefault = function () {\n          data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n\n        while (i < handlers.length) {\n          handlers[i](data);\n          i++;\n        }\n      },\n\n      /**\n       * destroy the manager and unbinds all events\n       * it doesn't unbind dom events, that is the user own responsibility\n       */\n      destroy: function destroy() {\n        this.element && toggleCssProps(this, false);\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n      }\n    };\n    /**\n     * add/remove the css properties as defined in manager.options.cssProps\n     * @param {Manager} manager\n     * @param {Boolean} add\n     */\n\n    function toggleCssProps(manager, add) {\n      var element = manager.element;\n\n      if (!element.style) {\n        return;\n      }\n\n      var prop;\n      each(manager.options.cssProps, function (value, name) {\n        prop = prefixed(element.style, name);\n\n        if (add) {\n          manager.oldCssProps[prop] = element.style[prop];\n          element.style[prop] = value;\n        } else {\n          element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n      });\n\n      if (!add) {\n        manager.oldCssProps = {};\n      }\n    }\n    /**\n     * trigger dom event\n     * @param {String} event\n     * @param {Object} data\n     */\n\n\n    function triggerDomEvent(event, data) {\n      var gestureEvent = document.createEvent('Event');\n      gestureEvent.initEvent(event, true, true);\n      gestureEvent.gesture = data;\n      data.target.dispatchEvent(gestureEvent);\n    }\n\n    assign(Hammer, {\n      INPUT_START: INPUT_START,\n      INPUT_MOVE: INPUT_MOVE,\n      INPUT_END: INPUT_END,\n      INPUT_CANCEL: INPUT_CANCEL,\n      STATE_POSSIBLE: STATE_POSSIBLE,\n      STATE_BEGAN: STATE_BEGAN,\n      STATE_CHANGED: STATE_CHANGED,\n      STATE_ENDED: STATE_ENDED,\n      STATE_RECOGNIZED: STATE_RECOGNIZED,\n      STATE_CANCELLED: STATE_CANCELLED,\n      STATE_FAILED: STATE_FAILED,\n      DIRECTION_NONE: DIRECTION_NONE,\n      DIRECTION_LEFT: DIRECTION_LEFT,\n      DIRECTION_RIGHT: DIRECTION_RIGHT,\n      DIRECTION_UP: DIRECTION_UP,\n      DIRECTION_DOWN: DIRECTION_DOWN,\n      DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n      DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n      DIRECTION_ALL: DIRECTION_ALL,\n      Manager: Manager,\n      Input: Input,\n      TouchAction: TouchAction,\n      TouchInput: TouchInput,\n      MouseInput: MouseInput,\n      PointerEventInput: PointerEventInput,\n      TouchMouseInput: TouchMouseInput,\n      SingleTouchInput: SingleTouchInput,\n      Recognizer: Recognizer,\n      AttrRecognizer: AttrRecognizer,\n      Tap: TapRecognizer,\n      Pan: PanRecognizer,\n      Swipe: SwipeRecognizer,\n      Pinch: PinchRecognizer,\n      Rotate: RotateRecognizer,\n      Press: PressRecognizer,\n      on: addEventListeners,\n      off: removeEventListeners,\n      each: each,\n      merge: merge,\n      extend: extend,\n      assign: assign,\n      inherit: inherit,\n      bindFn: bindFn,\n      prefixed: prefixed\n    }); // this prevents errors when Hammer is loaded in the presence of an AMD\n    //  style loader but by script tag, not by the loader.\n\n    var freeGlobal = typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}; // jshint ignore:line\n\n    freeGlobal.Hammer = Hammer;\n\n    if (typeof undefined === 'function' && undefined.amd) {\n      undefined(function () {\n        return Hammer;\n      });\n    } else if (module.exports) {\n      module.exports = Hammer;\n    } else {\n      window[exportName] = Hammer;\n    }\n  })(window, document, 'Hammer');\n});\n/**\r\n * Muuri Ticker\r\n * Copyright (c) 2018-present, Niklas Rämö <inramo@gmail.com>\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/src/Ticker/LICENSE.md\r\n */\n\nfunction rafFallback(cb) {\n  return window.setTimeout(cb, 16);\n}\n\nvar raf = (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || rafFallback).bind(window);\n/**\r\n * A ticker system for handling DOM reads and writes in an efficient way.\r\n * Contains a read queue and a write queue that are processed on the next\r\n * animation frame when needed.\r\n *\r\n * @class\r\n */\n\nvar Ticker = function (_Component) {\n  inherits(Ticker, _Component);\n\n  function Ticker() {\n    classCallCheck(this, Ticker);\n\n    var _this = possibleConstructorReturn(this, (Ticker.__proto__ || Object.getPrototypeOf(Ticker)).call(this));\n\n    _this._nextTick = null;\n    _this._queue = [];\n    _this._reads = {};\n    _this._writes = {};\n    _this._batch = [];\n    _this._batchReads = {};\n    _this._batchWrites = {};\n    _this._flush = _this._flush.bind(_this);\n    return _this;\n  }\n\n  createClass(Ticker, [{\n    key: 'add',\n    value: function add(id, readCallback, writeCallback, isImportant) {\n      // First, let's check if an item has been added to the queues with the same id\n      // and if so -> remove it.\n      var currentIndex = this._queue.indexOf(id);\n\n      if (currentIndex > -1) this._queue[currentIndex] = undefined; // Add all important callbacks to the beginning of the queue and other\n      // callbacks to the end of the queue.\n\n      isImportant ? this._queue.unshift(id) : this._queue.push(id); // Store callbacks.\n\n      this._reads[id] = readCallback;\n      this._writes[id] = writeCallback; // Finally, let's kick-start the next tick if it is not running yet.\n\n      if (!this._nextTick) this._nextTick = raf(this._flush);\n    }\n  }, {\n    key: 'cancel',\n    value: function cancel(id) {\n      var currentIndex = this._queue.indexOf(id);\n\n      if (currentIndex > -1) {\n        this._queue[currentIndex] = undefined;\n        this._reads[id] = undefined;\n        this._writes[id] = undefined;\n      }\n    }\n  }, {\n    key: '_flush',\n    value: function _flush() {\n      var queue = this._queue;\n      var reads = this._reads;\n      var writes = this._writes;\n      var batch = this._batch;\n      var batchReads = this._batchReads;\n      var batchWrites = this._batchWrites;\n      var length = queue.length;\n      var id = void 0;\n      var i = void 0; // Reset ticker.\n\n      this._nextTick = null; // Setup queues and callback placeholders.\n\n      for (i = 0; i < length; i++) {\n        id = queue[i];\n        if (!id) continue;\n        batch.push(id);\n        batchReads[id] = reads[id];\n        reads[id] = undefined;\n        batchWrites[id] = writes[id];\n        writes[id] = undefined;\n      } // Reset queue.\n\n\n      queue.length = 0; // Process read callbacks.\n\n      for (i = 0; i < length; i++) {\n        id = batch[i];\n\n        if (batchReads[id]) {\n          batchReads[id]();\n          batchReads[id] = undefined;\n        }\n      } // Process write callbacks.\n\n\n      for (i = 0; i < length; i++) {\n        id = batch[i];\n\n        if (batchWrites[id]) {\n          batchWrites[id]();\n          batchWrites[id] = undefined;\n        }\n      } // Reset batch.\n\n\n      batch.length = 0; // Restart the ticker if needed.\n\n      if (!this._nextTick && queue.length) {\n        this._nextTick = raf(this._flush);\n      }\n    }\n  }]);\n  return Ticker;\n}(Component);\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n\nvar ticker = new Ticker();\nvar layoutTick = 'layout';\nvar visibilityTick = 'visibility';\nvar moveTick = 'move';\nvar scrollTick = 'scroll';\n\nfunction addLayoutTick(itemId, readCallback, writeCallback) {\n  return ticker.add(itemId + layoutTick, readCallback, writeCallback);\n}\n\nfunction cancelLayoutTick(itemId) {\n  return ticker.cancel(itemId + layoutTick);\n}\n\nfunction addVisibilityTick(itemId, readCallback, writeCallback) {\n  return ticker.add(itemId + visibilityTick, readCallback, writeCallback);\n}\n\nfunction cancelVisibilityTick(itemId) {\n  return ticker.cancel(itemId + visibilityTick);\n}\n\nfunction addMoveTick(itemId, readCallback, writeCallback) {\n  return ticker.add(itemId + moveTick, readCallback, writeCallback, true);\n}\n\nfunction cancelMoveTick(itemId) {\n  return ticker.cancel(itemId + moveTick);\n}\n\nfunction addScrollTick(itemId, readCallback, writeCallback) {\n  return ticker.add(itemId + scrollTick, readCallback, writeCallback, true);\n}\n\nfunction cancelScrollTick(itemId) {\n  return ticker.cancel(itemId + scrollTick);\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n\nvar proto = Element.prototype;\nvar matches = proto.matches || proto.matchesSelector || proto.webkitMatchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector;\n/**\r\n * Check if element matches a CSS selector.\r\n *\r\n * @param {*} val\r\n * @returns {Boolean}\r\n */\n\nfunction elementMatches(el, selector) {\n  return matches.call(el, selector);\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n/**\r\n * Add class to an element.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {String} className\r\n */\n\n\nfunction addClassModern(element, className) {\n  element.classList.add(className);\n}\n/**\r\n * Add class to an element (legacy version, for IE9 support).\r\n *\r\n * @param {HTMLElement} element\r\n * @param {String} className\r\n */\n\n\nfunction addClassLegacy(element, className) {\n  if (!elementMatches(element, '.' + className)) {\n    element.className += ' ' + className;\n  }\n}\n\nvar addClass = 'classList' in Element.prototype ? addClassModern : addClassLegacy;\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n/**\r\n * Normalize array index. Basically this function makes sure that the provided\r\n * array index is within the bounds of the provided array and also transforms\r\n * negative index to the matching positive index.\r\n *\r\n * @param {Array} array\r\n * @param {Number} index\r\n * @param {Boolean} isMigration\r\n */\n\nfunction normalizeArrayIndex(array, index, isMigration) {\n  var length = array.length;\n  var maxIndex = Math.max(0, isMigration ? length : length - 1);\n  return index > maxIndex ? maxIndex : index < 0 ? Math.max(maxIndex + index + 1, 0) : index;\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n/**\r\n * Move array item to another index.\r\n *\r\n * @param {Array} array\r\n * @param {Number} fromIndex\r\n *   - Index (positive or negative) of the item that will be moved.\r\n * @param {Number} toIndex\r\n *   - Index (positive or negative) where the item should be moved to.\r\n */\n\n\nfunction arrayMove(array, fromIndex, toIndex) {\n  // Make sure the array has two or more items.\n  if (array.length < 2) return; // Normalize the indices.\n\n  var from = normalizeArrayIndex(array, fromIndex);\n  var to = normalizeArrayIndex(array, toIndex); // Add target item to the new position.\n\n  if (from !== to) {\n    array.splice(to, 0, array.splice(from, 1)[0]);\n  }\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n/**\r\n * Swap array items.\r\n *\r\n * @param {Array} array\r\n * @param {Number} index\r\n *   - Index (positive or negative) of the item that will be swapped.\r\n * @param {Number} withIndex\r\n *   - Index (positive or negative) of the other item that will be swapped.\r\n */\n\n\nfunction arraySwap(array, index, withIndex) {\n  // Make sure the array has two or more items.\n  if (array.length < 2) return; // Normalize the indices.\n\n  var indexA = normalizeArrayIndex(array, index);\n  var indexB = normalizeArrayIndex(array, withIndex);\n  var temp = void 0; // Swap the items.\n\n  if (indexA !== indexB) {\n    temp = array[indexA];\n    array[indexA] = array[indexB];\n    array[indexB] = temp;\n  }\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n\nvar actionCancel = 'cancel';\nvar actionFinish = 'finish';\n/**\r\n * Returns a function, that, as long as it continues to be invoked, will not\r\n * be triggered. The function will be called after it stops being called for\r\n * N milliseconds. The returned function accepts one argument which, when\r\n * being \"finish\", calls the debounce function immediately if it is currently\r\n * waiting to be called, and when being \"cancel\" cancels the currently queued\r\n * function call.\r\n *\r\n * @param {Function} fn\r\n * @param {Number} wait\r\n * @returns {Function}\r\n */\n\nfunction debounce(fn, wait) {\n  var timeout = void 0;\n\n  if (wait > 0) {\n    return function (action) {\n      if (timeout !== undefined) {\n        timeout = window.clearTimeout(timeout);\n        if (action === actionFinish) fn();\n      }\n\n      if (action !== actionCancel && action !== actionFinish) {\n        timeout = window.setTimeout(function () {\n          timeout = undefined;\n          fn();\n        }, wait);\n      }\n    };\n  }\n\n  return function (action) {\n    if (action !== actionCancel) fn();\n  };\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n/**\r\n * Returns true if element is transformed, false if not. In practice the\r\n * element's display value must be anything else than \"none\" or \"inline\" as\r\n * well as have a valid transform value applied in order to be counted as a\r\n * transformed element.\r\n *\r\n * Borrowed from Mezr (v0.6.1):\r\n * https://github.com/niklasramo/mezr/blob/0.6.1/mezr.js#L661\r\n *\r\n * @param {HTMLElement} element\r\n * @returns {Boolean}\r\n */\n\n\nfunction isTransformed(element) {\n  var transform = getStyle(element, 'transform');\n  if (!transform || transform === 'none') return false;\n  var display = getStyle(element, 'display');\n  if (display === 'inline' || display === 'none') return false;\n  return true;\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n/**\r\n * Returns an absolute positioned element's containing block, which is\r\n * considered to be the closest ancestor element that the target element's\r\n * positioning is relative to. Disclaimer: this only works as intended for\r\n * absolute positioned elements.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {Boolean} [includeSelf=false]\r\n *   - When this is set to true the containing block checking is started from\r\n *     the provided element. Otherwise the checking is started from the\r\n *     provided element's parent element.\r\n * @returns {(Document|Element)}\r\n */\n\n\nfunction getContainingBlock(element, includeSelf) {\n  // As long as the containing block is an element, static and not\n  // transformed, try to get the element's parent element and fallback to\n  // document. https://github.com/niklasramo/mezr/blob/0.6.1/mezr.js#L339\n  var ret = (includeSelf ? element : element.parentElement) || document;\n\n  while (ret && ret !== document && getStyle(ret, 'position') === 'static' && !isTransformed(ret)) {\n    ret = ret.parentElement || document;\n  }\n\n  return ret;\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n/**\r\n * Returns the computed value of an element's style property transformed into\r\n * a float value.\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} style\r\n * @returns {Number}\r\n */\n\n\nfunction getStyleAsFloat(el, style) {\n  return parseFloat(getStyle(el, style)) || 0;\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n\nvar offsetA = {};\nvar offsetB = {};\nvar offsetDiff = {};\n/**\r\n * Returns the element's document offset, which in practice means the vertical\r\n * and horizontal distance between the element's northwest corner and the\r\n * document's northwest corner. Note that this function always returns the same\r\n * object so be sure to read the data from it instead using it as a reference.\r\n *\r\n * @param {(Document|Element|Window)} element\r\n * @param {Object} [offsetData]\r\n *   - Optional data object where the offset data will be inserted to. If not\r\n *     provided a new object will be created for the return data.\r\n * @returns {Object}\r\n */\n\nfunction getOffset(element, offsetData) {\n  var ret = offsetData || {};\n  var rect = void 0; // Set up return data.\n\n  ret.left = 0;\n  ret.top = 0; // Document's offsets are always 0.\n\n  if (element === document) return ret; // Add viewport scroll left/top to the respective offsets.\n\n  ret.left = window.pageXOffset || 0;\n  ret.top = window.pageYOffset || 0; // Window's offsets are the viewport scroll left/top values.\n\n  if (element.self === window.self) return ret; // Add element's client rects to the offsets.\n\n  rect = element.getBoundingClientRect();\n  ret.left += rect.left;\n  ret.top += rect.top; // Exclude element's borders from the offset.\n\n  ret.left += getStyleAsFloat(element, 'border-left-width');\n  ret.top += getStyleAsFloat(element, 'border-top-width');\n  return ret;\n}\n/**\r\n * Calculate the offset difference two elements.\r\n *\r\n * @param {HTMLElement} elemA\r\n * @param {HTMLElement} elemB\r\n * @param {Boolean} [compareContainingBlocks=false]\r\n *   - When this is set to true the containing blocks of the provided elements\r\n *     will be used for calculating the difference. Otherwise the provided\r\n *     elements will be compared directly.\r\n * @returns {Object}\r\n */\n\n\nfunction getOffsetDiff(elemA, elemB, compareContainingBlocks) {\n  offsetDiff.left = 0;\n  offsetDiff.top = 0; // If elements are same let's return early.\n\n  if (elemA === elemB) return offsetDiff; // Compare containing blocks if necessary.\n\n  if (compareContainingBlocks) {\n    elemA = getContainingBlock(elemA, true);\n    elemB = getContainingBlock(elemB, true); // If containing blocks are identical, let's return early.\n\n    if (elemA === elemB) return offsetDiff;\n  } // Finally, let's calculate the offset diff.\n\n\n  getOffset(elemA, offsetA);\n  getOffset(elemB, offsetB);\n  offsetDiff.left = offsetB.left - offsetA.left;\n  offsetDiff.top = offsetB.top - offsetA.top;\n  return offsetDiff;\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n\nvar translateData = {};\n/**\r\n * Returns the element's computed translateX and translateY values as a floats.\r\n * The returned object is always the same object and updated every time this\r\n * function is called.\r\n *\r\n * @param {HTMLElement} element\r\n * @returns {Object}\r\n */\n\nfunction getTranslate(element) {\n  translateData.x = 0;\n  translateData.y = 0;\n  var transform = getStyle(element, 'transform');\n  if (!transform) return translateData;\n  var matrixData = transform.replace('matrix(', '').split(',');\n  translateData.x = parseFloat(matrixData[4]) || 0;\n  translateData.y = parseFloat(matrixData[5]) || 0;\n  return translateData;\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n/**\r\n * Transform translateX and translateY value into CSS transform style\r\n * property's value.\r\n *\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @returns {String}\r\n */\n\n\nfunction getTranslateString(x, y) {\n  return 'translateX(' + x + 'px) translateY(' + y + 'px)';\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n\nvar tempArray = [];\n/**\r\n * Insert an item or an array of items to array to a specified index. Mutates\r\n * the array. The index can be negative in which case the items will be added\r\n * to the end of the array.\r\n *\r\n * @param {Array} array\r\n * @param {*} items\r\n * @param {Number} [index=-1]\r\n */\n\nfunction arrayInsert(array, items, index) {\n  var startIndex = typeof index === 'number' ? index : -1;\n  if (startIndex < 0) startIndex = array.length - startIndex + 1;\n  array.splice.apply(array, toConsumableArray(tempArray.concat(startIndex, 0, items)));\n  tempArray.length = 0;\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n\nvar objectType = '[object Object]';\nvar toString = Object.prototype.toString;\n/**\r\n * Check if a value is a plain object.\r\n *\r\n * @param {*} val\r\n * @returns {Boolean}\r\n */\n\nfunction isPlainObject(val) {\n  return (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && toString.call(val) === objectType;\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n/**\r\n * Remove class from an element.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {String} className\r\n */\n\n\nfunction removeClassModern(element, className) {\n  element.classList.remove(className);\n}\n/**\r\n * Remove class from an element (legacy version, for IE9 support).\r\n *\r\n * @param {HTMLElement} element\r\n * @param {String} className\r\n */\n\n\nfunction removeClassLegacy(element, className) {\n  if (elementMatches(element, '.' + className)) {\n    element.className = (' ' + element.className + ' ').replace(' ' + className + ' ', ' ').trim();\n  }\n}\n\nvar removeClass = 'classList' in Element.prototype ? removeClassModern : removeClassLegacy;\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n// To provide consistently correct dragging experience we need to know if\n// transformed elements leak fixed elements or not.\n\nvar hasTransformLeak = checkTransformLeak(); // Drag start predicate states.\n\nvar startPredicateInactive = 0;\nvar startPredicatePending = 1;\nvar startPredicateResolved = 2;\nvar startPredicateRejected = 3;\n/**\r\n * Bind Hammer touch interaction to an item.\r\n *\r\n * @class\r\n * @param {Item} item\r\n */\n\nvar ItemDrag = function (_Component) {\n  inherits(ItemDrag, _Component);\n\n  function ItemDrag(item) {\n    classCallCheck(this, ItemDrag);\n\n    var _this = possibleConstructorReturn(this, (ItemDrag.__proto__ || Object.getPrototypeOf(ItemDrag)).call(this, item));\n\n    if (!hammer) {\n      throw new Error('[' + namespace + '] required dependency Hammer is not defined.');\n    } // If we don't have a valid transform leak test result yet, let's run the\n    // test on first ItemDrag init. The test needs body element to be ready and\n    // here we can be sure that it is ready.\n\n\n    if (hasTransformLeak === null) {\n      hasTransformLeak = checkTransformLeak();\n    }\n\n    var drag = _this;\n    var element = item._element;\n    var grid = item.getGrid();\n    var settings = grid._settings;\n    var hammer$$1 = void 0; // Start predicate private data.\n\n    var startPredicate = typeof settings.dragStartPredicate === 'function' ? settings.dragStartPredicate : ItemDrag.defaultStartPredicate;\n    var startPredicateState = startPredicateInactive;\n    var startPredicateResult = void 0; // Protected data.\n\n    _this._item = item;\n    _this._gridId = grid._id;\n    _this._hammer = hammer$$1 = new hammer.Manager(element);\n    _this._isDestroyed = false;\n    _this._isMigrating = false; // Setup item's initial drag data.\n\n    _this._reset(); // Bind some methods that needs binding.\n\n\n    _this._onScroll = _this._onScroll.bind(_this);\n    _this._prepareMove = _this._prepareMove.bind(_this);\n    _this._applyMove = _this._applyMove.bind(_this);\n    _this._prepareScroll = _this._prepareScroll.bind(_this);\n    _this._applyScroll = _this._applyScroll.bind(_this);\n    _this._checkOverlap = _this._checkOverlap.bind(_this); // Create a private drag start resolver that can be used to resolve the drag\n    // start predicate asynchronously.\n\n    _this._forceResolveStartPredicate = function (event) {\n      if (!this._isDestroyed && startPredicateState === startPredicatePending) {\n        startPredicateState = startPredicateResolved;\n\n        this._onStart(event);\n      }\n    }; // Create debounce overlap checker function.\n\n\n    _this._checkOverlapDebounce = debounce(_this._checkOverlap, settings.dragSortInterval); // Add drag recognizer to hammer.\n\n    hammer$$1.add(new hammer.Pan({\n      event: 'drag',\n      pointers: 1,\n      threshold: 0,\n      direction: hammer.DIRECTION_ALL\n    })); // Add drag init recognizer to hammer.\n\n    hammer$$1.add(new hammer.Press({\n      event: 'draginit',\n      pointers: 1,\n      threshold: 1000,\n      time: 0\n    })); // Configure the hammer instance.\n\n    if (isPlainObject(settings.dragHammerSettings)) {\n      hammer$$1.set(settings.dragHammerSettings);\n    } // Bind drag events.\n\n\n    hammer$$1.on('draginit dragstart dragmove', function (e) {\n      // Let's activate drag start predicate state.\n      if (startPredicateState === startPredicateInactive) {\n        startPredicateState = startPredicatePending;\n      } // If predicate is pending try to resolve it.\n\n\n      if (startPredicateState === startPredicatePending) {\n        startPredicateResult = startPredicate(drag._item, e);\n\n        if (startPredicateResult === true) {\n          startPredicateState = startPredicateResolved;\n\n          drag._onStart(e);\n        } else if (startPredicateResult === false) {\n          startPredicateState = startPredicateRejected;\n        }\n      } // Otherwise if predicate is resolved and drag is active, move the item.\n      else if (startPredicateState === startPredicateResolved && drag._isActive) {\n        drag._onMove(e);\n      }\n    }).on('dragend dragcancel draginitup', function (e) {\n      // Check if the start predicate was resolved during drag.\n      var isResolved = startPredicateState === startPredicateResolved; // Do final predicate check to allow user to unbind stuff for the current\n      // drag procedure within the predicate callback. The return value of this\n      // check will have no effect to the state of the predicate.\n\n      startPredicate(drag._item, e); // Reset start predicate state.\n\n      startPredicateState = startPredicateInactive; // If predicate is resolved and dragging is active, call the end handler.\n\n      if (isResolved && drag._isActive) drag._onEnd(e);\n    }); // Prevent native link/image dragging for the item and it's ancestors.\n\n    element.addEventListener('dragstart', preventDefault, false);\n    return _this;\n  }\n  /**\r\n   * Public prototype methods\r\n   * ************************\r\n   */\n\n  /**\r\n   * Abort dragging and reset drag data.\r\n   *\r\n   * @public\r\n   * @memberof ItemDrag.prototype\r\n   * @returns {ItemDrag}\r\n   */\n\n\n  createClass(ItemDrag, [{\n    key: 'stop',\n    value: function stop() {\n      var item = this._item;\n      var element = item._element;\n\n      var grid = this._getGrid();\n\n      if (!this._isActive) return this; // If the item is being dropped into another grid, finish it up and return\n      // immediately.\n\n      if (this._isMigrating) {\n        this._finishMigration();\n\n        return this;\n      } // Cancel queued move and scroll ticks.\n\n\n      cancelMoveTick(item._id);\n      cancelScrollTick(item._id); // Remove scroll listeners.\n\n      this._unbindScrollListeners(); // Cancel overlap check.\n\n\n      this._checkOverlapDebounce('cancel'); // Append item element to the container if it's not it's child. Also make\n      // sure the translate values are adjusted to account for the DOM shift.\n\n\n      if (element.parentNode !== grid._element) {\n        grid._element.appendChild(element);\n\n        element.style[transformProp] = getTranslateString(this._gridX, this._gridY);\n      } // Remove dragging class.\n\n\n      removeClass(element, grid._settings.itemDraggingClass); // Reset drag data.\n\n      this._reset();\n\n      return this;\n    }\n    /**\r\n     * Destroy instance.\r\n     *\r\n     * @public\r\n     * @memberof ItemDrag.prototype\r\n     * @returns {ItemDrag}\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this._isDestroyed) return this;\n      this.stop();\n\n      this._hammer.destroy();\n\n      this._item._element.removeEventListener('dragstart', preventDefault, false);\n\n      this._isDestroyed = true;\n      return this;\n    }\n    /**\r\n     * Private prototype methods\r\n     * *************************\r\n     */\n\n    /**\r\n     * Get Grid instance.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     * @returns {?Grid}\r\n     */\n\n  }, {\n    key: '_getGrid',\n    value: function _getGrid() {\n      return gridInstances[this._gridId] || null;\n    }\n    /**\r\n     * Setup/reset drag data.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     */\n\n  }, {\n    key: '_reset',\n    value: function _reset() {\n      // Is item being dragged?\n      this._isActive = false; // The dragged item's container element.\n\n      this._container = null; // The dragged item's containing block.\n\n      this._containingBlock = null; // Hammer event data.\n\n      this._lastEvent = null;\n      this._lastScrollEvent = null; // All the elements which need to be listened for scroll events during\n      // dragging.\n\n      this._scrollers = []; // The current translateX/translateY position.\n\n      this._left = 0;\n      this._top = 0; // Dragged element's current position within the grid.\n\n      this._gridX = 0;\n      this._gridY = 0; // Dragged element's current offset from window's northwest corner. Does\n      // not account for element's margins.\n\n      this._elementClientX = 0;\n      this._elementClientY = 0; // Offset difference between the dragged element's temporary drag\n      // container and it's original container.\n\n      this._containerDiffX = 0;\n      this._containerDiffY = 0;\n    }\n    /**\r\n     * Bind drag scroll handlers to all scrollable ancestor elements of the\r\n     * dragged element and the drag container element.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     */\n\n  }, {\n    key: '_bindScrollListeners',\n    value: function _bindScrollListeners() {\n      var gridContainer = this._getGrid()._element;\n\n      var dragContainer = this._container;\n      var scrollers = this._scrollers;\n      var containerScrollers = void 0;\n      var i = void 0; // Get dragged element's scrolling parents.\n\n      scrollers.length = 0;\n      getScrollParents(this._item._element, scrollers); // If drag container is defined and it's not the same element as grid\n      // container then we need to add the grid container and it's scroll parents\n      // to the elements which are going to be listener for scroll events.\n\n      if (dragContainer !== gridContainer) {\n        containerScrollers = [];\n        getScrollParents(gridContainer, containerScrollers);\n        containerScrollers.push(gridContainer);\n\n        for (i = 0; i < containerScrollers.length; i++) {\n          if (!scrollers.includes(containerScrollers[i])) {\n            scrollers.push(containerScrollers[i]);\n          }\n        }\n      } // Bind scroll listeners.\n\n\n      for (i = 0; i < scrollers.length; i++) {\n        scrollers[i].addEventListener('scroll', this._onScroll);\n      }\n    }\n    /**\r\n     * Unbind currently bound drag scroll handlers from all scrollable ancestor\r\n     * elements of the dragged element and the drag container element.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     */\n\n  }, {\n    key: '_unbindScrollListeners',\n    value: function _unbindScrollListeners() {\n      var scrollers = this._scrollers;\n      var i = void 0;\n\n      for (i = 0; i < scrollers.length; i++) {\n        scrollers[i].removeEventListener('scroll', this._onScroll);\n      }\n\n      scrollers.length = 0;\n    }\n    /**\r\n     * Setup default start predicate.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     * @param {Object} [options]\r\n     * @returns {Object}\r\n     */\n\n  }, {\n    key: '_setupStartPredicate',\n    value: function _setupStartPredicate(options) {\n      var config = options || this._getGrid()._settings.dragStartPredicate || 0;\n      return this._startPredicateData = {\n        distance: Math.abs(config.distance) || 0,\n        delay: Math.max(config.delay, 0) || 0,\n        handle: typeof config.handle === 'string' ? config.handle : false\n      };\n    }\n    /**\r\n     * Setup default start predicate handle.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     * @param {Object} event\r\n     * @returns {?HTMLElement}\r\n     */\n\n  }, {\n    key: '_getStartPredicateHandle',\n    value: function _getStartPredicateHandle(event) {\n      var predicate = this._startPredicateData;\n      var element = this._item._element;\n      var handleElement = element; // No handle, no hassle -> let's use the item element as the handle.\n\n      if (!predicate.handle) return handleElement; // If there is a specific predicate handle defined, let's try to get it.\n\n      handleElement = (event.changedPointers[0] || 0).target;\n\n      while (handleElement && !elementMatches(handleElement, predicate.handle)) {\n        handleElement = handleElement !== element ? handleElement.parentElement : null;\n      }\n\n      return handleElement || null;\n    }\n    /**\r\n     * Unbind currently bound drag scroll handlers from all scrollable ancestor\r\n     * elements of the dragged element and the drag container element.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     * @param {Object} event\r\n     * @returns {Boolean}\r\n     */\n\n  }, {\n    key: '_resolveStartPredicate',\n    value: function _resolveStartPredicate(event) {\n      var predicate = this._startPredicateData;\n      var pointer = event.changedPointers[0];\n      var pageX = pointer && pointer.pageX || 0;\n      var pageY = pointer && pointer.pageY || 0;\n      var handleRect = void 0;\n      var handleLeft = void 0;\n      var handleTop = void 0;\n      var handleWidth = void 0;\n      var handleHeight = void 0; // If the moved distance is smaller than the threshold distance or there is\n      // some delay left, ignore this predicate cycle.\n\n      if (event.distance < predicate.distance || predicate.delay) return; // Get handle rect data.\n\n      handleRect = predicate.handleElement.getBoundingClientRect();\n      handleLeft = handleRect.left + (window.pageXOffset || 0);\n      handleTop = handleRect.top + (window.pageYOffset || 0);\n      handleWidth = handleRect.width;\n      handleHeight = handleRect.height; // Reset predicate data.\n\n      this._resetStartPredicate(); // If the cursor is still within the handle let's start the drag.\n\n\n      return handleWidth && handleHeight && pageX >= handleLeft && pageX < handleLeft + handleWidth && pageY >= handleTop && pageY < handleTop + handleHeight;\n    }\n    /**\r\n     * Finalize start predicate.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     * @param {Object} event\r\n     */\n\n  }, {\n    key: '_finishStartPredicate',\n    value: function _finishStartPredicate(event) {\n      var element = this._item._element; // Reset predicate.\n\n      this._resetStartPredicate(); // If the gesture can be interpreted as click let's try to open the element's\n      // href url (if it is an anchor element).\n\n\n      if (isClick(event)) openAnchorHref(element);\n    }\n    /**\r\n     * Reset for default drag start predicate function.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     */\n\n  }, {\n    key: '_resetStartPredicate',\n    value: function _resetStartPredicate() {\n      var predicate = this._startPredicateData;\n\n      if (predicate) {\n        if (predicate.delayTimer) {\n          predicate.delayTimer = window.clearTimeout(predicate.delayTimer);\n        }\n\n        this._startPredicateData = null;\n      }\n    }\n    /**\r\n     * Check (during drag) if an item is overlapping other items and based on\r\n     * the configuration layout the items.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     */\n\n  }, {\n    key: '_checkOverlap',\n    value: function _checkOverlap() {\n      if (!this._isActive) return;\n      var item = this._item;\n\n      var settings = this._getGrid()._settings;\n\n      var result = void 0;\n      var currentGrid = void 0;\n      var currentIndex = void 0;\n      var targetGrid = void 0;\n      var targetIndex = void 0;\n      var sortAction = void 0;\n      var isMigration = void 0; // Get overlap check result.\n\n      if (typeof settings.dragSortPredicate === 'function') {\n        result = settings.dragSortPredicate(item, this._lastEvent);\n      } else {\n        result = ItemDrag.defaultSortPredicate(item, settings.dragSortPredicate);\n      } // Let's make sure the result object has a valid index before going further.\n\n\n      if (!result || typeof result.index !== 'number') return;\n      currentGrid = item.getGrid();\n      targetGrid = result.grid || currentGrid;\n      isMigration = currentGrid !== targetGrid;\n      currentIndex = currentGrid._items.indexOf(item);\n      targetIndex = normalizeArrayIndex(targetGrid._items, result.index, isMigration);\n      sortAction = result.action === 'swap' ? 'swap' : 'move'; // If the item was moved within it's current grid.\n\n      if (!isMigration) {\n        // Make sure the target index is not the current index.\n        if (currentIndex !== targetIndex) {\n          // Do the sort.\n          (sortAction === 'swap' ? arraySwap : arrayMove)(currentGrid._items, currentIndex, targetIndex); // Emit move event.\n\n          if (currentGrid._hasListeners(eventMove)) {\n            currentGrid._emit(eventMove, {\n              item: item,\n              fromIndex: currentIndex,\n              toIndex: targetIndex,\n              action: sortAction\n            });\n          } // Layout the grid.\n\n\n          currentGrid.layout();\n        }\n      } // If the item was moved to another grid.\n      else {\n        // Emit beforeSend event.\n        if (currentGrid._hasListeners(eventBeforeSend)) {\n          currentGrid._emit(eventBeforeSend, {\n            item: item,\n            fromGrid: currentGrid,\n            fromIndex: currentIndex,\n            toGrid: targetGrid,\n            toIndex: targetIndex\n          });\n        } // Emit beforeReceive event.\n\n\n        if (targetGrid._hasListeners(eventBeforeReceive)) {\n          targetGrid._emit(eventBeforeReceive, {\n            item: item,\n            fromGrid: currentGrid,\n            fromIndex: currentIndex,\n            toGrid: targetGrid,\n            toIndex: targetIndex\n          });\n        } // Update item's grid id reference.\n\n\n        item._gridId = targetGrid._id; // Update drag instance's migrating indicator.\n\n        this._isMigrating = item._gridId !== this._gridId; // Move item instance from current grid to target grid.\n\n        currentGrid._items.splice(currentIndex, 1);\n\n        arrayInsert(targetGrid._items, item, targetIndex); // Set sort data as null, which is an indicator for the item comparison\n        // function that the sort data of this specific item should be fetched\n        // lazily.\n\n        item._sortData = null; // Emit send event.\n\n        if (currentGrid._hasListeners(eventSend)) {\n          currentGrid._emit(eventSend, {\n            item: item,\n            fromGrid: currentGrid,\n            fromIndex: currentIndex,\n            toGrid: targetGrid,\n            toIndex: targetIndex\n          });\n        } // Emit receive event.\n\n\n        if (targetGrid._hasListeners(eventReceive)) {\n          targetGrid._emit(eventReceive, {\n            item: item,\n            fromGrid: currentGrid,\n            fromIndex: currentIndex,\n            toGrid: targetGrid,\n            toIndex: targetIndex\n          });\n        } // Layout both grids.\n\n\n        currentGrid.layout();\n        targetGrid.layout();\n      }\n    }\n    /**\r\n     * If item is dragged into another grid, finish the migration process\r\n     * gracefully.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     */\n\n  }, {\n    key: '_finishMigration',\n    value: function _finishMigration() {\n      var item = this._item;\n      var release = item._release;\n      var element = item._element;\n      var isActive = item._isActive;\n      var targetGrid = item.getGrid();\n      var targetGridElement = targetGrid._element;\n      var targetSettings = targetGrid._settings;\n      var targetContainer = targetSettings.dragContainer || targetGridElement;\n\n      var currentSettings = this._getGrid()._settings;\n\n      var currentContainer = element.parentNode;\n      var translate = void 0;\n      var offsetDiff = void 0; // Destroy current drag. Note that we need to set the migrating flag to\n      // false first, because otherwise we create an infinite loop between this\n      // and the drag.stop() method.\n\n      this._isMigrating = false;\n      this.destroy(); // Remove current classnames.\n\n      removeClass(element, currentSettings.itemClass);\n      removeClass(element, currentSettings.itemVisibleClass);\n      removeClass(element, currentSettings.itemHiddenClass); // Add new classnames.\n\n      addClass(element, targetSettings.itemClass);\n      addClass(element, isActive ? targetSettings.itemVisibleClass : targetSettings.itemHiddenClass); // Move the item inside the target container if it's different than the\n      // current container.\n\n      if (targetContainer !== currentContainer) {\n        targetContainer.appendChild(element);\n        offsetDiff = getOffsetDiff(currentContainer, targetContainer, true);\n        translate = getTranslate(element);\n        translate.x -= offsetDiff.left;\n        translate.y -= offsetDiff.top;\n      } // Update item's cached dimensions and sort data.\n\n\n      item._refreshDimensions();\n\n      item._refreshSortData(); // Calculate the offset difference between target's drag container (if any)\n      // and actual grid container element. We save it later for the release\n      // process.\n\n\n      offsetDiff = getOffsetDiff(targetContainer, targetGridElement, true);\n      release._containerDiffX = offsetDiff.left;\n      release._containerDiffY = offsetDiff.top; // Recreate item's drag handler.\n\n      item._drag = targetSettings.dragEnabled ? new ItemDrag(item) : null; // Adjust the position of the item element if it was moved from a container\n      // to another.\n\n      if (targetContainer !== currentContainer) {\n        element.style[transformProp] = getTranslateString(translate.x, translate.y);\n      } // Update child element's styles to reflect the current visibility state.\n\n\n      item._child.removeAttribute('style');\n\n      setStyles(item._child, isActive ? targetSettings.visibleStyles : targetSettings.hiddenStyles); // Start the release.\n\n      release.start();\n    }\n    /**\r\n     * Drag start handler.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     * @param {Object} event\r\n     */\n\n  }, {\n    key: '_onStart',\n    value: function _onStart(event) {\n      var item = this._item; // If item is not active, don't start the drag.\n\n      if (!item._isActive) return;\n      var element = item._element;\n\n      var grid = this._getGrid();\n\n      var settings = grid._settings;\n      var release = item._release;\n      var migrate = item._migrate;\n      var gridContainer = grid._element;\n      var dragContainer = settings.dragContainer || gridContainer;\n      var containingBlock = getContainingBlock(dragContainer, true);\n      var translate = getTranslate(element);\n      var currentLeft = translate.x;\n      var currentTop = translate.y;\n      var elementRect = element.getBoundingClientRect();\n      var hasDragContainer = dragContainer !== gridContainer;\n      var offsetDiff = void 0; // If grid container is not the drag container, we need to calculate the\n      // offset difference between grid container and drag container's containing\n      // element.\n\n      if (hasDragContainer) {\n        offsetDiff = getOffsetDiff(containingBlock, gridContainer);\n      } // Stop current positioning animation.\n\n\n      if (item.isPositioning()) {\n        item._layout.stop(true, {\n          transform: getTranslateString(currentLeft, currentTop)\n        });\n      } // Stop current migration animation.\n\n\n      if (migrate._isActive) {\n        currentLeft -= migrate._containerDiffX;\n        currentTop -= migrate._containerDiffY;\n        migrate.stop(true, {\n          transform: getTranslateString(currentLeft, currentTop)\n        });\n      } // If item is being released reset release data.\n\n\n      if (item.isReleasing()) release._reset(); // Setup drag data.\n\n      this._isActive = true;\n      this._lastEvent = event;\n      this._container = dragContainer;\n      this._containingBlock = containingBlock;\n      this._elementClientX = elementRect.left;\n      this._elementClientY = elementRect.top;\n      this._left = this._gridX = currentLeft;\n      this._top = this._gridY = currentTop; // Emit dragInit event.\n\n      grid._emit(eventDragInit, item, event); // If a specific drag container is set and it is different from the\n      // grid's container element we need to cast some extra spells.\n\n\n      if (hasDragContainer) {\n        // Store the container offset diffs to drag data.\n        this._containerDiffX = offsetDiff.left;\n        this._containerDiffY = offsetDiff.top; // If the dragged element is a child of the drag container all we need to\n        // do is setup the relative drag position data.\n\n        if (element.parentNode === dragContainer) {\n          this._gridX = currentLeft - this._containerDiffX;\n          this._gridY = currentTop - this._containerDiffY;\n        } // Otherwise we need to append the element inside the correct container,\n        // setup the actual drag position data and adjust the element's translate\n        // values to account for the DOM position shift.\n        else {\n          this._left = currentLeft + this._containerDiffX;\n          this._top = currentTop + this._containerDiffY;\n          dragContainer.appendChild(element);\n          element.style[transformProp] = getTranslateString(this._left, this._top);\n        }\n      } // Set drag class and bind scrollers.\n\n\n      addClass(element, settings.itemDraggingClass);\n\n      this._bindScrollListeners(); // Emit dragStart event.\n\n\n      grid._emit(eventDragStart, item, event);\n    }\n    /**\r\n     * Drag move handler.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     * @param {Object} event\r\n     */\n\n  }, {\n    key: '_onMove',\n    value: function _onMove(event) {\n      var item = this._item; // If item is not active, reset drag.\n\n      if (!item._isActive) {\n        this.stop();\n        return;\n      }\n\n      var settings = this._getGrid()._settings;\n\n      var axis = settings.dragAxis;\n      var xDiff = event.deltaX - this._lastEvent.deltaX;\n      var yDiff = event.deltaY - this._lastEvent.deltaY; // Update last event.\n\n      this._lastEvent = event; // Update horizontal position data.\n\n      if (axis !== 'y') {\n        this._left += xDiff;\n        this._gridX += xDiff;\n        this._elementClientX += xDiff;\n      } // Update vertical position data.\n\n\n      if (axis !== 'x') {\n        this._top += yDiff;\n        this._gridY += yDiff;\n        this._elementClientY += yDiff;\n      } // Do move prepare/apply handling in the next tick.\n\n\n      addMoveTick(item._id, this._prepareMove, this._applyMove);\n    }\n    /**\r\n     * Prepare dragged item for moving.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     */\n\n  }, {\n    key: '_prepareMove',\n    value: function _prepareMove() {\n      // Do nothing if item is not active.\n      if (!this._item._isActive) return; // If drag sort is enabled -> check overlap.\n\n      if (this._getGrid()._settings.dragSort) this._checkOverlapDebounce();\n    }\n    /**\r\n     * Apply movement to dragged item.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     */\n\n  }, {\n    key: '_applyMove',\n    value: function _applyMove() {\n      var item = this._item; // Do nothing if item is not active.\n\n      if (!item._isActive) return; // Update element's translateX/Y values.\n\n      item._element.style[transformProp] = getTranslateString(this._left, this._top); // Emit dragMove event.\n\n      this._getGrid()._emit(eventDragMove, item, this._lastEvent);\n    }\n    /**\r\n     * Drag scroll handler.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     * @param {Object} event\r\n     */\n\n  }, {\n    key: '_onScroll',\n    value: function _onScroll(event) {\n      var item = this._item; // If item is not active, reset drag.\n\n      if (!item._isActive) {\n        this.stop();\n        return;\n      } // Update last scroll event.\n\n\n      this._lastScrollEvent = event; // Do scroll prepare/apply handling in the next tick.\n\n      addScrollTick(item._id, this._prepareScroll, this._applyScroll);\n    }\n    /**\r\n     * Prepare dragged item for scrolling.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     */\n\n  }, {\n    key: '_prepareScroll',\n    value: function _prepareScroll() {\n      var item = this._item; // If item is not active do nothing.\n\n      if (!item._isActive) return;\n      var element = item._element;\n\n      var grid = this._getGrid();\n\n      var settings = grid._settings;\n      var axis = settings.dragAxis;\n      var gridContainer = grid._element;\n      var offsetDiff = void 0; // Calculate element's rect and x/y diff.\n\n      var rect = element.getBoundingClientRect();\n      var xDiff = this._elementClientX - rect.left;\n      var yDiff = this._elementClientY - rect.top; // Update container diff.\n\n      if (this._container !== gridContainer) {\n        offsetDiff = getOffsetDiff(this._containingBlock, gridContainer);\n        this._containerDiffX = offsetDiff.left;\n        this._containerDiffY = offsetDiff.top;\n      } // Update horizontal position data.\n\n\n      if (axis !== 'y') {\n        this._left += xDiff;\n        this._gridX = this._left - this._containerDiffX;\n      } // Update vertical position data.\n\n\n      if (axis !== 'x') {\n        this._top += yDiff;\n        this._gridY = this._top - this._containerDiffY;\n      } // Overlap handling.\n\n\n      if (settings.dragSort) this._checkOverlapDebounce();\n    }\n    /**\r\n     * Apply scroll to dragged item.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     */\n\n  }, {\n    key: '_applyScroll',\n    value: function _applyScroll() {\n      var item = this._item; // If item is not active do nothing.\n\n      if (!item._isActive) return; // Update element's translateX/Y values.\n\n      item._element.style[transformProp] = getTranslateString(this._left, this._top); // Emit dragScroll event.\n\n      this._getGrid()._emit(eventDragScroll, item, this._lastScrollEvent);\n    }\n    /**\r\n     * Drag end handler.\r\n     *\r\n     * @private\r\n     * @memberof ItemDrag.prototype\r\n     * @param {Object} event\r\n     */\n\n  }, {\n    key: '_onEnd',\n    value: function _onEnd(event) {\n      var item = this._item;\n      var element = item._element;\n\n      var grid = this._getGrid();\n\n      var settings = grid._settings;\n      var release = item._release; // If item is not active, reset drag.\n\n      if (!item._isActive) {\n        this.stop();\n        return;\n      } // Cancel queued move and scroll ticks.\n\n\n      cancelMoveTick(item._id);\n      cancelScrollTick(item._id); // Finish currently queued overlap check.\n\n      settings.dragSort && this._checkOverlapDebounce('finish'); // Remove scroll listeners.\n\n      this._unbindScrollListeners(); // Setup release data.\n\n\n      release._containerDiffX = this._containerDiffX;\n      release._containerDiffY = this._containerDiffY; // Reset drag data.\n\n      this._reset(); // Remove drag class name from element.\n\n\n      removeClass(element, settings.itemDraggingClass); // Emit dragEnd event.\n\n      grid._emit(eventDragEnd, item, event); // Finish up the migration process or start the release process.\n\n\n      this._isMigrating ? this._finishMigration() : release.start();\n    }\n  }]);\n  return ItemDrag;\n}(Component);\n/**\r\n * Public static methods\r\n * *********************\r\n */\n\n/**\r\n * Default drag start predicate handler that handles anchor elements\r\n * gracefully. The return value of this function defines if the drag is\r\n * started, rejected or pending. When true is returned the dragging is started\r\n * and when false is returned the dragging is rejected. If nothing is returned\r\n * the predicate will be called again on the next drag movement.\r\n *\r\n * @public\r\n * @memberof ItemDrag\r\n * @param {Item} item\r\n * @param {Object} event\r\n * @param {Object} [options]\r\n *   - An optional options object which can be used to pass the predicate\r\n *     it's options manually. By default the predicate retrieves the options\r\n *     from the grid's settings.\r\n * @returns {Boolean}\r\n */\n\n\nItemDrag.defaultStartPredicate = function (item, event, options) {\n  var drag = item._drag;\n\n  var predicate = drag._startPredicateData || drag._setupStartPredicate(options); // Final event logic. At this stage return value does not matter anymore,\n  // the predicate is either resolved or it's not and there's nothing to do\n  // about it. Here we just reset data and if the item element is a link\n  // we follow it (if there has only been slight movement).\n\n\n  if (event.isFinal) {\n    drag._finishStartPredicate(event);\n\n    return;\n  } // Find and store the handle element so we can check later on if the\n  // cursor is within the handle. If we have a handle selector let's find\n  // the corresponding element. Otherwise let's use the item element as the\n  // handle.\n\n\n  if (!predicate.handleElement) {\n    predicate.handleElement = drag._getStartPredicateHandle(event);\n    if (!predicate.handleElement) return false;\n  } // If delay is defined let's keep track of the latest event and initiate\n  // delay if it has not been done yet.\n\n\n  if (predicate.delay) {\n    predicate.event = event;\n\n    if (!predicate.delayTimer) {\n      predicate.delayTimer = window.setTimeout(function () {\n        predicate.delay = 0;\n\n        if (drag._resolveStartPredicate(predicate.event)) {\n          drag._forceResolveStartPredicate(predicate.event);\n\n          drag._resetStartPredicate();\n        }\n      }, predicate.delay);\n    }\n  }\n\n  return drag._resolveStartPredicate(event);\n};\n/**\r\n * Default drag sort predicate.\r\n *\r\n * @public\r\n * @memberof ItemDrag\r\n * @param {Item} item\r\n * @param {Object} [options]\r\n * @param {Number} [options.threshold=50]\r\n * @param {String} [options.action='move']\r\n * @returns {(Boolean|DragSortCommand)}\r\n *   - Returns false if no valid index was found. Otherwise returns drag sort\r\n *     command.\r\n */\n\n\nItemDrag.defaultSortPredicate = function () {\n  var itemRect = {};\n  var targetRect = {};\n  var returnData = {};\n  var rootGridArray = [];\n\n  function getTargetGrid(item, rootGrid, threshold) {\n    var target = null;\n    var dragSort = rootGrid._settings.dragSort;\n    var bestScore = -1;\n    var gridScore = void 0;\n    var grids = void 0;\n    var grid = void 0;\n    var i = void 0; // Get potential target grids.\n\n    if (dragSort === true) {\n      rootGridArray[0] = rootGrid;\n      grids = rootGridArray;\n    } else {\n      grids = dragSort.call(rootGrid, item);\n    } // Return immediately if there are no grids.\n\n\n    if (!Array.isArray(grids)) return target; // Loop through the grids and get the best match.\n\n    for (i = 0; i < grids.length; i++) {\n      grid = grids[i]; // Filter out all destroyed grids.\n\n      if (grid._isDestroyed) continue; // We need to update the grid's offsets and dimensions since they might\n      // have changed (e.g during scrolling).\n\n      grid._updateBoundingRect(); // Check how much dragged element overlaps the container element.\n\n\n      targetRect.width = grid._width;\n      targetRect.height = grid._height;\n      targetRect.left = grid._left;\n      targetRect.top = grid._top;\n      gridScore = getRectOverlapScore(itemRect, targetRect); // Check if this grid is the best match so far.\n\n      if (gridScore > threshold && gridScore > bestScore) {\n        bestScore = gridScore;\n        target = grid;\n      }\n    } // Always reset root grid array.\n\n\n    rootGridArray.length = 0;\n    return target;\n  }\n\n  return function (item, options) {\n    var drag = item._drag;\n\n    var rootGrid = drag._getGrid(); // Get drag sort predicate settings.\n\n\n    var sortThreshold = options && typeof options.threshold === 'number' ? options.threshold : 50;\n    var sortAction = options && options.action === 'swap' ? 'swap' : 'move'; // Populate item rect data.\n\n    itemRect.width = item._width;\n    itemRect.height = item._height;\n    itemRect.left = drag._elementClientX;\n    itemRect.top = drag._elementClientY; // Calculate the target grid.\n\n    var grid = getTargetGrid(item, rootGrid, sortThreshold); // Return early if we found no grid container element that overlaps the\n    // dragged item enough.\n\n    if (!grid) return false;\n    var gridOffsetLeft = 0;\n    var gridOffsetTop = 0;\n    var matchScore = -1;\n    var matchIndex = void 0;\n    var hasValidTargets = void 0;\n    var target = void 0;\n    var score = void 0;\n    var i = void 0; // If item is moved within it's originating grid adjust item's left and\n    // top props. Otherwise if item is moved to/within another grid get the\n    // container element's offset (from the element's content edge).\n\n    if (grid === rootGrid) {\n      itemRect.left = drag._gridX + item._marginLeft;\n      itemRect.top = drag._gridY + item._marginTop;\n    } else {\n      grid._updateBorders(1, 0, 1, 0);\n\n      gridOffsetLeft = grid._left + grid._borderLeft;\n      gridOffsetTop = grid._top + grid._borderTop;\n    } // Loop through the target grid items and try to find the best match.\n\n\n    for (i = 0; i < grid._items.length; i++) {\n      target = grid._items[i]; // If the target item is not active or the target item is the dragged\n      // item let's skip to the next item.\n\n      if (!target._isActive || target === item) {\n        continue;\n      } // Mark the grid as having valid target items.\n\n\n      hasValidTargets = true; // Calculate the target's overlap score with the dragged item.\n\n      targetRect.width = target._width;\n      targetRect.height = target._height;\n      targetRect.left = target._left + target._marginLeft + gridOffsetLeft;\n      targetRect.top = target._top + target._marginTop + gridOffsetTop;\n      score = getRectOverlapScore(itemRect, targetRect); // Update best match index and score if the target's overlap score with\n      // the dragged item is higher than the current best match score.\n\n      if (score > matchScore) {\n        matchIndex = i;\n        matchScore = score;\n      }\n    } // If there is no valid match and the item is being moved into another\n    // grid.\n\n\n    if (matchScore < sortThreshold && item.getGrid() !== grid) {\n      matchIndex = hasValidTargets ? -1 : 0;\n      matchScore = Infinity;\n    } // Check if the best match overlaps enough to justify a placement switch.\n\n\n    if (matchScore >= sortThreshold) {\n      returnData.grid = grid;\n      returnData.index = matchIndex;\n      returnData.action = sortAction;\n      return returnData;\n    }\n\n    return false;\n  };\n}();\n/**\r\n * Private helpers\r\n * ***************\r\n */\n\n/**\r\n * Prevent default.\r\n *\r\n * @param {Object} e\r\n */\n\n\nfunction preventDefault(e) {\n  if (e.preventDefault) e.preventDefault();\n}\n/**\r\n * Calculate how many percent the intersection area of two rectangles is from\r\n * the maximum potential intersection area between the rectangles.\r\n *\r\n * @param {Rectangle} a\r\n * @param {Rectangle} b\r\n * @returns {Number}\r\n *   - A number between 0-100.\r\n */\n\n\nfunction getRectOverlapScore(a, b) {\n  // Return 0 immediately if the rectangles do not overlap.\n  if (a.left + a.width <= b.left || b.left + b.width <= a.left || a.top + a.height <= b.top || b.top + b.height <= a.top) {\n    return 0;\n  } // Calculate intersection area's width, height, max height and max width.\n\n\n  var width = Math.min(a.left + a.width, b.left + b.width) - Math.max(a.left, b.left);\n  var height = Math.min(a.top + a.height, b.top + b.height) - Math.max(a.top, b.top);\n  var maxWidth = Math.min(a.width, b.width);\n  var maxHeight = Math.min(a.height, b.height);\n  return width * height / (maxWidth * maxHeight) * 100;\n}\n/**\r\n * Get element's scroll parents.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {Array} [data]\r\n * @returns {HTMLElement[]}\r\n */\n\n\nfunction getScrollParents(element, data) {\n  var ret = data || [];\n  var parent = element.parentNode; //\n  // If transformed elements leak fixed elements.\n  //\n\n  if (hasTransformLeak) {\n    // If the element is fixed it can not have any scroll parents.\n    if (getStyle(element, 'position') === 'fixed') return ret; // Find scroll parents.\n\n    while (parent && parent !== document && parent !== document.documentElement) {\n      if (isScrollable(parent)) ret.push(parent);\n      parent = getStyle(parent, 'position') === 'fixed' ? null : parent.parentNode;\n    } // If parent is not fixed element, add window object as the last scroll\n    // parent.\n\n\n    parent !== null && ret.push(window);\n    return ret;\n  } //\n  // If fixed elements behave as defined in the W3C specification.\n  //\n  // Find scroll parents.\n\n\n  while (parent && parent !== document) {\n    // If the currently looped element is fixed ignore all parents that are\n    // not transformed.\n    if (getStyle(element, 'position') === 'fixed' && !isTransformed(parent)) {\n      parent = parent.parentNode;\n      continue;\n    } // Add the parent element to return items if it is scrollable.\n\n\n    if (isScrollable(parent)) ret.push(parent); // Update element and parent references.\n\n    element = parent;\n    parent = parent.parentNode;\n  } // If the last item is the root element, replace it with window. The root\n  // element scroll is propagated to the window.\n\n\n  if (ret[ret.length - 1] === document.documentElement) {\n    ret[ret.length - 1] = window;\n  } // Otherwise add window as the last scroll parent.\n  else {\n    ret.push(window);\n  }\n\n  return ret;\n}\n/**\r\n * Check if an element is scrollable.\r\n *\r\n * @param {HTMLElement} element\r\n * @returns {Boolean}\r\n */\n\n\nfunction isScrollable(element) {\n  var overflow = getStyle(element, 'overflow');\n  if (overflow === 'auto' || overflow === 'scroll') return true;\n  overflow = getStyle(element, 'overflow-x');\n  if (overflow === 'auto' || overflow === 'scroll') return true;\n  overflow = getStyle(element, 'overflow-y');\n  if (overflow === 'auto' || overflow === 'scroll') return true;\n  return false;\n}\n/**\r\n * Check if drag gesture can be interpreted as a click, based on final drag\r\n * event data.\r\n *\r\n * @param {Object} element\r\n * @returns {Boolean}\r\n */\n\n\nfunction isClick(event) {\n  return Math.abs(event.deltaX) < 2 && Math.abs(event.deltaY) < 2 && event.deltaTime < 200;\n}\n/**\r\n * Check if an element is an anchor element and open the href url if possible.\r\n *\r\n * @param {HTMLElement} element\r\n */\n\n\nfunction openAnchorHref(element) {\n  // Make sure the element is anchor element.\n  if (element.tagName.toLowerCase() !== 'a') return; // Get href and make sure it exists.\n\n  var href = element.getAttribute('href');\n  if (!href) return; // Finally let's navigate to the link href.\n\n  var target = element.getAttribute('target');\n\n  if (target && target !== '_self') {\n    window.open(href, target);\n  } else {\n    window.location.href = href;\n  }\n}\n/**\r\n * Detects if transformed elements leak fixed elements. According W3C\r\n * transform rendering spec a transformed element should contain even fixed\r\n * elements. Meaning that fixed elements are positioned relative to the\r\n * closest transformed ancestor element instead of window. However, not every\r\n * browser follows the spec (IE and older Firefox). So we need to test it.\r\n * https://www.w3.org/TR/css3-2d-transforms/#transform-rendering\r\n *\r\n * Borrowed from Mezr (v0.6.1):\r\n * https://github.com/niklasramo/mezr/blob/0.6.1/mezr.js#L607\r\n */\n\n\nfunction checkTransformLeak() {\n  // No transforms -> definitely leaks.\n  if (!isTransformSupported) return true; // No body available -> can't check it.\n\n  if (!document.body) return null; // Do the test.\n\n  var elems = [0, 1].map(function (elem, isInner) {\n    elem = document.createElement('div');\n    elem.style.position = isInner ? 'fixed' : 'absolute';\n    elem.style.display = 'block';\n    elem.style.visibility = 'hidden';\n    elem.style.left = isInner ? '0px' : '1px';\n    elem.style[transformProp] = 'none';\n    return elem;\n  });\n  var outer = document.body.appendChild(elems[0]);\n  var inner = outer.appendChild(elems[1]);\n  var left = inner.getBoundingClientRect().left;\n  outer.style[transformProp] = 'scale(1)';\n  var ret = left === inner.getBoundingClientRect().left;\n  document.body.removeChild(outer);\n  return ret;\n}\n/**\r\n * Muuri Queue\r\n * Copyright (c) 2018-present, Niklas Rämö <inramo@gmail.com>\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/src/Queue/LICENSE.md\r\n */\n\n/**\r\n * Queue constructor.\r\n *\r\n * @class\r\n */\n\n\nvar Queue = function (_Component) {\n  inherits(Queue, _Component);\n\n  function Queue() {\n    classCallCheck(this, Queue);\n\n    var _this = possibleConstructorReturn(this, (Queue.__proto__ || Object.getPrototypeOf(Queue)).call(this));\n\n    _this._queue = [];\n    _this._isDestroyed = false;\n    return _this;\n  }\n\n  createClass(Queue, [{\n    key: 'add',\n\n    /**\r\n    * Public prototype methods\r\n    * ************************\r\n    */\n\n    /**\r\n    * Add callback to the queue.\r\n    *\r\n    * @public\r\n    * @memberof Queue.prototype\r\n    * @param {Function} callback\r\n    * @returns {Queue}\r\n    */\n    value: function add(callback) {\n      if (this._isDestroyed) return this;\n\n      this._queue.push(callback);\n\n      return this;\n    }\n  }, {\n    key: 'flush',\n\n    /**\r\n    * Process queue callbacks and reset the queue.\r\n    *\r\n    * @public\r\n    * @memberof Queue.prototype\r\n    * @param {*} arg1\r\n    * @param {*} arg2\r\n    * @returns {Queue}\r\n    */\n    value: function flush(arg1, arg2) {\n      if (this._isDestroyed) return this;\n      var queue = this._queue;\n      var length = queue.length;\n      var i = void 0; // Quit early if the queue is empty.\n\n      if (!length) return this;\n      var singleCallback = length === 1;\n      var snapshot = singleCallback ? queue[0] : queue.slice(0); // Reset queue.\n\n      queue.length = 0; // If we only have a single callback let's just call it.\n\n      if (singleCallback) {\n        snapshot(arg1, arg2);\n        return this;\n      } // If we have multiple callbacks, let's process them.\n\n\n      for (i = 0; i < length; i++) {\n        snapshot[i](arg1, arg2);\n        if (this._isDestroyed) break;\n      }\n\n      return this;\n    }\n    /**\r\n    * Destroy Queue instance.\r\n    *\r\n    * @public\r\n    * @memberof Queue.prototype\r\n    * @returns {Queue}\r\n    */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this._isDestroyed) return this;\n      this._isDestroyed = true;\n      this._queue.length = 0;\n      return this;\n    }\n  }]);\n  return Queue;\n}(Component);\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n/**\r\n * Layout manager for Item instance.\r\n *\r\n * @class\r\n * @param {Item} item\r\n */\n\n\nvar ItemLayout = function (_Component) {\n  inherits(ItemLayout, _Component);\n\n  function ItemLayout(item) {\n    classCallCheck(this, ItemLayout);\n\n    var _this = possibleConstructorReturn(this, (ItemLayout.__proto__ || Object.getPrototypeOf(ItemLayout)).call(this, item));\n\n    _this._item = item;\n    _this._isActive = false;\n    _this._isDestroyed = false;\n    _this._isInterrupted = false;\n    _this._currentStyles = {};\n    _this._targetStyles = {};\n    _this._currentLeft = 0;\n    _this._currentTop = 0;\n    _this._offsetLeft = 0;\n    _this._offsetTop = 0;\n    _this._skipNextAnimation = false;\n    _this._animateOptions = {\n      onFinish: _this._finish.bind(_this)\n    };\n    _this._queue = new Queue(); // Bind animation handlers and finish method.\n\n    _this._setupAnimation = _this._setupAnimation.bind(_this);\n    _this._startAnimation = _this._startAnimation.bind(_this);\n    return _this;\n  }\n  /**\r\n   * Public prototype methods\r\n   * ************************\r\n   */\n\n  /**\r\n   * Start item layout based on it's current data.\r\n   *\r\n   * @public\r\n   * @memberof ItemLayout.prototype\r\n   * @param {Boolean} [instant=false]\r\n   * @param {Function} [onFinish]\r\n   * @returns {ItemLayout}\r\n   */\n\n\n  createClass(ItemLayout, [{\n    key: 'start',\n    value: function start(instant, onFinish) {\n      if (this._isDestroyed) return;\n      var item = this._item;\n      var element = item._element;\n      var release = item._release;\n\n      var gridSettings = item.getGrid()._settings;\n\n      var isPositioning = this._isActive;\n      var isJustReleased = release._isActive && release._isPositioningStarted === false;\n      var animDuration = isJustReleased ? gridSettings.dragReleaseDuration : gridSettings.layoutDuration;\n      var animEasing = isJustReleased ? gridSettings.dragReleaseEasing : gridSettings.layoutEasing;\n      var animEnabled = !instant && !this._skipNextAnimation && animDuration > 0;\n      var isAnimating = void 0; // If the item is currently positioning process current layout callback\n      // queue with interrupted flag on.\n\n      if (isPositioning) this._queue.flush(true, item); // Mark release positioning as started.\n\n      if (isJustReleased) release._isPositioningStarted = true; // Push the callback to the callback queue.\n\n      if (typeof onFinish === 'function') this._queue.add(onFinish); // If no animations are needed, easy peasy!\n\n      if (!animEnabled) {\n        this._updateOffsets();\n\n        this._updateTargetStyles();\n\n        isPositioning && cancelLayoutTick(item._id);\n        isAnimating = item._animate.isAnimating();\n        this.stop(false, this._targetStyles);\n        !isAnimating && setStyles(element, this._targetStyles);\n        this._skipNextAnimation = false;\n        return this._finish();\n      } // Set item active and store some data for the animation that is about to be\n      // triggered.\n\n\n      this._isActive = true;\n      this._animateOptions.easing = animEasing;\n      this._animateOptions.duration = animDuration;\n      this._isInterrupted = isPositioning; // Start the item's layout animation in the next tick.\n\n      addLayoutTick(item._id, this._setupAnimation, this._startAnimation);\n      return this;\n    }\n    /**\r\n     * Stop item's position animation if it is currently animating.\r\n     *\r\n     * @public\r\n     * @memberof ItemLayout.prototype\r\n     * @param {Boolean} [processCallbackQueue=false]\r\n     * @param {Object} [targetStyles]\r\n     * @returns {ItemLayout}\r\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop(processCallbackQueue, targetStyles) {\n      if (this._isDestroyed || !this._isActive) return this;\n      var item = this._item; // Cancel animation init.\n\n      cancelLayoutTick(item._id); // Stop animation.\n\n      item._animate.stop(targetStyles); // Remove positioning class.\n\n\n      removeClass(item._element, item.getGrid()._settings.itemPositioningClass); // Reset active state.\n\n      this._isActive = false; // Process callback queue if needed.\n\n      if (processCallbackQueue) this._queue.flush(true, item);\n      return this;\n    }\n    /**\r\n     * Destroy the instance and stop current animation if it is running.\r\n     *\r\n     * @public\r\n     * @memberof ItemLayout.prototype\r\n     * @returns {ItemLayout}\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this._isDestroyed) return this;\n      this.stop(true, {});\n\n      this._queue.destroy();\n\n      this._item = this._currentStyles = this._targetStyles = this._animateOptions = null;\n      this._isDestroyed = true;\n      return this;\n    }\n    /**\r\n     * Private prototype methods\r\n     * *************************\r\n     */\n\n    /**\r\n     * Calculate and update item's current layout offset data.\r\n     *\r\n     * @private\r\n     * @memberof ItemLayout.prototype\r\n     */\n\n  }, {\n    key: '_updateOffsets',\n    value: function _updateOffsets() {\n      if (this._isDestroyed) return;\n      var item = this._item;\n      var migrate = item._migrate;\n      var release = item._release;\n      this._offsetLeft = release._isActive ? release._containerDiffX : migrate._isActive ? migrate._containerDiffX : 0;\n      this._offsetTop = release._isActive ? release._containerDiffY : migrate._isActive ? migrate._containerDiffY : 0;\n    }\n    /**\r\n     * Calculate and update item's layout target styles.\r\n     *\r\n     * @private\r\n     * @memberof ItemLayout.prototype\r\n     */\n\n  }, {\n    key: '_updateTargetStyles',\n    value: function _updateTargetStyles() {\n      if (this._isDestroyed) return;\n      var item = this._item;\n      this._targetStyles.transform = getTranslateString(item._left + this._offsetLeft, item._top + this._offsetTop);\n    }\n    /**\r\n     * Finish item layout procedure.\r\n     *\r\n     * @private\r\n     * @memberof ItemLayout.prototype\r\n     */\n\n  }, {\n    key: '_finish',\n    value: function _finish() {\n      if (this._isDestroyed) return;\n      var item = this._item;\n      var migrate = item._migrate;\n      var release = item._release; // Mark the item as inactive and remove positioning classes.\n\n      if (this._isActive) {\n        this._isActive = false;\n        removeClass(item._element, item.getGrid()._settings.itemPositioningClass);\n      } // Finish up release and migration.\n\n\n      if (release._isActive) release.stop();\n      if (migrate._isActive) migrate.stop(); // Process the callback queue.\n\n      this._queue.flush(false, item);\n    }\n    /**\r\n     * Prepare item for layout animation.\r\n     *\r\n     * @private\r\n     * @memberof ItemLayout.prototype\r\n     */\n\n  }, {\n    key: '_setupAnimation',\n    value: function _setupAnimation() {\n      var element = this._item._element;\n      var translate = getTranslate(element);\n      this._currentLeft = translate.x;\n      this._currentTop = translate.y;\n    }\n    /**\r\n     * Start layout animation.\r\n     *\r\n     * @private\r\n     * @memberof ItemLayout.prototype\r\n     */\n\n  }, {\n    key: '_startAnimation',\n    value: function _startAnimation() {\n      var item = this._item;\n      var element = item._element;\n      var grid = item.getGrid();\n      var settings = grid._settings; // Let's update the offset data and target styles.\n\n      this._updateOffsets();\n\n      this._updateTargetStyles(); // If the item is already in correct position let's quit early.\n\n\n      if (item._left === this._currentLeft - this._offsetLeft && item._top === this._currentTop - this._offsetTop) {\n        if (this._isInterrupted) this.stop(false, this._targetStyles);\n        this._isActive = false;\n\n        this._finish();\n\n        return;\n      } // Set item's positioning class if needed.\n\n\n      !this._isInterrupted && addClass(element, settings.itemPositioningClass); // Get current styles for animation.\n\n      this._currentStyles.transform = getTranslateString(this._currentLeft, this._currentTop); // Animate.\n\n      item._animate.start(this._currentStyles, this._targetStyles, this._animateOptions);\n    }\n  }]);\n  return ItemLayout;\n}(Component);\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n\nvar tempStyles = {};\n/**\r\n * The migrate process handler constructor.\r\n *\r\n * @class\r\n * @param {Item} item\r\n */\n\nvar ItemMigrate = function (_Component) {\n  inherits(ItemMigrate, _Component);\n\n  function ItemMigrate(item) {\n    classCallCheck(this, ItemMigrate); // Private props.\n\n    var _this = possibleConstructorReturn(this, (ItemMigrate.__proto__ || Object.getPrototypeOf(ItemMigrate)).call(this, item));\n\n    _this._item = item;\n    _this._isActive = false;\n    _this._isDestroyed = false;\n    _this._container = false;\n    _this._containerDiffX = 0;\n    _this._containerDiffY = 0;\n    return _this;\n  }\n  /**\r\n   * Public prototype methods\r\n   * ************************\r\n   */\n\n  /**\r\n   * Start the migrate process of an item.\r\n   *\r\n   * @public\r\n   * @memberof ItemMigrate.prototype\r\n   * @param {Grid} targetGrid\r\n   * @param {GridSingleItemQuery} position\r\n   * @param {HTMLElement} [container]\r\n   * @returns {ItemMigrate}\r\n   */\n\n\n  createClass(ItemMigrate, [{\n    key: 'start',\n    value: function start(targetGrid, position, container) {\n      if (this._isDestroyed) return this;\n      var item = this._item;\n      var element = item._element;\n      var isVisible = item.isVisible();\n      var grid = item.getGrid();\n      var settings = grid._settings;\n      var targetSettings = targetGrid._settings;\n      var targetElement = targetGrid._element;\n      var targetItems = targetGrid._items;\n\n      var currentIndex = grid._items.indexOf(item);\n\n      var targetContainer = container || document.body;\n      var targetIndex = void 0;\n      var targetItem = void 0;\n      var currentContainer = void 0;\n      var offsetDiff = void 0;\n      var containerDiff = void 0;\n      var translate = void 0;\n      var translateX = void 0;\n      var translateY = void 0; // Get target index.\n\n      if (typeof position === 'number') {\n        targetIndex = normalizeArrayIndex(targetItems, position, true);\n      } else {\n        targetItem = targetGrid._getItem(position);\n        /** @todo Consider throwing an error here instead of silently failing. */\n\n        if (!targetItem) return this;\n        targetIndex = targetItems.indexOf(targetItem);\n      } // Get current translateX and translateY values if needed.\n\n\n      if (item.isPositioning() || this._isActive || item.isReleasing()) {\n        translate = getTranslate(element);\n        translateX = translate.x;\n        translateY = translate.y;\n      } // Abort current positioning.\n\n\n      if (item.isPositioning()) {\n        item._layout.stop(true, {\n          transform: getTranslateString(translateX, translateY)\n        });\n      } // Abort current migration.\n\n\n      if (this._isActive) {\n        translateX -= this._containerDiffX;\n        translateY -= this._containerDiffY;\n        this.stop(true, {\n          transform: getTranslateString(translateX, translateY)\n        });\n      } // Abort current release.\n\n\n      if (item.isReleasing()) {\n        translateX -= item._release._containerDiffX;\n        translateY -= item._release._containerDiffY;\n\n        item._release.stop(true, {\n          transform: getTranslateString(translateX, translateY)\n        });\n      } // Stop current visibility animations.\n\n\n      item._visibility._stopAnimation(); // Destroy current drag.\n\n\n      if (item._drag) item._drag.destroy(); // Process current visibility animation queue.\n\n      item._visibility._queue.flush(true, item); // Emit beforeSend event.\n\n\n      if (grid._hasListeners(eventBeforeSend)) {\n        grid._emit(eventBeforeSend, {\n          item: item,\n          fromGrid: grid,\n          fromIndex: currentIndex,\n          toGrid: targetGrid,\n          toIndex: targetIndex\n        });\n      } // Emit beforeReceive event.\n\n\n      if (targetGrid._hasListeners(eventBeforeReceive)) {\n        targetGrid._emit(eventBeforeReceive, {\n          item: item,\n          fromGrid: grid,\n          fromIndex: currentIndex,\n          toGrid: targetGrid,\n          toIndex: targetIndex\n        });\n      } // Remove current classnames.\n\n\n      removeClass(element, settings.itemClass);\n      removeClass(element, settings.itemVisibleClass);\n      removeClass(element, settings.itemHiddenClass); // Add new classnames.\n\n      addClass(element, targetSettings.itemClass);\n      addClass(element, isVisible ? targetSettings.itemVisibleClass : targetSettings.itemHiddenClass); // Move item instance from current grid to target grid.\n\n      grid._items.splice(currentIndex, 1);\n\n      arrayInsert(targetItems, item, targetIndex); // Update item's grid id reference.\n\n      item._gridId = targetGrid._id; // Get current container.\n\n      currentContainer = element.parentNode; // Move the item inside the target container if it's different than the\n      // current container.\n\n      if (targetContainer !== currentContainer) {\n        targetContainer.appendChild(element);\n        offsetDiff = getOffsetDiff(targetContainer, currentContainer, true);\n\n        if (!translate) {\n          translate = getTranslate(element);\n          translateX = translate.x;\n          translateY = translate.y;\n        }\n\n        element.style[transformProp] = getTranslateString(translateX + offsetDiff.left, translateY + offsetDiff.top);\n      } // Update child element's styles to reflect the current visibility state.\n\n\n      item._child.removeAttribute('style');\n\n      setStyles(item._child, isVisible ? targetSettings.visibleStyles : targetSettings.hiddenStyles); // Update display style.\n\n      element.style.display = isVisible ? 'block' : 'hidden'; // Get offset diff for the migration data.\n\n      containerDiff = getOffsetDiff(targetContainer, targetElement, true); // Update item's cached dimensions and sort data.\n\n      item._refreshDimensions();\n\n      item._refreshSortData(); // Create new drag handler.\n\n\n      item._drag = targetSettings.dragEnabled ? new ItemDrag(item) : null; // Setup migration data.\n\n      this._isActive = true;\n      this._container = targetContainer;\n      this._containerDiffX = containerDiff.left;\n      this._containerDiffY = containerDiff.top; // Emit send event.\n\n      if (grid._hasListeners(eventSend)) {\n        grid._emit(eventSend, {\n          item: item,\n          fromGrid: grid,\n          fromIndex: currentIndex,\n          toGrid: targetGrid,\n          toIndex: targetIndex\n        });\n      } // Emit receive event.\n\n\n      if (targetGrid._hasListeners(eventReceive)) {\n        targetGrid._emit(eventReceive, {\n          item: item,\n          fromGrid: grid,\n          fromIndex: currentIndex,\n          toGrid: targetGrid,\n          toIndex: targetIndex\n        });\n      }\n\n      return this;\n    }\n    /**\r\n     * End the migrate process of an item. This method can be used to abort an\r\n     * ongoing migrate process (animation) or finish the migrate process.\r\n     *\r\n     * @public\r\n     * @memberof ItemMigrate.prototype\r\n     * @param {Boolean} [abort=false]\r\n     *  - Should the migration be aborted?\r\n     * @param {Object} [currentStyles]\r\n     *  - Optional current translateX and translateY styles.\r\n     * @returns {ItemMigrate}\r\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop(abort, currentStyles) {\n      if (this._isDestroyed || !this._isActive) return this;\n      var item = this._item;\n      var element = item._element;\n      var grid = item.getGrid();\n      var gridElement = grid._element;\n      var translate = void 0;\n\n      if (this._container !== gridElement) {\n        if (!currentStyles) {\n          if (abort) {\n            translate = getTranslate(element);\n            tempStyles.transform = getTranslateString(translate.x - this._containerDiffX, translate.y - this._containerDiffY);\n          } else {\n            tempStyles.transform = getTranslateString(item._left, item._top);\n          }\n\n          currentStyles = tempStyles;\n        }\n\n        gridElement.appendChild(element);\n        setStyles(element, currentStyles);\n      }\n\n      this._isActive = false;\n      this._container = null;\n      this._containerDiffX = 0;\n      this._containerDiffY = 0;\n      return this;\n    }\n    /**\r\n     * Destroy instance.\r\n     *\r\n     * @public\r\n     * @memberof ItemMigrate.prototype\r\n     * @returns {ItemMigrate}\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this._isDestroyed) return this;\n      this.stop(true);\n      this._item = null;\n      this._isDestroyed = true;\n      return this;\n    }\n  }]);\n  return ItemMigrate;\n}(Component);\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n\nvar tempStyles$1 = {};\n/**\r\n * The release process handler constructor. Although this might seem as proper\r\n * fit for the drag process this needs to be separated into it's own logic\r\n * because there might be a scenario where drag is disabled, but the release\r\n * process still needs to be implemented (dragging from a grid to another).\r\n *\r\n * @class\r\n * @param {Item} item\r\n */\n\nvar ItemRelease = function (_Component) {\n  inherits(ItemRelease, _Component);\n\n  function ItemRelease(item) {\n    classCallCheck(this, ItemRelease);\n\n    var _this = possibleConstructorReturn(this, (ItemRelease.__proto__ || Object.getPrototypeOf(ItemRelease)).call(this, item));\n\n    _this._item = item;\n    _this._isActive = false;\n    _this._isDestroyed = false;\n    _this._isPositioningStarted = false;\n    _this._containerDiffX = 0;\n    _this._containerDiffY = 0;\n    return _this;\n  }\n  /**\r\n   * Public prototype methods\r\n   * ************************\r\n   */\n\n  /**\r\n   * Start the release process of an item.\r\n   *\r\n   * @public\r\n   * @memberof ItemRelease.prototype\r\n   * @returns {ItemRelease}\r\n   */\n\n\n  createClass(ItemRelease, [{\n    key: 'start',\n    value: function start() {\n      if (this._isDestroyed || this._isActive) return this;\n      var item = this._item;\n      var grid = item.getGrid(); // Flag release as active.\n\n      this._isActive = true; // Add release class name to the released element.\n\n      addClass(item._element, grid._settings.itemReleasingClass); // Emit dragReleaseStart event.\n\n      grid._emit(eventDragReleaseStart, item); // Position the released item.\n\n\n      item._layout.start(false);\n\n      return this;\n    }\n    /**\r\n     * End the release process of an item. This method can be used to abort an\r\n     * ongoing release process (animation) or finish the release process.\r\n     *\r\n     * @public\r\n     * @memberof ItemRelease.prototype\r\n     * @param {Boolean} [abort=false]\r\n     *  - Should the release be aborted? When true, the release end event won't be\r\n     *    emitted. Set to true only when you need to abort the release process\r\n     *    while the item is animating to it's position.\r\n     * @param {Object} [currentStyles]\r\n     *  - Optional current translateX and translateY styles.\r\n     * @returns {ItemRelease}\r\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop(abort, currentStyles) {\n      if (this._isDestroyed || !this._isActive) return this;\n      var item = this._item;\n      var element = item._element;\n      var grid = item.getGrid();\n      var container = grid._element;\n      var translate = void 0; // Reset data and remove releasing class name from the element.\n\n      this._reset(); // If the released element is outside the grid's container element put it\n      // back there and adjust position accordingly.\n\n\n      if (element.parentNode !== container) {\n        if (!currentStyles) {\n          if (abort) {\n            translate = getTranslate(element);\n            tempStyles$1.transform = getTranslateString(translate.x - this._containerDiffX, translate.y - this._containerDiffY);\n          } else {\n            tempStyles$1.transform = getTranslateString(item._left, item._top);\n          }\n\n          currentStyles = tempStyles$1;\n        }\n\n        container.appendChild(element);\n        setStyles(element, currentStyles);\n      } // Emit dragReleaseEnd event.\n\n\n      if (!abort) grid._emit(eventDragReleaseEnd, item);\n      return this;\n    }\n    /**\r\n     * Destroy instance.\r\n     *\r\n     * @public\r\n     * @memberof ItemRelease.prototype\r\n     * @returns {ItemRelease}\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this._isDestroyed) return this;\n      this.stop(true);\n      this._item = null;\n      this._isDestroyed = true;\n      return this;\n    }\n    /**\r\n     * Private prototype methods\r\n     * *************************\r\n     */\n\n    /**\r\n     * Reset public data and remove releasing class.\r\n     *\r\n     * @private\r\n     * @memberof ItemRelease.prototype\r\n     */\n\n  }, {\n    key: '_reset',\n    value: function _reset() {\n      if (this._isDestroyed) return;\n      var item = this._item;\n      this._isActive = false;\n      this._isPositioningStarted = false;\n      this._containerDiffX = 0;\n      this._containerDiffY = 0;\n      removeClass(item._element, item.getGrid()._settings.itemReleasingClass);\n    }\n  }]);\n  return ItemRelease;\n}(Component);\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n/**\r\n * Get current values of the provided styles definition object.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {Object} styles\r\n * @return {Object}\r\n */\n\n\nfunction getCurrentStyles(element, styles) {\n  var current = {};\n\n  for (var prop in styles) {\n    current[prop] = getStyle(element, getStyleName(prop));\n  }\n\n  return current;\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n/**\r\n * Visibility manager for Item instance.\r\n *\r\n * @class\r\n * @param {Item} item\r\n */\n\n\nvar ItemVisibility = function (_Component) {\n  inherits(ItemVisibility, _Component);\n\n  function ItemVisibility(item) {\n    classCallCheck(this, ItemVisibility);\n\n    var _this = possibleConstructorReturn(this, (ItemVisibility.__proto__ || Object.getPrototypeOf(ItemVisibility)).call(this, item));\n\n    var isActive = item._isActive;\n    var element = item._element;\n\n    var settings = item.getGrid()._settings;\n\n    _this._item = item;\n    _this._isDestroyed = false; // Set up visibility states.\n\n    _this._isHidden = !isActive;\n    _this._isHiding = false;\n    _this._isShowing = false; // Callback queue.\n\n    _this._queue = new Queue(); // Bind show/hide finishers.\n\n    _this._finishShow = _this._finishShow.bind(_this);\n    _this._finishHide = _this._finishHide.bind(_this); // Force item to be either visible or hidden on init.\n\n    element.style.display = isActive ? 'block' : 'none'; // Set visible/hidden class.\n\n    addClass(element, isActive ? settings.itemVisibleClass : settings.itemHiddenClass); // Set initial styles for the child element.\n\n    setStyles(item._child, isActive ? settings.visibleStyles : settings.hiddenStyles);\n    return _this;\n  }\n  /**\r\n   * Public prototype methods\r\n   * ************************\r\n   */\n\n  /**\r\n   * Show item.\r\n   *\r\n   * @public\r\n   * @memberof ItemVisibility.prototype\r\n   * @param {Boolean} instant\r\n   * @param {Function} [onFinish]\r\n   * @returns {ItemVisibility}\r\n   */\n\n\n  createClass(ItemVisibility, [{\n    key: 'show',\n    value: function show(instant, onFinish) {\n      if (this._isDestroyed) return this;\n      var item = this._item;\n      var element = item._element;\n      var queue = this._queue;\n      var callback = typeof onFinish === 'function' ? onFinish : null;\n      var grid = item.getGrid();\n      var settings = grid._settings; // If item is visible call the callback and be done with it.\n\n      if (!this._isShowing && !this._isHidden) {\n        callback && callback(false, item);\n        return this;\n      } // If item is showing and does not need to be shown instantly, let's just\n      // push callback to the callback queue and be done with it.\n\n\n      if (this._isShowing && !instant) {\n        callback && queue.add(callback);\n        return this;\n      } // If the item is hiding or hidden process the current visibility callback\n      // queue with the interrupted flag active, update classes and set display\n      // to block if necessary.\n\n\n      if (!this._isShowing) {\n        queue.flush(true, item);\n        removeClass(element, settings.itemHiddenClass);\n        addClass(element, settings.itemVisibleClass);\n        if (!this._isHiding) element.style.display = 'block';\n      } // Push callback to the callback queue.\n\n\n      callback && queue.add(callback); // Update visibility states.\n\n      item._isActive = this._isShowing = true;\n      this._isHiding = this._isHidden = false; // Finally let's start show animation.\n\n      this._startAnimation(true, instant, this._finishShow);\n\n      return this;\n    }\n    /**\r\n     * Hide item.\r\n     *\r\n     * @public\r\n     * @memberof ItemVisibility.prototype\r\n     * @param {Boolean} instant\r\n     * @param {Function} [onFinish]\r\n     * @returns {ItemVisibility}\r\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(instant, onFinish) {\n      if (this._isDestroyed) return this;\n      var item = this._item;\n      var element = item._element;\n      var queue = this._queue;\n      var callback = typeof onFinish === 'function' ? onFinish : null;\n      var grid = item.getGrid();\n      var settings = grid._settings; // If item is already hidden call the callback and be done with it.\n\n      if (!this._isHiding && this._isHidden) {\n        callback && callback(false, item);\n        return this;\n      } // If item is hiding and does not need to be hidden instantly, let's just\n      // push callback to the callback queue and be done with it.\n\n\n      if (this._isHiding && !instant) {\n        callback && queue.add(callback);\n        return this;\n      } // If the item is showing or visible process the current visibility callback\n      // queue with the interrupted flag active, update classes and set display\n      // to block if necessary.\n\n\n      if (!this._isHiding) {\n        queue.flush(true, item);\n        addClass(element, settings.itemHiddenClass);\n        removeClass(element, settings.itemVisibleClass);\n      } // Push callback to the callback queue.\n\n\n      callback && queue.add(callback); // Update visibility states.\n\n      this._isHidden = this._isHiding = true;\n      item._isActive = this._isShowing = false; // Finally let's start hide animation.\n\n      this._startAnimation(false, instant, this._finishHide);\n\n      return this;\n    }\n    /**\r\n     * Destroy the instance and stop current animation if it is running.\r\n     *\r\n     * @public\r\n     * @memberof ItemVisibility.prototype\r\n     * @returns {ItemVisibility}\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this._isDestroyed) return this;\n      var item = this._item;\n      var element = item._element;\n      var grid = item.getGrid();\n      var queue = this._queue;\n      var settings = grid._settings; // Stop visibility animation.\n\n      this._stopAnimation({}); // Fire all uncompleted callbacks with interrupted flag and destroy the queue.\n\n\n      queue.flush(true, item).destroy(); // Remove visible/hidden classes.\n\n      removeClass(element, settings.itemVisibleClass);\n      removeClass(element, settings.itemHiddenClass); // Reset state.\n\n      this._item = null;\n      this._isHiding = this._isShowing = false;\n      this._isDestroyed = this._isHidden = true;\n      return this;\n    }\n    /**\r\n     * Private prototype methods\r\n     * *************************\r\n     */\n\n    /**\r\n     * Start visibility animation.\r\n     *\r\n     * @private\r\n     * @memberof ItemVisibility.prototype\r\n     * @param {Boolean} toVisible\r\n     * @param {Boolean} [instant]\r\n     * @param {Function} [onFinish]\r\n     */\n\n  }, {\n    key: '_startAnimation',\n    value: function _startAnimation(toVisible, instant, onFinish) {\n      if (this._isDestroyed) return;\n      var item = this._item;\n\n      var settings = item.getGrid()._settings;\n\n      var targetStyles = toVisible ? settings.visibleStyles : settings.hiddenStyles;\n      var duration = parseInt(toVisible ? settings.showDuration : settings.hideDuration) || 0;\n      var easing = (toVisible ? settings.showEasing : settings.hideEasing) || 'ease';\n      var isInstant = instant || duration <= 0;\n      var currentStyles = void 0; // No target styles? Let's quit early.\n\n      if (!targetStyles) {\n        onFinish && onFinish();\n        return;\n      } // Cancel queued visibility tick.\n\n\n      cancelVisibilityTick(item._id); // If we need to apply the styles instantly without animation.\n\n      if (isInstant) {\n        if (item._animateChild.isAnimating()) {\n          item._animateChild.stop(targetStyles);\n        } else {\n          setStyles(item._child, targetStyles);\n        }\n\n        onFinish && onFinish();\n        return;\n      } // Start the animation in the next tick (to avoid layout thrashing).\n\n\n      addVisibilityTick(item._id, function () {\n        currentStyles = getCurrentStyles(item._child, targetStyles);\n      }, function () {\n        item._animateChild.start(currentStyles, targetStyles, {\n          duration: duration,\n          easing: easing,\n          onFinish: onFinish\n        });\n      });\n    }\n    /**\r\n     * Stop visibility animation.\r\n     *\r\n     * @private\r\n     * @memberof ItemVisibility.prototype\r\n     * @param {Object} [targetStyles]\r\n     */\n\n  }, {\n    key: '_stopAnimation',\n    value: function _stopAnimation(targetStyles) {\n      if (this._isDestroyed) return;\n      var item = this._item;\n      cancelVisibilityTick(item._id);\n\n      item._animateChild.stop(targetStyles);\n    }\n    /**\r\n     * Finish show procedure.\r\n     *\r\n     * @private\r\n     * @memberof ItemVisibility.prototype\r\n     */\n\n  }, {\n    key: '_finishShow',\n    value: function _finishShow() {\n      if (this._isHidden) return;\n      this._isShowing = false;\n\n      this._queue.flush(false, this._item);\n    }\n  }, {\n    key: '_finishHide',\n    value: function _finishHide() {\n      if (!this._isHidden) return;\n      var item = this._item;\n      this._isHiding = false;\n      finishStyles.transform = getTranslateString(0, 0);\n\n      item._layout.stop(true, finishStyles);\n\n      item._element.style.display = 'none';\n\n      this._queue.flush(false, item);\n    }\n  }]);\n  return ItemVisibility;\n}(Component);\n/**\r\n * Finish hide procedure.\r\n *\r\n * @private\r\n * @memberof ItemVisibility.prototype\r\n */\n\n\nvar finishStyles = {};\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\nvar id = 0;\n/**\r\n * Returns a unique numeric id (increments a base value on every call).\r\n * @returns {Number}\r\n */\n\nfunction createUid() {\n  return ++id;\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n/**\r\n * Creates a new Item instance for a Grid instance.\r\n *\r\n * @class\r\n * @param {Grid} grid\r\n * @param {HTMLElement} element\r\n * @param {Boolean} [isActive]\r\n */\n\n\nvar Item = function () {\n  function Item(grid, element, isActive) {\n    classCallCheck(this, Item);\n    var settings = grid._settings; // Create instance id.\n\n    this._id = createUid(); // Reference to connected Grid instance's id.\n\n    this._gridId = grid._id; // Destroyed flag.\n\n    this._isDestroyed = false; // Set up initial positions.\n\n    this._left = 0;\n    this._top = 0; // The elements.\n\n    this._element = element;\n    this._child = element.children[0]; // If the provided item element is not a direct child of the grid container\n    // element, append it to the grid container.\n\n    if (element.parentNode !== grid._element) {\n      grid._element.appendChild(element);\n    } // Set item class.\n\n\n    addClass(element, settings.itemClass); // If isActive is not defined, let's try to auto-detect it.\n\n    if (typeof isActive !== 'boolean') {\n      isActive = getStyle(element, 'display') !== 'none';\n    } // Set up active state (defines if the item is considered part of the layout\n    // or not).\n\n\n    this._isActive = isActive; // Set element's initial position styles.\n\n    element.style.left = '0';\n    element.style.top = '0';\n    element.style[transformProp] = getTranslateString(0, 0); // Initiate item's animation controllers.\n\n    this._animate = new ItemAnimate(element);\n    this._animateChild = new ItemAnimate(this._child); // Setup visibility handler.\n\n    this._visibility = new ItemVisibility(this); // Set up layout handler.\n\n    this._layout = new ItemLayout(this); // Set up migration handler data.\n\n    this._migrate = new ItemMigrate(this); // Set up release handler\n\n    this._release = new ItemRelease(this); // Set up drag handler.\n\n    this._drag = settings.dragEnabled ? new ItemDrag(this) : null; // Set up the initial dimensions and sort data.\n\n    this._refreshDimensions();\n\n    this._refreshSortData();\n  }\n  /**\r\n   * Public prototype methods\r\n   * ************************\r\n   */\n\n  /**\r\n   * Get the instance grid reference.\r\n   *\r\n   * @public\r\n   * @memberof Item.prototype\r\n   * @returns {Grid}\r\n   */\n\n\n  createClass(Item, [{\n    key: 'getGrid',\n    value: function getGrid() {\n      return gridInstances[this._gridId];\n    }\n    /**\r\n     * Get the instance element.\r\n     *\r\n     * @public\r\n     * @memberof Item.prototype\r\n     * @returns {HTMLElement}\r\n     */\n\n  }, {\n    key: 'getElement',\n    value: function getElement() {\n      return this._element;\n    }\n    /**\r\n     * Get instance element's cached width.\r\n     *\r\n     * @public\r\n     * @memberof Item.prototype\r\n     * @returns {Number}\r\n     */\n\n  }, {\n    key: 'getWidth',\n    value: function getWidth() {\n      return this._width;\n    }\n    /**\r\n     * Get instance element's cached height.\r\n     *\r\n     * @public\r\n     * @memberof Item.prototype\r\n     * @returns {Number}\r\n     */\n\n  }, {\n    key: 'getHeight',\n    value: function getHeight() {\n      return this._height;\n    }\n    /**\r\n     * Get instance element's cached margins.\r\n     *\r\n     * @public\r\n     * @memberof Item.prototype\r\n     * @returns {Object}\r\n     *   - The returned object contains left, right, top and bottom properties\r\n     *     which indicate the item element's cached margins.\r\n     */\n\n  }, {\n    key: 'getMargin',\n    value: function getMargin() {\n      return {\n        left: this._marginLeft,\n        right: this._marginRight,\n        top: this._marginTop,\n        bottom: this._marginBottom\n      };\n    }\n    /**\r\n     * Get instance element's cached position.\r\n     *\r\n     * @public\r\n     * @memberof Item.prototype\r\n     * @returns {Object}\r\n     *   - The returned object contains left and top properties which indicate the\r\n     *     item element's cached position in the grid.\r\n     */\n\n  }, {\n    key: 'getPosition',\n    value: function getPosition() {\n      return {\n        left: this._left,\n        top: this._top\n      };\n    }\n    /**\r\n     * Is the item active?\r\n     *\r\n     * @public\r\n     * @memberof Item.prototype\r\n     * @returns {Boolean}\r\n     */\n\n  }, {\n    key: 'isActive',\n    value: function isActive() {\n      return this._isActive;\n    }\n    /**\r\n     * Is the item visible?\r\n     *\r\n     * @public\r\n     * @memberof Item.prototype\r\n     * @returns {Boolean}\r\n     */\n\n  }, {\n    key: 'isVisible',\n    value: function isVisible() {\n      return !!this._visibility && !this._visibility._isHidden;\n    }\n    /**\r\n     * Is the item being animated to visible?\r\n     *\r\n     * @public\r\n     * @memberof Item.prototype\r\n     * @returns {Boolean}\r\n     */\n\n  }, {\n    key: 'isShowing',\n    value: function isShowing() {\n      return !!(this._visibility && this._visibility._isShowing);\n    }\n    /**\r\n     * Is the item being animated to hidden?\r\n     *\r\n     * @public\r\n     * @memberof Item.prototype\r\n     * @returns {Boolean}\r\n     */\n\n  }, {\n    key: 'isHiding',\n    value: function isHiding() {\n      return !!(this._visibility && this._visibility._isHiding);\n    }\n    /**\r\n     * Is the item positioning?\r\n     *\r\n     * @public\r\n     * @memberof Item.prototype\r\n     * @returns {Boolean}\r\n     */\n\n  }, {\n    key: 'isPositioning',\n    value: function isPositioning() {\n      return !!(this._layout && this._layout._isActive);\n    }\n    /**\r\n     * Is the item being dragged?\r\n     *\r\n     * @public\r\n     * @memberof Item.prototype\r\n     * @returns {Boolean}\r\n     */\n\n  }, {\n    key: 'isDragging',\n    value: function isDragging() {\n      return !!(this._drag && this._drag._isActive);\n    }\n    /**\r\n     * Is the item being released?\r\n     *\r\n     * @public\r\n     * @memberof Item.prototype\r\n     * @returns {Boolean}\r\n     */\n\n  }, {\n    key: 'isReleasing',\n    value: function isReleasing() {\n      return !!(this._release && this._release._isActive);\n    }\n    /**\r\n     * Is the item destroyed?\r\n     *\r\n     * @public\r\n     * @memberof Item.prototype\r\n     * @returns {Boolean}\r\n     */\n\n  }, {\n    key: 'isDestroyed',\n    value: function isDestroyed() {\n      return this._isDestroyed;\n    }\n    /**\r\n     * Private prototype methods\r\n     * *************************\r\n     */\n\n    /**\r\n     * Recalculate item's dimensions.\r\n     *\r\n     * @private\r\n     * @memberof Item.prototype\r\n     */\n\n  }, {\n    key: '_refreshDimensions',\n    value: function _refreshDimensions() {\n      if (this._isDestroyed || this._visibility._isHidden) return;\n      var element = this._element;\n      var rect = element.getBoundingClientRect(); // Calculate width and height.\n\n      this._width = rect.width;\n      this._height = rect.height; // Calculate margins (ignore negative margins).\n\n      this._marginLeft = Math.max(0, getStyleAsFloat(element, 'margin-left'));\n      this._marginRight = Math.max(0, getStyleAsFloat(element, 'margin-right'));\n      this._marginTop = Math.max(0, getStyleAsFloat(element, 'margin-top'));\n      this._marginBottom = Math.max(0, getStyleAsFloat(element, 'margin-bottom'));\n    }\n    /**\r\n     * Fetch and store item's sort data.\r\n     *\r\n     * @private\r\n     * @memberof Item.prototype\r\n     */\n\n  }, {\n    key: '_refreshSortData',\n    value: function _refreshSortData() {\n      if (this._isDestroyed) return;\n      var data = this._sortData = {};\n\n      var getters = this.getGrid()._settings.sortData;\n\n      var prop = void 0;\n\n      for (prop in getters) {\n        data[prop] = getters[prop](this, this._element);\n      }\n    }\n    /**\r\n     * Destroy item instance.\r\n     *\r\n     * @private\r\n     * @memberof Item.prototype\r\n     * @param {Boolean} [removeElement=false]\r\n     */\n\n  }, {\n    key: '_destroy',\n    value: function _destroy(removeElement) {\n      if (this._isDestroyed) return;\n      var element = this._element;\n      var grid = this.getGrid();\n      var settings = grid._settings;\n\n      var index = grid._items.indexOf(this); // Destroy handlers.\n\n\n      this._release.destroy();\n\n      this._migrate.destroy();\n\n      this._layout.destroy();\n\n      this._visibility.destroy();\n\n      this._animate.destroy();\n\n      this._animateChild.destroy();\n\n      this._drag && this._drag.destroy(); // Remove all inline styles.\n\n      element.removeAttribute('style');\n\n      this._child.removeAttribute('style'); // Remove item class.\n\n\n      removeClass(element, settings.itemClass); // Remove item from Grid instance if it still exists there.\n\n      index > -1 && grid._items.splice(index, 1); // Remove element from DOM.\n\n      removeElement && element.parentNode.removeChild(element); // Reset state.\n\n      this._isActive = false;\n      this._isDestroyed = true;\n    }\n  }]);\n  return Item;\n}();\n/**\r\n * Muuri Packer\r\n * Copyright (c) 2016-present, Niklas Rämö <inramo@gmail.com>\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/src/Packer/LICENSE.md\r\n */\n\n/**\r\n * This is the default layout algorithm for Muuri. Based on MAXRECTS approach\r\n * as described by Jukka Jylänki in his survey: \"A Thousand Ways to Pack the\r\n * Bin - A Practical Approach to Two-Dimensional Rectangle Bin Packing.\".\r\n *\r\n * @class\r\n */\n\n\nvar Packer = function (_Component) {\n  inherits(Packer, _Component);\n\n  function Packer() {\n    classCallCheck(this, Packer);\n\n    var _this = possibleConstructorReturn(this, (Packer.__proto__ || Object.getPrototypeOf(Packer)).call(this));\n\n    _this._slots = [];\n    _this._slotSizes = [];\n    _this._freeSlots = [];\n    _this._newSlots = [];\n    _this._rectItem = {};\n    _this._rectStore = [];\n    _this._rectId = 0; // The layout return data, which will be populated in getLayout.\n\n    _this._layout = {\n      slots: null,\n      setWidth: false,\n      setHeight: false,\n      width: false,\n      height: false\n    }; // Bind sort handlers.\n\n    _this._sortRectsLeftTop = _this._sortRectsLeftTop.bind(_this);\n    _this._sortRectsTopLeft = _this._sortRectsTopLeft.bind(_this);\n    return _this;\n  }\n  /**\r\n   * @public\r\n   * @memberof Packer.prototype\r\n   * @param {Item[]} items\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   * @param {Number[]} [slots]\r\n   * @param {Object} [options]\r\n   * @param {Boolean} [options.fillGaps=false]\r\n   * @param {Boolean} [options.horizontal=false]\r\n   * @param {Boolean} [options.alignRight=false]\r\n   * @param {Boolean} [options.alignBottom=false]\r\n   * @returns {LayoutData}\r\n   */\n\n\n  createClass(Packer, [{\n    key: 'getLayout',\n    value: function getLayout(items, width, height, slots, options) {\n      var layout = this._layout;\n      var fillGaps = !!(options && options.fillGaps);\n      var isHorizontal = !!(options && options.horizontal);\n      var alignRight = !!(options && options.alignRight);\n      var alignBottom = !!(options && options.alignBottom);\n      var rounding = !!(options && options.rounding);\n      var slotSizes = this._slotSizes;\n      var i = void 0; // Reset layout data.\n\n      layout.slots = slots || this._slots;\n      layout.width = isHorizontal ? 0 : rounding ? Math.round(width) : width;\n      layout.height = !isHorizontal ? 0 : rounding ? Math.round(height) : height;\n      layout.setWidth = isHorizontal;\n      layout.setHeight = !isHorizontal; // Make sure slots and slot size arrays are reset.\n\n      layout.slots.length = 0;\n      slotSizes.length = 0; // No need to go further if items do not exist.\n\n      if (!items.length) return layout; // Find slots for items.\n\n      for (i = 0; i < items.length; i++) {\n        this._addSlot(items[i], isHorizontal, fillGaps, rounding, alignRight || alignBottom);\n      } // If the alignment is set to right we need to adjust the results.\n\n\n      if (alignRight) {\n        for (i = 0; i < layout.slots.length; i = i + 2) {\n          layout.slots[i] = layout.width - (layout.slots[i] + slotSizes[i]);\n        }\n      } // If the alignment is set to bottom we need to adjust the results.\n\n\n      if (alignBottom) {\n        for (i = 1; i < layout.slots.length; i = i + 2) {\n          layout.slots[i] = layout.height - (layout.slots[i] + slotSizes[i]);\n        }\n      } // Reset slots arrays and rect id.\n\n\n      slotSizes.length = 0;\n      this._freeSlots.length = 0;\n      this._newSlots.length = 0;\n      this._rectId = 0;\n      return layout;\n    }\n    /**\r\n     * Add a new rectangle to the rectangle store. Returns the id of the new\r\n     * rectangle.\r\n     *\r\n     * @private\r\n     * @memberof Packer.prototype\r\n     * @param {Number} left\r\n     * @param {Number} top\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @returns {RectId}\r\n     */\n\n  }, {\n    key: '_addRect',\n    value: function _addRect(left, top, width, height) {\n      var rectId = ++this._rectId;\n      var rectStore = this._rectStore;\n      rectStore[rectId] = left || 0;\n      rectStore[++this._rectId] = top || 0;\n      rectStore[++this._rectId] = width || 0;\n      rectStore[++this._rectId] = height || 0;\n      return rectId;\n    }\n    /**\r\n     * Get rectangle data from the rectangle store by id. Optionally you can\r\n     * provide a target object where the rectangle data will be written in. By\r\n     * default an internal object is reused as a target object.\r\n     *\r\n     * @private\r\n     * @memberof Packer.prototype\r\n     * @param {RectId} id\r\n     * @param {Object} [target]\r\n     * @returns {Object}\r\n     */\n\n  }, {\n    key: '_getRect',\n    value: function _getRect(id, target) {\n      var rectItem = target || this._rectItem;\n      var rectStore = this._rectStore;\n      rectItem.left = rectStore[id] || 0;\n      rectItem.top = rectStore[++id] || 0;\n      rectItem.width = rectStore[++id] || 0;\n      rectItem.height = rectStore[++id] || 0;\n      return rectItem;\n    }\n    /**\r\n     * Check if two rectangles overlap.\r\n     *\r\n     * @private\r\n     * @memberof Packer.prototype\r\n     * @param {Rectangle} a\r\n     * @param {Rectangle} b\r\n     * @returns {Boolean}\r\n     */\n\n  }, {\n    key: '_doRectsOverlap',\n    value: function _doRectsOverlap(a, b) {\n      return !(a.left + a.width <= b.left || b.left + b.width <= a.left || a.top + a.height <= b.top || b.top + b.height <= a.top);\n    }\n    /**\r\n     * Check if a rectangle is fully within another rectangle.\r\n     *\r\n     * @private\r\n     * @memberof Packer.prototype\r\n     * @param {Rectangle} a\r\n     * @param {Rectangle} b\r\n     * @returns {Boolean}\r\n     */\n\n  }, {\n    key: '_isRectWithinRect',\n    value: function _isRectWithinRect(a, b) {\n      return a.left >= b.left && a.top >= b.top && a.left + a.width <= b.left + b.width && a.top + a.height <= b.top + b.height;\n    }\n  }]);\n  return Packer;\n}(Component);\n/**\r\n * Calculate position for the layout item. Returns the left and top position\r\n * of the item in pixels.\r\n *\r\n * @private\r\n * @memberof Packer.prototype\r\n * @param {Item} item\r\n * @param {Boolean} isHorizontal\r\n * @param {Boolean} fillGaps\r\n * @param {Boolean} rounding\r\n * @returns {Array}\r\n */\n\n\nPacker.prototype._addSlot = function () {\n  var leeway = 0.001;\n  var itemSlot = {};\n  return function (item, isHorizontal, fillGaps, rounding, trackSize) {\n    var layout = this._layout;\n    var freeSlots = this._freeSlots;\n    var newSlots = this._newSlots;\n    var rect = void 0;\n    var rectId = void 0;\n    var potentialSlots = void 0;\n    var ignoreCurrentSlots = void 0;\n    var i = void 0;\n    var ii = void 0; // Reset new slots.\n\n    newSlots.length = 0; // Set item slot initial data.\n\n    itemSlot.left = null;\n    itemSlot.top = null;\n    itemSlot.width = item._width + item._marginLeft + item._marginRight;\n    itemSlot.height = item._height + item._marginTop + item._marginBottom; // Round item slot width and height if needed.\n\n    if (rounding) {\n      itemSlot.width = Math.round(itemSlot.width);\n      itemSlot.height = Math.round(itemSlot.height);\n    } // Try to find a slot for the item.\n\n\n    for (i = 0; i < freeSlots.length; i++) {\n      rectId = freeSlots[i];\n      if (!rectId) continue;\n      rect = this._getRect(rectId);\n\n      if (itemSlot.width <= rect.width + leeway && itemSlot.height <= rect.height + leeway) {\n        itemSlot.left = rect.left;\n        itemSlot.top = rect.top;\n        break;\n      }\n    } // If no slot was found for the item.\n\n\n    if (itemSlot.left === null) {\n      // Position the item in to the bottom left (vertical mode) or top right\n      // (horizontal mode) of the grid.\n      itemSlot.left = !isHorizontal ? 0 : layout.width;\n      itemSlot.top = !isHorizontal ? layout.height : 0; // If gaps don't needs filling do not add any current slots to the new\n      // slots array.\n\n      if (!fillGaps) {\n        ignoreCurrentSlots = true;\n      }\n    } // In vertical mode, if the item's bottom overlaps the grid's bottom.\n\n\n    if (!isHorizontal && itemSlot.top + itemSlot.height > layout.height) {\n      // If item is not aligned to the left edge, create a new slot.\n      if (itemSlot.left > 0) {\n        newSlots.push(this._addRect(0, layout.height, itemSlot.left, Infinity));\n      } // If item is not aligned to the right edge, create a new slot.\n\n\n      if (itemSlot.left + itemSlot.width < layout.width) {\n        newSlots.push(this._addRect(itemSlot.left + itemSlot.width, layout.height, layout.width - itemSlot.left - itemSlot.width, Infinity));\n      } // Update grid height.\n\n\n      layout.height = itemSlot.top + itemSlot.height;\n    } // In horizontal mode, if the item's right overlaps the grid's right edge.\n\n\n    if (isHorizontal && itemSlot.left + itemSlot.width > layout.width) {\n      // If item is not aligned to the top, create a new slot.\n      if (itemSlot.top > 0) {\n        newSlots.push(this._addRect(layout.width, 0, Infinity, itemSlot.top));\n      } // If item is not aligned to the bottom, create a new slot.\n\n\n      if (itemSlot.top + itemSlot.height < layout.height) {\n        newSlots.push(this._addRect(layout.width, itemSlot.top + itemSlot.height, Infinity, layout.height - itemSlot.top - itemSlot.height));\n      } // Update grid width.\n\n\n      layout.width = itemSlot.left + itemSlot.width;\n    } // Clean up the current slots making sure there are no old slots that\n    // overlap with the item. If an old slot overlaps with the item, split it\n    // into smaller slots if necessary.\n\n\n    for (i = fillGaps ? 0 : ignoreCurrentSlots ? freeSlots.length : i; i < freeSlots.length; i++) {\n      rectId = freeSlots[i];\n      if (!rectId) continue;\n      rect = this._getRect(rectId);\n      potentialSlots = this._splitRect(rect, itemSlot);\n\n      for (ii = 0; ii < potentialSlots.length; ii++) {\n        rectId = potentialSlots[ii];\n        rect = this._getRect(rectId); // Let's make sure here that we have a big enough slot\n        // (width/height > 0.49px) and also let's make sure that the slot is\n        // within the boundaries of the grid.\n\n        if (rect.width > 0.49 && rect.height > 0.49 && (!isHorizontal && rect.top < layout.height || isHorizontal && rect.left < layout.width)) {\n          newSlots.push(rectId);\n        }\n      }\n    } // Sanitize new slots.\n\n\n    if (newSlots.length) {\n      this._purgeRects(newSlots).sort(isHorizontal ? this._sortRectsLeftTop : this._sortRectsTopLeft);\n    } // Update layout width/height.\n\n\n    if (isHorizontal) {\n      layout.width = Math.max(layout.width, itemSlot.left + itemSlot.width);\n    } else {\n      layout.height = Math.max(layout.height, itemSlot.top + itemSlot.height);\n    } // Add item slot data to layout slots (and store the slot size for later\n    // usage too if necessary).\n\n\n    layout.slots.push(itemSlot.left, itemSlot.top);\n    if (trackSize) this._slotSizes.push(itemSlot.width, itemSlot.height); // Free/new slots switcheroo!\n\n    this._freeSlots = newSlots;\n    this._newSlots = freeSlots;\n  };\n}();\n/**\r\n * Punch a hole into a rectangle and split the remaining area into smaller\r\n * rectangles (4 at max).\r\n *\r\n * @private\r\n * @memberof Packer.prototype\r\n * @param {Rectangle} rect\r\n * @param {Rectangle} hole\r\n * @returns {RectId[]}\r\n */\n\n\nPacker.prototype._splitRect = function () {\n  var results = [];\n  return function (rect, hole) {\n    // Reset old results.\n    results.length = 0; // If the rect does not overlap with the hole add rect to the return data\n    // as is.\n\n    if (!this._doRectsOverlap(rect, hole)) {\n      results.push(this._addRect(rect.left, rect.top, rect.width, rect.height));\n      return results;\n    } // Left split.\n\n\n    if (rect.left < hole.left) {\n      results.push(this._addRect(rect.left, rect.top, hole.left - rect.left, rect.height));\n    } // Right split.\n\n\n    if (rect.left + rect.width > hole.left + hole.width) {\n      results.push(this._addRect(hole.left + hole.width, rect.top, rect.left + rect.width - (hole.left + hole.width), rect.height));\n    } // Top split.\n\n\n    if (rect.top < hole.top) {\n      results.push(this._addRect(rect.left, rect.top, rect.width, hole.top - rect.top));\n    } // Bottom split.\n\n\n    if (rect.top + rect.height > hole.top + hole.height) {\n      results.push(this._addRect(rect.left, hole.top + hole.height, rect.width, rect.top + rect.height - (hole.top + hole.height)));\n    }\n\n    return results;\n  };\n}();\n/**\r\n * Loops through an array of rectangle ids and resets all that are fully\r\n * within another rectangle in the array. Resetting in this case means that\r\n * the rectangle id value is replaced with zero.\r\n *\r\n * @private\r\n * @memberof Packer.prototype\r\n * @param {RectId[]} rectIds\r\n * @returns {RectId[]}\r\n */\n\n\nPacker.prototype._purgeRects = function () {\n  var rectA = {};\n  var rectB = {};\n  return function (rectIds) {\n    var i = rectIds.length;\n    var ii = void 0;\n\n    while (i--) {\n      ii = rectIds.length;\n      if (!rectIds[i]) continue;\n\n      this._getRect(rectIds[i], rectA);\n\n      while (ii--) {\n        if (!rectIds[ii] || i === ii) continue;\n\n        if (this._isRectWithinRect(rectA, this._getRect(rectIds[ii], rectB))) {\n          rectIds[i] = 0;\n          break;\n        }\n      }\n    }\n\n    return rectIds;\n  };\n}();\n/**\r\n * Sort rectangles with top-left gravity.\r\n *\r\n * @private\r\n * @memberof Packer.prototype\r\n * @param {RectId} aId\r\n * @param {RectId} bId\r\n * @returns {Number}\r\n */\n\n\nPacker.prototype._sortRectsTopLeft = function () {\n  var rectA = {};\n  var rectB = {};\n  return function (aId, bId) {\n    this._getRect(aId, rectA);\n\n    this._getRect(bId, rectB); // prettier-ignore\n\n\n    return rectA.top < rectB.top ? -1 : // eslint-disable-line\n    rectA.top > rectB.top ? 1 : // eslint-disable-line\n    rectA.left < rectB.left ? -1 : // eslint-disable-line\n    rectA.left > rectB.left ? 1 : 0; // eslint-disable-line\n  };\n}();\n/**\r\n * Sort rectangles with left-top gravity.\r\n *\r\n * @private\r\n * @memberof Packer.prototype\r\n * @param {RectId} aId\r\n * @param {RectId} bId\r\n * @returns {Number}\r\n */\n\n\nPacker.prototype._sortRectsLeftTop = function () {\n  var rectA = {};\n  var rectB = {};\n  return function (aId, bId) {\n    this._getRect(aId, rectA);\n\n    this._getRect(bId, rectB); // standard-ignore\n\n\n    return rectA.left < rectB.left ? -1 : // eslint-disable-line\n    rectA.left > rectB.left ? 1 : // eslint-disable-line\n    rectA.top < rectB.top ? -1 : // eslint-disable-line\n    rectA.top > rectB.top ? 1 : 0; // eslint-disable-line\n  };\n}();\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n\nvar htmlCollectionType = '[object HTMLCollection]';\nvar nodeListType = '[object NodeList]';\n/**\r\n * Check if a value is a node list\r\n *\r\n * @param {*} val\r\n * @returns {Boolean}\r\n */\n\nfunction isNodeList(val) {\n  var type = Object.prototype.toString.call(val);\n  return type === htmlCollectionType || type === nodeListType;\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n/**\r\n * Converts a value to an array or clones an array.\r\n *\r\n * @param {*} target\r\n * @returns {Array}\r\n */\n\n\nfunction toArray$1(target) {\n  return isNodeList(target) ? Array.prototype.slice.call(target) : Array.prototype.concat(target);\n}\n/**\r\n * Copyright (c) 2015-present, Haltu Oy\r\n * Released under the MIT license\r\n * https://github.com/haltu/muuri/blob/master/LICENSE.md\r\n */\n\n\nvar packer = new Packer();\n\nfunction noop() {}\n/**\r\n * Creates a new Grid instance.\r\n *\r\n * @class\r\n * @param {(HTMLElement|String)} element\r\n * @param {Object} [options]\r\n * @param {(?HTMLElement[]|NodeList|String)} [options.items]\r\n * @param {Number} [options.showDuration=300]\r\n * @param {String} [options.showEasing=\"ease\"]\r\n * @param {Object} [options.visibleStyles]\r\n * @param {Number} [options.hideDuration=300]\r\n * @param {String} [options.hideEasing=\"ease\"]\r\n * @param {Object} [options.hiddenStyles]\r\n * @param {(Function|Object)} [options.layout]\r\n * @param {Boolean} [options.layout.fillGaps=false]\r\n * @param {Boolean} [options.layout.horizontal=false]\r\n * @param {Boolean} [options.layout.alignRight=false]\r\n * @param {Boolean} [options.layout.alignBottom=false]\r\n * @param {Boolean} [options.layout.rounding=true]\r\n * @param {(Boolean|Number)} [options.layoutOnResize=100]\r\n * @param {Boolean} [options.layoutOnInit=true]\r\n * @param {Number} [options.layoutDuration=300]\r\n * @param {String} [options.layoutEasing=\"ease\"]\r\n * @param {?Object} [options.sortData=null]\r\n * @param {Boolean} [options.dragEnabled=false]\r\n * @param {?HtmlElement} [options.dragContainer=null]\r\n * @param {?Function} [options.dragStartPredicate]\r\n * @param {Number} [options.dragStartPredicate.distance=0]\r\n * @param {Number} [options.dragStartPredicate.delay=0]\r\n * @param {(Boolean|String)} [options.dragStartPredicate.handle=false]\r\n * @param {?String} [options.dragAxis]\r\n * @param {(Boolean|Function)} [options.dragSort=true]\r\n * @param {Number} [options.dragSortInterval=100]\r\n * @param {(Function|Object)} [options.dragSortPredicate]\r\n * @param {Number} [options.dragSortPredicate.threshold=50]\r\n * @param {String} [options.dragSortPredicate.action=\"move\"]\r\n * @param {Number} [options.dragReleaseDuration=300]\r\n * @param {String} [options.dragReleaseEasing=\"ease\"]\r\n * @param {Object} [options.dragHammerSettings={touchAction: \"none\"}]\r\n * @param {String} [options.containerClass=\"muuri\"]\r\n * @param {String} [options.itemClass=\"muuri-item\"]\r\n * @param {String} [options.itemVisibleClass=\"muuri-item-visible\"]\r\n * @param {String} [options.itemHiddenClass=\"muuri-item-hidden\"]\r\n * @param {String} [options.itemPositioningClass=\"muuri-item-positioning\"]\r\n * @param {String} [options.itemDraggingClass=\"muuri-item-dragging\"]\r\n * @param {String} [options.itemReleasingClass=\"muuri-item-releasing\"]\r\n */\n\n\nvar Grid = function (_Component) {\n  inherits(Grid, _Component);\n\n  function Grid(element, options) {\n    classCallCheck(this, Grid);\n\n    var _this = possibleConstructorReturn(this, (Grid.__proto__ || Object.getPrototypeOf(Grid)).call(this, element, options));\n\n    var inst = _this;\n    var settings = void 0;\n    var items = void 0;\n    var layoutOnResize = void 0; // Allow passing element as selector string. Store element for instance.\n\n    element = _this._element = typeof element === 'string' ? document.querySelector(element) : element; // Throw an error if the container element is not body element or does not\n    // exist within the body element.\n\n    if (!document.body.contains(element)) {\n      throw new Error('Container element must be an existing DOM element');\n    } // Create instance settings by merging the options with default options.\n\n\n    settings = _this._settings = mergeSettings(Grid.defaultOptions, options); // Sanitize dragSort setting.\n\n    if (typeof settings.dragSort !== 'function') {\n      settings.dragSort = !!settings.dragSort;\n    } // Create instance id and store it to the grid instances collection.\n\n\n    _this._id = createUid();\n    gridInstances[_this._id] = inst; // Destroyed flag.\n\n    _this._isDestroyed = false; // The layout object (mutated on every layout).\n\n    _this._layout = {\n      id: 0,\n      items: [],\n      slots: [],\n      setWidth: false,\n      setHeight: false,\n      width: 0,\n      height: 0\n    }; // Create private Emitter instance.\n\n    _this._emitter = new Emitter(); // Add container element's class name.\n\n    addClass(element, settings.containerClass); // Create initial items.\n\n    _this._items = [];\n    items = settings.items;\n\n    if (typeof items === 'string') {\n      toArray$1(element.children).forEach(function (itemElement) {\n        if (items === '*' || elementMatches(itemElement, items)) {\n          inst._items.push(new Item(inst, itemElement));\n        }\n      });\n    } else if (Array.isArray(items) || isNodeList(items)) {\n      _this._items = toArray$1(items).map(function (itemElement) {\n        return new Item(inst, itemElement);\n      });\n    } // If layoutOnResize option is a valid number sanitize it and bind the resize\n    // handler.\n\n\n    layoutOnResize = settings.layoutOnResize;\n\n    if (typeof layoutOnResize !== 'number') {\n      layoutOnResize = layoutOnResize === true ? 0 : -1;\n    }\n\n    if (layoutOnResize >= 0) {\n      window.addEventListener('resize', inst._resizeHandler = debounce(function () {\n        inst.refreshItems().layout();\n      }, layoutOnResize));\n    } // Layout on init if necessary.\n\n\n    if (settings.layoutOnInit) {\n      _this.layout(true);\n    }\n\n    return _this;\n  }\n  /**\r\n   * Public prototype methods\r\n   * ************************\r\n   */\n\n  /**\r\n   * Bind an event listener.\r\n   *\r\n   * @public\r\n   * @memberof Grid.prototype\r\n   * @param {String} event\r\n   * @param {Function} listener\r\n   * @returns {Grid}\r\n   */\n\n\n  createClass(Grid, [{\n    key: 'on',\n    value: function on(event, listener) {\n      this._emitter.on(event, listener);\n\n      return this;\n    }\n    /**\r\n     * Bind an event listener that is triggered only once.\r\n     *\r\n     * @public\r\n     * @memberof Grid.prototype\r\n     * @param {String} event\r\n     * @param {Function} listener\r\n     * @returns {Grid}\r\n     */\n\n  }, {\n    key: 'once',\n    value: function once(event, listener) {\n      this._emitter.once(event, listener);\n\n      return this;\n    }\n    /**\r\n     * Unbind an event listener.\r\n     *\r\n     * @public\r\n     * @memberof Grid.prototype\r\n     * @param {String} event\r\n     * @param {Function} listener\r\n     * @returns {Grid}\r\n     */\n\n  }, {\n    key: 'off',\n    value: function off(event, listener) {\n      this._emitter.off(event, listener);\n\n      return this;\n    }\n    /**\r\n     * Get the container element.\r\n     *\r\n     * @public\r\n     * @memberof Grid.prototype\r\n     * @returns {HTMLElement}\r\n     */\n\n  }, {\n    key: 'getElement',\n    value: function getElement() {\n      return this._element;\n    }\n    /**\r\n     * Get all items. Optionally you can provide specific targets (elements and\r\n     * indices). Note that the returned array is not the same object used by the\r\n     * instance so modifying it will not affect instance's items. All items that\r\n     * are not found are omitted from the returned array.\r\n     *\r\n     * @public\r\n     * @memberof Grid.prototype\r\n     * @param {GridMultiItemQuery} [targets]\r\n     * @returns {Item[]}\r\n     */\n\n  }, {\n    key: 'getItems',\n    value: function getItems(targets) {\n      // Return all items immediately if no targets were provided or if the\n      // instance is destroyed.\n      if (this._isDestroyed || !targets && targets !== 0) {\n        return this._items.slice(0);\n      }\n\n      var ret = [];\n      var targetItems = toArray$1(targets);\n      var item = void 0;\n      var i = void 0; // If target items are defined return filtered results.\n\n      for (i = 0; i < targetItems.length; i++) {\n        item = this._getItem(targetItems[i]);\n        item && ret.push(item);\n      }\n\n      return ret;\n    }\n    /**\r\n     * Update the cached dimensions of the instance's items.\r\n     *\r\n     * @public\r\n     * @memberof Grid.prototype\r\n     * @param {GridMultiItemQuery} [items]\r\n     * @returns {Grid}\r\n     */\n\n  }, {\n    key: 'refreshItems',\n    value: function refreshItems(items) {\n      if (this._isDestroyed) return this;\n      var targets = this.getItems(items);\n      var i = void 0;\n\n      for (i = 0; i < targets.length; i++) {\n        targets[i]._refreshDimensions();\n      }\n\n      return this;\n    }\n    /**\r\n     * Update the sort data of the instance's items.\r\n     *\r\n     * @public\r\n     * @memberof Grid.prototype\r\n     * @param {GridMultiItemQuery} [items]\r\n     * @returns {Grid}\r\n     */\n\n  }, {\n    key: 'refreshSortData',\n    value: function refreshSortData(items) {\n      if (this._isDestroyed) return this;\n      var targetItems = this.getItems(items);\n      var i = void 0;\n\n      for (i = 0; i < targetItems.length; i++) {\n        targetItems[i]._refreshSortData();\n      }\n\n      return this;\n    }\n    /**\r\n     * Synchronize the item elements to match the order of the items in the DOM.\r\n     * This comes handy if you need to keep the DOM structure matched with the\r\n     * order of the items. Note that if an item's element is not currently a child\r\n     * of the container element (if it is dragged for example) it is ignored and\r\n     * left untouched.\r\n     *\r\n     * @public\r\n     * @memberof Grid.prototype\r\n     * @returns {Grid}\r\n     */\n\n  }, {\n    key: 'synchronize',\n    value: function synchronize() {\n      if (this._isDestroyed) return this;\n      var container = this._element;\n      var items = this._items;\n      var fragment = void 0;\n      var element = void 0;\n      var i = void 0; // Append all elements in order to the container element.\n\n      if (items.length) {\n        for (i = 0; i < items.length; i++) {\n          element = items[i]._element;\n\n          if (element.parentNode === container) {\n            fragment = fragment || document.createDocumentFragment();\n            fragment.appendChild(element);\n          }\n        }\n\n        if (fragment) container.appendChild(fragment);\n      } // Emit synchronize event.\n\n\n      this._emit(eventSynchronize);\n\n      return this;\n    }\n    /**\r\n     * Calculate and apply item positions.\r\n     *\r\n     * @public\r\n     * @memberof Grid.prototype\r\n     * @param {Boolean} [instant=false]\r\n     * @param {LayoutCallback} [onFinish]\r\n     * @returns {Grid}\r\n     */\n\n  }, {\n    key: 'layout',\n    value: function layout(instant, onFinish) {\n      if (this._isDestroyed) return this;\n      var inst = this;\n      var element = this._element;\n\n      var layout = this._updateLayout();\n\n      var layoutId = layout.id;\n      var itemsLength = layout.items.length;\n      var counter = itemsLength;\n      var callback = typeof instant === 'function' ? instant : onFinish;\n      var isCallbackFunction = typeof callback === 'function';\n      var callbackItems = isCallbackFunction ? layout.items.slice(0) : null;\n      var isBorderBox = void 0;\n      var item = void 0;\n      var i = void 0; // The finish function, which will be used for checking if all the items\n      // have laid out yet. After all items have finished their animations call\n      // callback and emit layoutEnd event. Only emit layoutEnd event if there\n      // hasn't been a new layout call during this layout.\n\n      function tryFinish() {\n        if (--counter > 0) return;\n        var hasLayoutChanged = inst._layout.id !== layoutId;\n        isCallbackFunction && callback(hasLayoutChanged, callbackItems);\n\n        if (!hasLayoutChanged && inst._hasListeners(eventLayoutEnd)) {\n          inst._emit(eventLayoutEnd, layout.items.slice(0));\n        }\n      } // If grid's width or height was modified, we need to update it's cached\n      // dimensions. Also keep in mind that grid's cached width/height should\n      // always equal to what elem.getBoundingClientRect() would return, so\n      // therefore we need to add the grid element's borders to the dimensions if\n      // it's box-sizing is border-box.\n\n\n      if (layout.setHeight && typeof layout.height === 'number' || layout.setWidth && typeof layout.width === 'number') {\n        isBorderBox = getStyle(element, 'box-sizing') === 'border-box';\n      }\n\n      if (layout.setHeight) {\n        if (typeof layout.height === 'number') {\n          element.style.height = (isBorderBox ? layout.height + this._borderTop + this._borderBottom : layout.height) + 'px';\n        } else {\n          element.style.height = layout.height;\n        }\n      }\n\n      if (layout.setWidth) {\n        if (typeof layout.width === 'number') {\n          element.style.width = (isBorderBox ? layout.width + this._borderLeft + this._borderRight : layout.width) + 'px';\n        } else {\n          element.style.width = layout.width;\n        }\n      } // Emit layoutStart event. Note that this is intentionally emitted after the\n      // container element's dimensions are set, because otherwise there would be\n      // no hook for reacting to container dimension changes.\n\n\n      if (this._hasListeners(eventLayoutStart)) {\n        this._emit(eventLayoutStart, layout.items.slice(0));\n      } // If there are no items let's finish quickly.\n\n\n      if (!itemsLength) {\n        tryFinish();\n        return this;\n      } // If there are items let's position them.\n\n\n      for (i = 0; i < itemsLength; i++) {\n        item = layout.items[i];\n        if (!item) continue; // Update item's position.\n\n        item._left = layout.slots[i * 2];\n        item._top = layout.slots[i * 2 + 1]; // Layout item if it is not dragged.\n\n        item.isDragging() ? tryFinish() : item._layout.start(instant === true, tryFinish);\n      }\n\n      return this;\n    }\n    /**\r\n     * Add new items by providing the elements you wish to add to the instance and\r\n     * optionally provide the index where you want the items to be inserted into.\r\n     * All elements that are not already children of the container element will be\r\n     * automatically appended to the container element. If an element has it's CSS\r\n     * display property set to \"none\" it will be marked as inactive during the\r\n     * initiation process. As long as the item is inactive it will not be part of\r\n     * the layout, but it will retain it's index. You can activate items at any\r\n     * point with grid.show() method. This method will automatically call\r\n     * grid.layout() if one or more of the added elements are visible. If only\r\n     * hidden items are added no layout will be called. All the new visible items\r\n     * are positioned without animation during their first layout.\r\n     *\r\n     * @public\r\n     * @memberof Grid.prototype\r\n     * @param {(HTMLElement|HTMLElement[])} elements\r\n     * @param {Object} [options]\r\n     * @param {Number} [options.index=-1]\r\n     * @param {Boolean} [options.isActive]\r\n     * @param {(Boolean|LayoutCallback|String)} [options.layout=true]\r\n     * @returns {Item[]}\r\n     */\n\n  }, {\n    key: 'add',\n    value: function add(elements, options) {\n      if (this._isDestroyed || !elements) return [];\n      var newItems = toArray$1(elements);\n      if (!newItems.length) return newItems;\n      var opts = options || 0;\n      var layout = opts.layout ? opts.layout : opts.layout === undefined;\n      var items = this._items;\n      var needsLayout = false;\n      var item = void 0;\n      var i = void 0; // Map provided elements into new grid items.\n\n      for (i = 0; i < newItems.length; i++) {\n        item = new Item(this, newItems[i], opts.isActive);\n        newItems[i] = item; // If the item to be added is active, we need to do a layout. Also, we\n        // need to mark the item with the skipNextAnimation flag to make it\n        // position instantly (without animation) during the next layout. Without\n        // the hack the item would animate to it's new position from the northwest\n        // corner of the grid, which feels a bit buggy (imho).\n\n        if (item._isActive) {\n          needsLayout = true;\n          item._layout._skipNextAnimation = true;\n        }\n      } // Add the new items to the items collection to correct index.\n\n\n      arrayInsert(items, newItems, opts.index); // Emit add event.\n\n      if (this._hasListeners(eventAdd)) {\n        this._emit(eventAdd, newItems.slice(0));\n      } // If layout is needed.\n\n\n      if (needsLayout && layout) {\n        this.layout(layout === 'instant', typeof layout === 'function' ? layout : undefined);\n      }\n\n      return newItems;\n    }\n    /**\r\n     * Remove items from the instance.\r\n     *\r\n     * @public\r\n     * @memberof Grid.prototype\r\n     * @param {GridMultiItemQuery} items\r\n     * @param {Object} [options]\r\n     * @param {Boolean} [options.removeElements=false]\r\n     * @param {(Boolean|LayoutCallback|String)} [options.layout=true]\r\n     * @returns {Item[]}\r\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(items, options) {\n      if (this._isDestroyed) return this;\n      var opts = options || 0;\n      var layout = opts.layout ? opts.layout : opts.layout === undefined;\n      var needsLayout = false;\n      var allItems = this.getItems();\n      var targetItems = this.getItems(items);\n      var indices = [];\n      var item = void 0;\n      var i = void 0; // Remove the individual items.\n\n      for (i = 0; i < targetItems.length; i++) {\n        item = targetItems[i];\n        indices.push(allItems.indexOf(item));\n        if (item._isActive) needsLayout = true;\n\n        item._destroy(opts.removeElements);\n      } // Emit remove event.\n\n\n      if (this._hasListeners(eventRemove)) {\n        this._emit(eventRemove, targetItems.slice(0), indices);\n      } // If layout is needed.\n\n\n      if (needsLayout && layout) {\n        this.layout(layout === 'instant', typeof layout === 'function' ? layout : undefined);\n      }\n\n      return targetItems;\n    }\n    /**\r\n     * Show instance items.\r\n     *\r\n     * @public\r\n     * @memberof Grid.prototype\r\n     * @param {GridMultiItemQuery} items\r\n     * @param {Object} [options]\r\n     * @param {Boolean} [options.instant=false]\r\n     * @param {ShowCallback} [options.onFinish]\r\n     * @param {(Boolean|LayoutCallback|String)} [options.layout=true]\r\n     * @returns {Grid}\r\n     */\n\n  }, {\n    key: 'show',\n    value: function show(items, options) {\n      if (this._isDestroyed) return this;\n\n      this._setItemsVisibility(items, true, options);\n\n      return this;\n    }\n    /**\r\n     * Hide instance items.\r\n     *\r\n     * @public\r\n     * @memberof Grid.prototype\r\n     * @param {GridMultiItemQuery} items\r\n     * @param {Object} [options]\r\n     * @param {Boolean} [options.instant=false]\r\n     * @param {HideCallback} [options.onFinish]\r\n     * @param {(Boolean|LayoutCallback|String)} [options.layout=true]\r\n     * @returns {Grid}\r\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(items, options) {\n      if (this._isDestroyed) return this;\n\n      this._setItemsVisibility(items, false, options);\n\n      return this;\n    }\n    /**\r\n     * Filter items. Expects at least one argument, a predicate, which should be\r\n     * either a function or a string. The predicate callback is executed for every\r\n     * item in the instance. If the return value of the predicate is truthy the\r\n     * item in question will be shown and otherwise hidden. The predicate callback\r\n     * receives the item instance as it's argument. If the predicate is a string\r\n     * it is considered to be a selector and it is checked against every item\r\n     * element in the instance with the native element.matches() method. All the\r\n     * matching items will be shown and others hidden.\r\n     *\r\n     * @public\r\n     * @memberof Grid.prototype\r\n     * @param {(Function|String)} predicate\r\n     * @param {Object} [options]\r\n     * @param {Boolean} [options.instant=false]\r\n     * @param {FilterCallback} [options.onFinish]\r\n     * @param {(Boolean|LayoutCallback|String)} [options.layout=true]\r\n     * @returns {Grid}\r\n     */\n\n  }, {\n    key: 'filter',\n    value: function filter(predicate, options) {\n      if (this._isDestroyed || !this._items.length) return this;\n      var itemsToShow = [];\n      var itemsToHide = [];\n      var isPredicateString = typeof predicate === 'string';\n      var isPredicateFn = typeof predicate === 'function';\n      var opts = options || 0;\n      var isInstant = opts.instant === true;\n      var layout = opts.layout ? opts.layout : opts.layout === undefined;\n      var onFinish = typeof opts.onFinish === 'function' ? opts.onFinish : null;\n      var tryFinishCounter = -1;\n      var tryFinish = noop;\n      var item = void 0;\n      var i = void 0; // If we have onFinish callback, let's create proper tryFinish callback.\n\n      if (onFinish) {\n        tryFinish = function tryFinish() {\n          ++tryFinishCounter && onFinish(itemsToShow.slice(0), itemsToHide.slice(0));\n        };\n      } // Check which items need to be shown and which hidden.\n\n\n      if (isPredicateFn || isPredicateString) {\n        for (i = 0; i < this._items.length; i++) {\n          item = this._items[i];\n\n          if (isPredicateFn ? predicate(item) : elementMatches(item._element, predicate)) {\n            itemsToShow.push(item);\n          } else {\n            itemsToHide.push(item);\n          }\n        }\n      } // Show items that need to be shown.\n\n\n      if (itemsToShow.length) {\n        this.show(itemsToShow, {\n          instant: isInstant,\n          onFinish: tryFinish,\n          layout: false\n        });\n      } else {\n        tryFinish();\n      } // Hide items that need to be hidden.\n\n\n      if (itemsToHide.length) {\n        this.hide(itemsToHide, {\n          instant: isInstant,\n          onFinish: tryFinish,\n          layout: false\n        });\n      } else {\n        tryFinish();\n      } // If there are any items to filter.\n\n\n      if (itemsToShow.length || itemsToHide.length) {\n        // Emit filter event.\n        if (this._hasListeners(eventFilter)) {\n          this._emit(eventFilter, itemsToShow.slice(0), itemsToHide.slice(0));\n        } // If layout is needed.\n\n\n        if (layout) {\n          this.layout(layout === 'instant', typeof layout === 'function' ? layout : undefined);\n        }\n      }\n\n      return this;\n    }\n    /**\r\n     * Move item to another index or in place of another item.\r\n     *\r\n     * @public\r\n     * @memberof Grid.prototype\r\n     * @param {GridSingleItemQuery} item\r\n     * @param {GridSingleItemQuery} position\r\n     * @param {Object} [options]\r\n     * @param {String} [options.action=\"move\"]\r\n     *   - Accepts either \"move\" or \"swap\".\r\n     *   - \"move\" moves the item in place of the other item.\r\n     *   - \"swap\" swaps the position of the items.\r\n     * @param {(Boolean|LayoutCallback|String)} [options.layout=true]\r\n     * @returns {Grid}\r\n     */\n\n  }, {\n    key: 'move',\n    value: function move(item, position, options) {\n      if (this._isDestroyed || this._items.length < 2) return this;\n      var items = this._items;\n      var opts = options || 0;\n      var layout = opts.layout ? opts.layout : opts.layout === undefined;\n      var isSwap = opts.action === 'swap';\n      var action = isSwap ? 'swap' : 'move';\n\n      var fromItem = this._getItem(item);\n\n      var toItem = this._getItem(position);\n\n      var fromIndex = void 0;\n      var toIndex = void 0; // Make sure the items exist and are not the same.\n\n      if (fromItem && toItem && fromItem !== toItem) {\n        // Get the indices of the items.\n        fromIndex = items.indexOf(fromItem);\n        toIndex = items.indexOf(toItem); // Do the move/swap.\n\n        if (isSwap) {\n          arraySwap(items, fromIndex, toIndex);\n        } else {\n          arrayMove(items, fromIndex, toIndex);\n        } // Emit move event.\n\n\n        if (this._hasListeners(eventMove)) {\n          this._emit(eventMove, {\n            item: fromItem,\n            fromIndex: fromIndex,\n            toIndex: toIndex,\n            action: action\n          });\n        } // If layout is needed.\n\n\n        if (layout) {\n          this.layout(layout === 'instant', typeof layout === 'function' ? layout : undefined);\n        }\n      }\n\n      return this;\n    }\n    /**\r\n     * Send item to another Grid instance.\r\n     *\r\n     * @public\r\n     * @memberof Grid.prototype\r\n     * @param {GridSingleItemQuery} item\r\n     * @param {Grid} grid\r\n     * @param {GridSingleItemQuery} position\r\n     * @param {Object} [options]\r\n     * @param {HTMLElement} [options.appendTo=document.body]\r\n     * @param {(Boolean|LayoutCallback|String)} [options.layoutSender=true]\r\n     * @param {(Boolean|LayoutCallback|String)} [options.layoutReceiver=true]\r\n     * @returns {Grid}\r\n     */\n\n  }, {\n    key: 'send',\n    value: function send(item, grid, position, options) {\n      if (this._isDestroyed || grid._isDestroyed || this === grid) return this; // Make sure we have a valid target item.\n\n      item = this._getItem(item);\n      if (!item) return this;\n      var opts = options || 0;\n      var container = opts.appendTo || document.body;\n      var layoutSender = opts.layoutSender ? opts.layoutSender : opts.layoutSender === undefined;\n      var layoutReceiver = opts.layoutReceiver ? opts.layoutReceiver : opts.layoutReceiver === undefined; // Start the migration process.\n\n      item._migrate.start(grid, position, container); // If migration was started successfully and the item is active, let's layout\n      // the grids.\n\n\n      if (item._migrate._isActive && item._isActive) {\n        if (layoutSender) {\n          this.layout(layoutSender === 'instant', typeof layoutSender === 'function' ? layoutSender : undefined);\n        }\n\n        if (layoutReceiver) {\n          grid.layout(layoutReceiver === 'instant', typeof layoutReceiver === 'function' ? layoutReceiver : undefined);\n        }\n      }\n\n      return this;\n    }\n    /**\r\n     * Destroy the instance.\r\n     *\r\n     * @public\r\n     * @memberof Grid.prototype\r\n     * @param {Boolean} [removeElements=false]\r\n     * @returns {Grid}\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy(removeElements) {\n      if (this._isDestroyed) return this;\n      var container = this._element;\n\n      var items = this._items.slice(0);\n\n      var i = void 0; // Unbind window resize event listener.\n\n      if (this._resizeHandler) {\n        window.removeEventListener('resize', this._resizeHandler);\n      } // Destroy items.\n\n\n      for (i = 0; i < items.length; i++) {\n        items[i]._destroy(removeElements);\n      } // Restore container.\n\n\n      removeClass(container, this._settings.containerClass);\n      container.style.height = '';\n      container.style.width = ''; // Emit destroy event and unbind all events.\n\n      this._emit(eventDestroy);\n\n      this._emitter.destroy(); // Remove reference from the grid instances collection.\n\n\n      gridInstances[this._id] = undefined; // Flag instance as destroyed.\n\n      this._isDestroyed = true;\n      return this;\n    }\n    /**\r\n     * Private prototype methods\r\n     * *************************\r\n     */\n\n    /**\r\n     * Get instance's item by element or by index. Target can also be an Item\r\n     * instance in which case the function returns the item if it exists within\r\n     * related Grid instance. If nothing is found with the provided target, null\r\n     * is returned.\r\n     *\r\n     * @private\r\n     * @memberof Grid.prototype\r\n     * @param {GridSingleItemQuery} [target]\r\n     * @returns {?Item}\r\n     */\n\n  }, {\n    key: '_getItem',\n    value: function _getItem(target) {\n      // If no target is specified or the instance is destroyed, return null.\n      if (this._isDestroyed || !target && target !== 0) {\n        return null;\n      } // If target is number return the item in that index. If the number is lower\n      // than zero look for the item starting from the end of the items array. For\n      // example -1 for the last item, -2 for the second last item, etc.\n\n\n      if (typeof target === 'number') {\n        return this._items[target > -1 ? target : this._items.length + target] || null;\n      } // If the target is an instance of Item return it if it is attached to this\n      // Grid instance, otherwise return null.\n\n\n      if (target instanceof Item) {\n        return target._gridId === this._id ? target : null;\n      } // In other cases let's assume that the target is an element, so let's try\n      // to find an item that matches the element and return it. If item is not\n      // found return null.\n\n      /** @todo This could be made a lot faster by using Map/WeakMap of elements. */\n\n\n      for (var i = 0; i < this._items.length; i++) {\n        if (this._items[i]._element === target) {\n          return this._items[i];\n        }\n      }\n\n      return null;\n    }\n    /**\r\n     * Recalculates and updates instance's layout data.\r\n     *\r\n     * @private\r\n     * @memberof Grid.prototype\r\n     * @returns {LayoutData}\r\n     */\n\n  }, {\n    key: '_updateLayout',\n    value: function _updateLayout() {\n      var layout = this._layout;\n      var settings = this._settings.layout;\n      var width = void 0;\n      var height = void 0;\n      var newLayout = void 0;\n      var i = void 0; // Let's increment layout id.\n\n      ++layout.id; // Let's update layout items\n\n      layout.items.length = 0;\n\n      for (i = 0; i < this._items.length; i++) {\n        if (this._items[i]._isActive) layout.items.push(this._items[i]);\n      } // Let's make sure we have the correct container dimensions.\n\n\n      this._refreshDimensions(); // Calculate container width and height (without borders).\n\n\n      width = this._width - this._borderLeft - this._borderRight;\n      height = this._height - this._borderTop - this._borderBottom; // Calculate new layout.\n\n      if (typeof settings === 'function') {\n        newLayout = settings(layout.items, width, height);\n      } else {\n        newLayout = packer.getLayout(layout.items, width, height, layout.slots, settings);\n      } // Let's update the grid's layout.\n\n\n      layout.slots = newLayout.slots;\n      layout.setWidth = Boolean(newLayout.setWidth);\n      layout.setHeight = Boolean(newLayout.setHeight);\n      layout.width = newLayout.width;\n      layout.height = newLayout.height;\n      return layout;\n    }\n    /**\r\n     * Emit a grid event.\r\n     *\r\n     * @private\r\n     * @memberof Grid.prototype\r\n     * @param {String} event\r\n     * @param {...*} [arg]\r\n     */\n\n  }, {\n    key: '_emit',\n    value: function _emit() {\n      var _emitter;\n\n      if (this._isDestroyed) return;\n\n      (_emitter = this._emitter).emit.apply(_emitter, arguments);\n    }\n    /**\r\n     * Check if there are any events listeners for an event.\r\n     *\r\n     * @private\r\n     * @memberof Grid.prototype\r\n     * @param {String} event\r\n     * @returns {Boolean}\r\n     */\n\n  }, {\n    key: '_hasListeners',\n    value: function _hasListeners(event) {\n      var listeners = this._emitter._events[event];\n      return !!(listeners && listeners.length);\n    }\n    /**\r\n     * Update container's width, height and offsets.\r\n     *\r\n     * @private\r\n     * @memberof Grid.prototype\r\n     */\n\n  }, {\n    key: '_updateBoundingRect',\n    value: function _updateBoundingRect() {\n      var element = this._element;\n      var rect = element.getBoundingClientRect();\n      this._width = rect.width;\n      this._height = rect.height;\n      this._left = rect.left;\n      this._top = rect.top;\n    }\n    /**\r\n     * Update container's border sizes.\r\n     *\r\n     * @private\r\n     * @memberof Grid.prototype\r\n     * @param {Boolean} left\r\n     * @param {Boolean} right\r\n     * @param {Boolean} top\r\n     * @param {Boolean} bottom\r\n     */\n\n  }, {\n    key: '_updateBorders',\n    value: function _updateBorders(left, right, top, bottom) {\n      var element = this._element;\n      if (left) this._borderLeft = getStyleAsFloat(element, 'border-left-width');\n      if (right) this._borderRight = getStyleAsFloat(element, 'border-right-width');\n      if (top) this._borderTop = getStyleAsFloat(element, 'border-top-width');\n      if (bottom) this._borderBottom = getStyleAsFloat(element, 'border-bottom-width');\n    }\n    /**\r\n     * Refresh all of container's internal dimensions and offsets.\r\n     *\r\n     * @private\r\n     * @memberof Grid.prototype\r\n     */\n\n  }, {\n    key: '_refreshDimensions',\n    value: function _refreshDimensions() {\n      this._updateBoundingRect();\n\n      this._updateBorders(1, 1, 1, 1);\n    }\n    /**\r\n     * Show or hide Grid instance's items.\r\n     *\r\n     * @private\r\n     * @memberof Grid.prototype\r\n     * @param {GridMultiItemQuery} items\r\n     * @param {Boolean} toVisible\r\n     * @param {Object} [options]\r\n     * @param {Boolean} [options.instant=false]\r\n     * @param {(ShowCallback|HideCallback)} [options.onFinish]\r\n     * @param {(Boolean|LayoutCallback|String)} [options.layout=true]\r\n     */\n\n  }, {\n    key: '_setItemsVisibility',\n    value: function _setItemsVisibility(items, toVisible, options) {\n      var grid = this;\n      var targetItems = this.getItems(items);\n      var opts = options || 0;\n      var isInstant = opts.instant === true;\n      var callback = opts.onFinish;\n      var layout = opts.layout ? opts.layout : opts.layout === undefined;\n      var counter = targetItems.length;\n      var startEvent = toVisible ? eventShowStart : eventHideStart;\n      var endEvent = toVisible ? eventShowEnd : eventHideEnd;\n      var method = toVisible ? 'show' : 'hide';\n      var needsLayout = false;\n      var completedItems = [];\n      var hiddenItems = [];\n      var item = void 0;\n      var i = void 0; // If there are no items call the callback, but don't emit any events.\n\n      if (!counter) {\n        if (typeof callback === 'function') callback(targetItems);\n        return;\n      } // Emit showStart/hideStart event.\n\n\n      if (this._hasListeners(startEvent)) {\n        this._emit(startEvent, targetItems.slice(0));\n      } // Show/hide items.\n\n\n      for (i = 0; i < targetItems.length; i++) {\n        item = targetItems[i]; // If inactive item is shown or active item is hidden we need to do\n        // layout.\n\n        if (toVisible && !item._isActive || !toVisible && item._isActive) {\n          needsLayout = true;\n        } // If inactive item is shown we also need to do a little hack to make the\n        // item not animate it's next positioning (layout).\n\n\n        if (toVisible && !item._isActive) {\n          item._layout._skipNextAnimation = true;\n        } // If a hidden item is being shown we need to refresh the item's\n        // dimensions.\n\n\n        if (toVisible && item._visibility._isHidden) {\n          hiddenItems.push(item);\n        } // Show/hide the item.\n\n\n        item._visibility[method](isInstant, function (interrupted, item) {\n          // If the current item's animation was not interrupted add it to the\n          // completedItems array.\n          if (!interrupted) completedItems.push(item); // If all items have finished their animations call the callback\n          // and emit showEnd/hideEnd event.\n\n          if (--counter < 1) {\n            if (typeof callback === 'function') callback(completedItems.slice(0));\n            if (grid._hasListeners(endEvent)) grid._emit(endEvent, completedItems.slice(0));\n          }\n        });\n      } // Refresh hidden items.\n\n\n      if (hiddenItems.length) this.refreshItems(hiddenItems); // Layout if needed.\n\n      if (needsLayout && layout) {\n        this.layout(layout === 'instant', typeof layout === 'function' ? layout : undefined);\n      }\n    }\n  }]);\n  return Grid;\n}(Component);\n/**\r\n * Public properties\r\n * *****************\r\n */\n\n/**\r\n * @see Item\r\n */\n\n\nGrid.Item = Item;\n/**\r\n * @see ItemLayout\r\n */\n\nGrid.ItemLayout = ItemLayout;\n/**\r\n * @see ItemVisibility\r\n */\n\nGrid.ItemVisibility = ItemVisibility;\n/**\r\n * @see ItemRelease\r\n */\n\nGrid.ItemRelease = ItemRelease;\n/**\r\n * @see ItemMigrate\r\n */\n\nGrid.ItemMigrate = ItemMigrate;\n/**\r\n * @see ItemAnimate\r\n */\n\nGrid.ItemAnimate = ItemAnimate;\n/**\r\n * @see ItemDrag\r\n */\n\nGrid.ItemDrag = ItemDrag;\n/**\r\n * @see Emitter\r\n */\n\nGrid.Emitter = Emitter;\n/**\r\n * Default options for Grid instance.\r\n *\r\n * @public\r\n * @memberof Grid\r\n */\n\nGrid.defaultOptions = {\n  // Item elements\n  items: '*',\n  // Default show animation\n  showDuration: 300,\n  showEasing: 'ease',\n  // Default hide animation\n  hideDuration: 300,\n  hideEasing: 'ease',\n  // Item's visible/hidden state styles\n  visibleStyles: {\n    opacity: '1',\n    transform: 'scale(1)'\n  },\n  hiddenStyles: {\n    opacity: '0',\n    transform: 'scale(0.5)'\n  },\n  // Layout\n  layout: {\n    fillGaps: false,\n    horizontal: false,\n    alignRight: false,\n    alignBottom: false,\n    rounding: true\n  },\n  layoutOnResize: 100,\n  layoutOnInit: true,\n  layoutDuration: 300,\n  layoutEasing: 'ease',\n  // Sorting\n  sortData: null,\n  // Drag & Drop\n  dragEnabled: false,\n  dragContainer: null,\n  dragStartPredicate: {\n    distance: 0,\n    delay: 0,\n    handle: false\n  },\n  dragAxis: null,\n  dragSort: true,\n  dragSortInterval: 100,\n  dragSortPredicate: {\n    threshold: 50,\n    action: 'move'\n  },\n  dragReleaseDuration: 300,\n  dragReleaseEasing: 'ease',\n  dragHammerSettings: {\n    touchAction: 'none'\n  },\n  // Classnames\n  containerClass: 'muuri',\n  itemClass: 'muuri-item',\n  itemVisibleClass: 'muuri-item-shown',\n  itemHiddenClass: 'muuri-item-hidden',\n  itemPositioningClass: 'muuri-item-positioning',\n  itemDraggingClass: 'muuri-item-dragging',\n  itemReleasingClass: 'muuri-item-releasing'\n};\n/**\r\n * Sort items. There are three ways to sort the items. The first is simply by\r\n * providing a function as the comparer which works identically to native\r\n * array sort. Alternatively you can sort by the sort data you have provided\r\n * in the instance's options. Just provide the sort data key(s) as a string\r\n * (separated by space) and the items will be sorted based on the provided\r\n * sort data keys. Lastly you have the opportunity to provide a presorted\r\n * array of items which will be used to sync the internal items array in the\r\n * same order.\r\n *\r\n * @public\r\n * @memberof Grid.prototype\r\n * @param {(Function|Item[]|String|String[])} comparer\r\n * @param {Object} [options]\r\n * @param {Boolean} [options.descending=false]\r\n * @param {(Boolean|LayoutCallback|String)} [options.layout=true]\r\n * @returns {Grid}\r\n */\n\nGrid.prototype.sort = function () {\n  var sortComparer = void 0;\n  var isDescending = void 0;\n  var origItems = void 0;\n  var indexMap = void 0;\n\n  function parseCriteria(data) {\n    return data.trim().split(' ').map(function (val) {\n      return val.split(':');\n    });\n  }\n\n  function getIndexMap(items) {\n    var ret = {};\n\n    for (var i = 0; i < items.length; i++) {\n      ret[items[i]._id] = i;\n    }\n\n    return ret;\n  }\n\n  function compareIndices(itemA, itemB) {\n    var indexA = indexMap[itemA._id];\n    var indexB = indexMap[itemB._id];\n    return isDescending ? indexB - indexA : indexA - indexB;\n  }\n\n  function defaultComparer(a, b) {\n    var result = 0;\n    var criteriaName = void 0;\n    var criteriaOrder = void 0;\n    var valA = void 0;\n    var valB = void 0; // Loop through the list of sort criteria.\n\n    for (var i = 0; i < sortComparer.length; i++) {\n      // Get the criteria name, which should match an item's sort data key.\n      criteriaName = sortComparer[i][0];\n      criteriaOrder = sortComparer[i][1]; // Get items' cached sort values for the criteria. If the item has no sort\n      // data let's update the items sort data (this is a lazy load mechanism).\n\n      valA = (a._sortData ? a : a._refreshSortData())._sortData[criteriaName];\n      valB = (b._sortData ? b : b._refreshSortData())._sortData[criteriaName]; // Sort the items in descending order if defined so explicitly. Otherwise\n      // sort items in ascending order.\n\n      if (criteriaOrder === 'desc' || !criteriaOrder && isDescending) {\n        result = valB < valA ? -1 : valB > valA ? 1 : 0;\n      } else {\n        result = valA < valB ? -1 : valA > valB ? 1 : 0;\n      } // If we have -1 or 1 as the return value, let's return it immediately.\n\n\n      if (result) return result;\n    } // If values are equal let's compare the item indices to make sure we\n    // have a stable sort.\n\n\n    if (!result) {\n      if (!indexMap) indexMap = getIndexMap(origItems);\n      result = compareIndices(a, b);\n    }\n\n    return result;\n  }\n\n  function customComparer(a, b) {\n    var result = sortComparer(a, b); // If descending let's invert the result value.\n\n    if (isDescending && result) result = -result; // If we have a valid result (not zero) let's return it right away.\n\n    if (result) return result; // If result is zero let's compare the item indices to make sure we have a\n    // stable sort.\n\n    if (!indexMap) indexMap = getIndexMap(origItems);\n    return compareIndices(a, b);\n  }\n\n  return function (comparer, options) {\n    if (this._isDestroyed || this._items.length < 2) return this;\n    var items = this._items;\n    var opts = options || 0;\n    var layout = opts.layout ? opts.layout : opts.layout === undefined;\n    var i = void 0; // Setup parent scope data.\n\n    sortComparer = comparer;\n    isDescending = !!opts.descending;\n    origItems = items.slice(0);\n    indexMap = null; // If function is provided do a native array sort.\n\n    if (typeof sortComparer === 'function') {\n      items.sort(customComparer);\n    } // Otherwise if we got a string, let's sort by the sort data as provided in\n    // the instance's options.\n    else if (typeof sortComparer === 'string') {\n      sortComparer = parseCriteria(comparer);\n      items.sort(defaultComparer);\n    } // Otherwise if we got an array, let's assume it's a presorted array of the\n    // items and order the items based on it.\n    else if (Array.isArray(sortComparer)) {\n      if (sortComparer.length !== items.length) {\n        throw new Error('[' + namespace + '] sort reference items do not match with grid items.');\n      }\n\n      for (i = 0; i < items.length; i++) {\n        if (!sortComparer.includes(items[i])) {\n          throw new Error('[' + namespace + '] sort reference items do not match with grid items.');\n        }\n\n        items[i] = sortComparer[i];\n      }\n\n      if (isDescending) items.reverse();\n    } // Otherwise let's just skip it, nothing we can do here.\n    else {\n      /** @todo Maybe throw an error here? */\n      return this;\n    } // Emit sort event.\n\n\n    if (this._hasListeners(eventSort)) {\n      this._emit(eventSort, items.slice(0), origItems);\n    } // If layout is needed.\n\n\n    if (layout) {\n      this.layout(layout === 'instant', typeof layout === 'function' ? layout : undefined);\n    }\n\n    return this;\n  };\n}();\n/**\r\n * Private helpers\r\n * ***************\r\n */\n\n/**\r\n * Merge default settings with user settings. The returned object is a new\r\n * object with merged values. The merging is a deep merge meaning that all\r\n * objects and arrays within the provided settings objects will be also merged\r\n * so that modifying the values of the settings object will have no effect on\r\n * the returned object.\r\n *\r\n * @param {Object} defaultSettings\r\n * @param {Object} [userSettings]\r\n * @returns {Object} Returns a new object.\r\n */\n\n\nfunction mergeSettings(defaultSettings, userSettings) {\n  // Create a fresh copy of default settings.\n  var ret = mergeObjects({}, defaultSettings); // Merge user settings to default settings.\n\n  if (userSettings) {\n    ret = mergeObjects(ret, userSettings);\n  } // Handle visible/hidden styles manually so that the whole object is\n  // overridden instead of the props.\n\n\n  ret.visibleStyles = (userSettings || 0).visibleStyles || (defaultSettings || 0).visibleStyles;\n  ret.hiddenStyles = (userSettings || 0).hiddenStyles || (defaultSettings || 0).hiddenStyles;\n  return ret;\n}\n/**\r\n * Merge two objects recursively (deep merge). The source object's properties\r\n * are merged to the target object.\r\n *\r\n * @param {Object} target\r\n *   - The target object.\r\n * @param {Object} source\r\n *   - The source object.\r\n * @returns {Object} Returns the target object.\r\n */\n\n\nfunction mergeObjects(target, source) {\n  var sourceKeys = Object.keys(source);\n  var length = sourceKeys.length;\n  var isSourceObject = void 0;\n  var propName = void 0;\n  var i = void 0;\n\n  for (i = 0; i < length; i++) {\n    propName = sourceKeys[i];\n    isSourceObject = isPlainObject(source[propName]); // If target and source values are both objects, merge the objects and\n    // assign the merged value to the target property.\n\n    if (isPlainObject(target[propName]) && isSourceObject) {\n      target[propName] = mergeObjects(mergeObjects({}, target[propName]), source[propName]);\n      continue;\n    } // If source's value is object and target's is not let's clone the object as\n    // the target's value.\n\n\n    if (isSourceObject) {\n      target[propName] = mergeObjects({}, source[propName]);\n      continue;\n    } // If source's value is an array let's clone the array as the target's\n    // value.\n\n\n    if (Array.isArray(source[propName])) {\n      target[propName] = source[propName].slice(0);\n      continue;\n    } // In all other cases let's just directly assign the source's value as the\n    // target's value.\n\n\n    target[propName] = source[propName];\n  }\n\n  return target;\n}\n\nvar MuuriGrid = function (_Component) {\n  inherits(MuuriGrid, _Component);\n\n  function MuuriGrid(props) {\n    classCallCheck(this, MuuriGrid);\n\n    var _this = possibleConstructorReturn(this, (MuuriGrid.__proto__ || Object.getPrototypeOf(MuuriGrid)).call(this, props));\n\n    _this.grid = new Grid(props.node, props.defaultOptions);\n    _this.getMethod = _this.getMethod.bind(_this);\n    _this.getEvent = _this.getEvent.bind(_this);\n    _this.getItemMethod = _this.getItemMethod.bind(_this);\n    return _this;\n  }\n\n  createClass(MuuriGrid, [{\n    key: 'getMethod',\n    value: function getMethod(method, param1, param2, param3, param4) {\n      try {\n        var result = void 0;\n\n        switch (method) {\n          case 'getElement':\n            result = this.grid.getElement();\n            break;\n\n          case 'getItems':\n            result = this.grid.getItems(param1);\n            break;\n\n          case 'refreshItems':\n            result = this.grid.refreshItems(param1);\n            break;\n\n          case 'refreshSortData':\n            result = this.grid.refreshSortData(param1);\n            break;\n\n          case 'synchronize':\n            result = this.grid.synchronize();\n            break;\n\n          case 'layout':\n            result = this.grid.layout(param1, param2);\n            break;\n\n          case 'add':\n            result = this.grid.add(param1, param2);\n            break;\n\n          case 'remove':\n            result = this.grid.remove(param1, param2);\n            break;\n\n          case 'show':\n            result = this.grid.show(param1, param2);\n            break;\n\n          case 'hide':\n            result = this.grid.hide(param1, param2);\n            break;\n\n          case 'filter':\n            result = this.grid.filter(param1, param2);\n            break;\n\n          case 'sort':\n            result = this.grid.sort(param1, param2);\n            break;\n\n          case 'move':\n            result = this.grid.move(param1, param2, param3);\n            break;\n\n          case 'send':\n            result = this.grid.send(param1, param2, param3, param4);\n            break;\n\n          case 'on':\n            result = this.grid.on(param1, param2);\n            break;\n\n          case 'once':\n            result = this.grid.once(param1, param2);\n            break;\n\n          case 'off':\n            result = this.grid.off(param1, param2);\n            break;\n\n          case 'destroy':\n            result = this.grid.destroy(param1);\n            break;\n\n          default:\n            result = null;\n            console.error('Invalid \\'Method\\' provided: ' + method);\n            console.error('Check the Muuri documentation for a list of valid methods.');\n            break;\n        }\n\n        return result;\n      } catch (error) {\n        console.error('The following error occured in \\'getMethod()\\': ' + error);\n      }\n    }\n  }, {\n    key: 'getEvent',\n    value: function getEvent(event, param1, param2, callback) {\n      var _this2 = this;\n\n      var eventsList = ['synchronize', 'layoutStart', 'layoutEnd', 'add', 'remove', 'showStart', 'showEnd', 'hideStart', 'hideEnd', 'filter', 'sort', 'move', 'send', 'beforeSend', 'receive', 'beforeReceive', 'dragInit', 'dragStart', 'dragMove', 'dragScroll', 'dragEnd', 'dragReleaseStart', 'dragReleaseEnd', 'destroy'];\n\n      if (event === undefined || event === null || eventsList.indexOf(event) === -1) {\n        console.error('Invalid event provided to \\'getEvent()\\': ' + event);\n      } else {\n        try {\n          this.grid.on(event, function (param1, param2) {\n            if (callback) {\n              callback(param1, param2);\n            }\n\n            _this2.grid.synchronize();\n          });\n        } catch (error) {\n          console.error('The following error occured in \\'getEvent()\\': ' + error);\n        }\n      }\n    }\n  }, {\n    key: 'getItemMethod',\n    value: function getItemMethod(method, item) {\n      try {\n        var result = void 0;\n\n        switch (method) {\n          case 'getGrid':\n            result = item.getGrid();\n            break;\n\n          case 'getElement':\n            result = item.getElement();\n            break;\n\n          case 'getWidth':\n            result = item.getWidth();\n            break;\n\n          case 'getHeight':\n            result = item.getHeight();\n            break;\n\n          case 'getMargin':\n            result = item.getMargin();\n            break;\n\n          case 'getPosition':\n            result = item.getPosition();\n            break;\n\n          case 'isActive':\n            result = item.isActive();\n            break;\n\n          case 'isVisible':\n            result = item.isVisible();\n            break;\n\n          case 'isShowing':\n            result = item.isShowing();\n            break;\n\n          case 'isHiding':\n            result = item.isHiding();\n            break;\n\n          case 'isPositioning':\n            result = item.isPositioning();\n            break;\n\n          case 'isDragging':\n            result = item.isDragging();\n            break;\n\n          case 'isReleasing':\n            result = item.isReleasing();\n            break;\n\n          case 'isDestroyed':\n            result = item.isDestroyed();\n            break;\n\n          default:\n            result = null;\n            console.error('Invalid \\'Item Event\\' provided: ' + method);\n            console.error('Check the Muuri documentation for a list of valid item events.');\n            break;\n        }\n\n        return result;\n      } catch (error) {\n        console.error('The following error occured in \\'getItemMethod()\\': ' + error);\n      }\n    }\n  }]);\n  return MuuriGrid;\n}(Component);\n\nMuuriGrid.propTypes = {\n  node: PropTypes.node.isRequired,\n  defaultOptions: PropTypes.object\n};\nexport default MuuriGrid;"],"names":["gridInstances","eventLayoutStart","eventLayoutEnd","eventRemove","eventFilter","eventSort","eventMove","eventSend","eventBeforeSend","eventReceive","eventBeforeReceive","_typeof","Symbol","iterator","obj","constructor","prototype","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","inherits","subClass","superClass","create","value","setPrototypeOf","__proto__","possibleConstructorReturn","self","call","ReferenceError","Emitter","_Component","this","_this","getPrototypeOf","_events","_queue","_counter","_isDestroyed","event","listener","listeners","push","callback","off","apply","undefined","arguments","bind","on","splice","arg1","arg2","arg3","queue","qLength","aLength","events","Component","isTransformSupported","transformStyle","transformProp","style","forEach","prefix","propName","document","documentElement","toLowerCase","stylesCache","WeakMap","getStyle","element","styles","get","window","getComputedStyle","set","getPropertyValue","styleNameRegEx","getStyleName","string","replace","setStyles","prop","ItemAnimate","_element","_animation","_callback","_props","_values","_keyframes","_options","_onFinish","propsFrom","propsTo","options","animation","currentProps","currentValues","opts","cancelAnimation","propCount","propIndex","indexOf","cancel","onFinish","_propName","animKeyframes","animOptions","duration","easing","animate","onfinish","propValue","stop","module","hammer","exportName","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","round","Math","abs","now","Date","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","Array","isArray","each","hasOwnProperty","deprecate","method","name","message","deprecationMessage","e","Error","stack","log","console","warn","output","index","source","nextKey","extend","dest","src","merge","keys","inherit","child","base","properties","childP","baseP","_super","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","trim","split","inArray","findByKey","toArray","slice","uniqueArray","sort","results","values","a","b","prefixed","property","camelProp","toUpperCase","_uniqueId","getWindowForElement","doc","ownerDocument","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","DIRECTION_VERTICAL","DIRECTION_UP","PROPS_XY","PROPS_CLIENT_XY","Input","manager","inputTarget","domHandler","ev","enable","init","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","offset","offsetDelta","prevDelta","prevInput","x","deltaX","y","deltaY","computeDeltaXY","offsetDirection","getDirection","start","end","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","v","computeIntervalInputData","srcEvent","computeInputData","emit","recognize","clientX","clientY","p1","p2","sqrt","atan2","PI","evEl","evTarget","evWin","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","TouchMouseInput","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","isSyntheticEvent","t","dx","dy","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","compute","actions","update","touchAction","recognizers","recognizer","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","DIRECTION_LEFT","preventSrc","STATE_FAILED","Recognizer","defaults","id","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","preset","Manager","handlers","oldCssProps","inputClass","toggleCssProps","item","add","recognizeWith","requireFailure","cssProps","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","DIRECTION_HORIZONTAL","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","force","stopped","curRecognizer","existing","remove","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","DIRECTION_NONE","DIRECTION_RIGHT","DIRECTION_DOWN","DIRECTION_ALL","Tap","Pan","Swipe","Pinch","Rotate","Press","exports","raf","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cb","ticker","Ticker","_nextTick","_reads","_writes","_batch","_batchReads","_batchWrites","_flush","readCallback","writeCallback","isImportant","currentIndex","unshift","reads","writes","batch","batchReads","batchWrites","layoutTick","visibilityTick","moveTick","scrollTick","cancelLayoutTick","itemId","cancelVisibilityTick","cancelMoveTick","cancelScrollTick","proto","Element","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","elementMatches","el","selector","addClass","className","classList","normalizeArrayIndex","array","isMigration","maxIndex","max","arrayMove","fromIndex","toIndex","from","to","arraySwap","withIndex","indexA","indexB","temp","actionCancel","actionFinish","debounce","wait","action","isTransformed","transform","display","getContainingBlock","includeSelf","ret","parentElement","getStyleAsFloat","parseFloat","offsetA","offsetB","offsetDiff","getOffset","offsetData","rect","left","top","pageXOffset","pageYOffset","getBoundingClientRect","getOffsetDiff","elemA","elemB","compareContainingBlocks","translateData","getTranslate","matrixData","getTranslateString","tempArray","arrayInsert","items","startIndex","arr","arr2","toConsumableArray","toString","isPlainObject","itemRect","targetRect","returnData","rootGridArray","removeClass","hasTransformLeak","checkTransformLeak","ItemDrag","drag","grid","getGrid","settings","_settings","hammer$$1","startPredicate","dragStartPredicate","defaultStartPredicate","startPredicateState","startPredicateResult","_item","_gridId","_id","_hammer","_isMigrating","_reset","_onScroll","_prepareMove","_applyMove","_prepareScroll","_applyScroll","_checkOverlap","_forceResolveStartPredicate","_onStart","_checkOverlapDebounce","dragSortInterval","dragHammerSettings","_isActive","_onMove","isResolved","_onEnd","_getGrid","_finishMigration","_unbindScrollListeners","appendChild","_gridX","_gridY","itemDraggingClass","_container","_containingBlock","_lastEvent","_lastScrollEvent","_scrollers","_left","_top","_elementClientX","_elementClientY","_containerDiffX","_containerDiffY","gridContainer","dragContainer","scrollers","containerScrollers","getScrollParents","includes","config","_startPredicateData","delay","handle","predicate","handleElement","handleRect","handleLeft","handleTop","handleWidth","handleHeight","pointer","pageX","pageY","width","height","_resetStartPredicate","isClick","tagName","href","getAttribute","open","location","openAnchorHref","delayTimer","targetIndex","sortAction","result","currentGrid","targetGrid","dragSortPredicate","defaultSortPredicate","_items","_hasListeners","_emit","fromGrid","toGrid","_sortData","layout","release","_release","isActive","targetGridElement","targetSettings","targetContainer","currentSettings","currentContainer","translate","itemClass","itemVisibleClass","itemHiddenClass","_refreshDimensions","_refreshSortData","_drag","dragEnabled","_child","removeAttribute","visibleStyles","hiddenStyles","migrate","_migrate","containingBlock","currentLeft","currentTop","elementRect","hasDragContainer","isPositioning","_layout","isReleasing","_bindScrollListeners","axis","dragAxis","xDiff","yDiff","dragSort","getRectOverlapScore","min","isScrollable","overflow","body","elems","map","elem","isInner","position","visibility","outer","inner","removeChild","_setupStartPredicate","_getStartPredicateHandle","_resolveStartPredicate","_finishStartPredicate","rootGrid","sortThreshold","_width","_height","bestScore","gridScore","grids","_updateBoundingRect","getTargetGrid","gridOffsetLeft","gridOffsetTop","matchScore","matchIndex","hasValidTargets","score","_marginLeft","_marginTop","_updateBorders","_borderLeft","_borderTop","Infinity","Queue","singleCallback","snapshot","ItemLayout","_isInterrupted","_currentStyles","_targetStyles","_currentLeft","_currentTop","_offsetLeft","_offsetTop","_skipNextAnimation","_animateOptions","_finish","_setupAnimation","_startAnimation","instant","gridSettings","isJustReleased","_isPositioningStarted","animDuration","dragReleaseDuration","layoutDuration","animEasing","dragReleaseEasing","layoutEasing","animEnabled","isAnimating","flush","_updateOffsets","_updateTargetStyles","_animate","processCallbackQueue","targetStyles","itemPositioningClass","tempStyles","ItemMigrate","container","containerDiff","isVisible","targetElement","targetItems","targetItem","translateX","translateY","_getItem","_visibility","_stopAnimation","abort","currentStyles","gridElement","tempStyles$1","ItemRelease","itemReleasingClass","ItemVisibility","_isHidden","_isHiding","_isShowing","_finishShow","_finishHide","toVisible","parseInt","showDuration","hideDuration","showEasing","hideEasing","isInstant","_animateChild","current","getCurrentStyles","finishStyles","createUid","itemSlot","rectA","rectB","Item","children","right","_marginRight","bottom","_marginBottom","getters","sortData","removeElement","Packer","_slots","_slotSizes","_freeSlots","_newSlots","_rectItem","_rectStore","_rectId","slots","setWidth","setHeight","_sortRectsLeftTop","_sortRectsTopLeft","fillGaps","isHorizontal","horizontal","alignRight","alignBottom","rounding","slotSizes","_addSlot","rectId","rectStore","rectItem","trackSize","freeSlots","newSlots","potentialSlots","ignoreCurrentSlots","ii","_getRect","_addRect","_splitRect","_purgeRects","hole","_doRectsOverlap","rectIds","_isRectWithinRect","aId","bId","isNodeList","toArray$1","packer","noop","Grid","inst","layoutOnResize","querySelector","contains","defaultSettings","userSettings","mergeObjects","mergeSettings","defaultOptions","_emitter","containerClass","itemElement","_resizeHandler","refreshItems","layoutOnInit","once","targets","getItems","fragment","createDocumentFragment","_updateLayout","layoutId","itemsLength","counter","isCallbackFunction","callbackItems","isBorderBox","tryFinish","hasLayoutChanged","_borderBottom","_borderRight","isDragging","elements","newItems","needsLayout","allItems","indices","_destroy","removeElements","_setItemsVisibility","itemsToShow","itemsToHide","isPredicateString","isPredicateFn","tryFinishCounter","show","hide","isSwap","fromItem","toItem","appendTo","layoutSender","layoutReceiver","newLayout","getLayout","Boolean","startEvent","endEvent","completedItems","hiddenItems","interrupted","sourceKeys","isSourceObject","opacity","sortComparer","isDescending","origItems","indexMap","getIndexMap","compareIndices","itemA","itemB","defaultComparer","criteriaName","criteriaOrder","valA","valB","customComparer","comparer","descending","reverse","MuuriGrid","getMethod","getEvent","getItemMethod","param1","param2","param3","param4","getElement","refreshSortData","synchronize","move","send","error","_this2","getWidth","getHeight","getMargin","getPosition","isShowing","isHiding","isDestroyed","propTypes"],"sourceRoot":""}